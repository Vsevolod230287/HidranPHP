<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[SitePoint]]></title><description><![CDATA[Learn CSS &#124; HTML5 &#124; JavaScript &#124; Wordpress &#124; Tutorials-Web Development &#124; Reference &#124; Books and More]]></description><link>https://www.sitepoint.com</link><generator>GatsbyJS</generator><lastBuildDate>Thu, 27 Jan 2022 16:06:09 GMT</lastBuildDate><item><title><![CDATA[How to Create an Impressive GitHub Profile README]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/github-profile-readme/?utm_source=rss"
              title="How to Create an Impressive GitHub Profile README"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2022/01/1643073859github-readme.jpg"
        alt="How to Create an Impressive GitHub Profile"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2022/01/1643073859github-readme-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2022/01/1643073859github-readme-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2022/01/1643073859github-readme-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2022/01/1643073859github-readme.jpg 1200w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p>If you visit my profile on GitHub, you&rsquo;ll notice that it contains images, social network links, some GitHub statistics and links to my blogs, which makes the GitHub profile stand out. This is possible through the GitHub profile README feature. In this article, we&rsquo;ll learn how to create a GitHub profile README. We&rsquo;ll cover the [&hellip;]</p>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/github-profile-readme/?utm_source=rss">How to Create an Impressive GitHub Profile README</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/github-profile-readme/?utm_source=rss</link><guid isPermaLink="false">/?p=256440</guid><category><![CDATA[Web]]></category><dc:creator><![CDATA[Nida Khan]]></dc:creator><pubDate>Wed, 26 Jan 2022 00:00:00 GMT</pubDate><metaDesc>Did you know you can create a stunning GitHub profile README page? Learn how to add images, social and blog links, GitHub stats, and more.</metaDesc></item><item><title><![CDATA[The Best Mechanical Keyboards for Developers]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/best-mechanical-keyboards/?utm_source=rss"
              title="The Best Mechanical Keyboards for Developers"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2022/01/1643173051mechanical-keyboards2.jpg"
        alt="The Best Mechanical Keyboards for Developers"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2022/01/1643173051mechanical-keyboards2-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2022/01/1643173051mechanical-keyboards2-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2022/01/1643173051mechanical-keyboards2-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2022/01/1643173051mechanical-keyboards2.jpg 1200w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong>Like the weight of a good pen or the balance of a chef’s knife, you can appreciate the quality of a mechanical keyboard just by using it. The stability of the metal casing, the confident click of the keys, and the playful ambience of the RGB backlighting invite you to type.</strong></p>
<p>A keyboard is one of a developer’s primary tools, so get a good one. You need one that’s reliable, feels comfortable, and makes you productive. It’s a choice that deserves the investment of some time and money.</p>
<h2 id="developersdeserveabetterkeyboard">Developers Deserve a Better Keyboard</h2>
<p>Everyone can benefit from a mechanical keyboard, but they’re particularly suitable for developers because you spend a great deal of time typing.</p>
<p>They use mechanical switches that inspire more confidence than squishy membrane keyboards. They leave no doubt when you’ve pressed a key, and many people type faster and more accurately because of it.</p>
<p>They&#8217;re also better for your health, especially if you’re a heavy typist. They have longer travel that requires your fingers to move through a greater distance to complete a keystroke, requiring less force.</p>
<p>If you find yourself typing for hours at a time, you’re much less likely to develop strain injuries using a mechanical keyboard.</p>
<h2 id="whattolookforinamechanicalkeyboard">What to Look for in a Mechanical Keyboard</h2>
<p>Here are a few things you should weigh up when choosing a mechanical keyboard.</p>
<h3 id="selecttherightkeyboardlayout">Select the right keyboard layout</h3>
<p>One of the most appealing things about mechanical keyboards is that there is so much variety. That starts with the keyboard layout. You choose whether to include function keys, cursor keys, a numeric keypad, and more.</p>
<p>For example, you might want dedicated media keys or programmable macro keys. You may need a numeric keyboard, or prefer the smaller size of a keyboard without one.</p>
<p>Here are the main keyboard layouts used by mechanical keyboards:</p>
<ul>
<li>100% or full-size, typically 104 keys, including the alpha block, function keys, cursor keys, numeric keypad.</li>
<li>80% or TKL (tenkeyless), typically 87 keys including the alpha block, function keys, cursor keys.</li>
<li>75%, typically 82 keys including most of the keys on a TKL keyboard combined into a single block to be more compact.</li>
<li>65%, typically 68 keys including just the alpha block and most cursor keys.</li>
<li>60%, typically 60 keys and the alpha block only.</li>
<li>40%, typically 49 keys made of a minimal alpha block layout where many keys serve two functions and require the use of a second key.</li>
</ul>
<p>In this roundup, I’ve assumed most developers prefer lots of keys on their workhorse keyboard and recommend 100% or TKL. However, if you prefer something more portable, most keyboard manufacturers offer a range of sizes.</p>
<h3 id="thechoiceofswitchesdeterminesyourtypingexperience">The choice of switches determines your typing experience</h3>
<p>Many developers agonize over the choice of mechanical switches, because this makes the greatest difference to how your keyboard will feel and sound. While you may find the descriptions below helpful, you’ll make a much better choice if you can find a way to test the different switches in person.</p>
<p>Here are some of the more popular brands of mechanical switches and the main switch types that are available.</p>
<p><a rel="nofollow" href="https://www.cherrymx.de/en/cherry-mx.html">Cherry MX Switches</a> (used by Corsair, Kinesis):</p>
<ul>
<li>Red switches are linear</li>
<li>Brown switches are tactile</li>
<li>Blue switches are clicky</li>
</ul>
<p><a rel="nofollow" href="https://switchandclick.com/gateron-switch-guide-budget-friendly-and-smooth/">Gateron Switches</a> (used by SteelSeries, Keychron):</p>
<ul>
<li>Red and yellow switches are linear and quiet</li>
<li>Blue and green switches are clicky</li>
<li>Brown switches are tactile and gentle</li>
<li>Black switches are linear and gentle</li>
<li>White switches are linear and quiet</li>
</ul>
<p><a rel="nofollow" href="https://switchandclick.com/outemu-switches-are-they-good/">Outemu Switches</a> (used by Redragon):</p>
<ul>
<li>Brown switches are tactile</li>
<li>Blue switches are tactile and clicky</li>
<li>Red and black switches are linear</li>
</ul>
<p><a rel="nofollow" href="https://www.logitechg.com/en-au/innovation/mechanical-switches.html">Logitech</a>, <a rel="nofollow" href="https://www2.razer.com/ap-en/razer-mechanical-switches">Razer</a> and <a rel="nofollow" href="https://www.hyperxgaming.com/us/keyboards/hyperx-switches">HyperX</a> make their own range of mechanical switches.</p>
<p>Some companies, like Razer and Gateron, offer optical switches. They’re faster because they communicate keystrokes using infrared light rather than an electrical contact. They’re ideal for gaming, but probably don’t offer any real benefit when coding.</p>
<p>So far, we’ve just described the switches. The actual keys that are attached to the switches are called “key caps”, and they can usually be switched out as well. Many colors and styles are available if you want to personalize your keyboard.</p>
<h3 id="highprofileorlowprofile">High profile or low profile</h3>
<p>Most mechanical keyboards use high profile keys with long travel, meaning that your fingers need to move further to press the keys down. These make it less likely to encounter repetitive strain injury.</p>
<p>However, if you’re used to normal laptop keys, it may take time to get used to this. As a result, Gateron, Logitech, and Razer all offer low profile mechanical switches. These come midway between high profile switches and laptop keyboards.</p>
<h3 id="programmablekeysandmacros">Programmable keys and macros</h3>
<p>Many developers want to personalize their typing experience by creating macros and alternate keyboard layouts. Some keyboards, like the Corsair K100 and Logitech G915, offer additional keys that can be used to trigger your macros.</p>
<p>And although there are plenty of scripting and macro applications available, many mechanical keyboards come with their own software:</p>
<ul>
<li>Razer Blackwidow Elite: Razer Hypershift software</li>
<li>Corsair K100: iCUE application</li>
<li>Kinesis Advantage 2: SmartSet programming engine</li>
<li>SteelSeries Apex Pro: SteelSeries Engine</li>
<li>HyperX Alloy Elite 2: HyperX NGENUITY software</li>
</ul>
<p>Finally, a small number of keyboards, such as the Logitech G915, come with onboard memory to store and run your macros directly from the keyboard. You can then rely on your macros to work no matter which computer you’ve plugged your keyboard into.</p>
<h3 id="weightmaybeimportanttoyou">Weight may be important to you</h3>
<p>If your keyboard is just going to sit on your desk, then weight won’t be an issue. But if you want a portable keyboard, it may be one of the deciding factors.</p>
<p>Here are the weights of the keyboards included in this roundup, sorted from lightest to heaviest:</p>
<ul>
<li>Keychron K1: 2.1 lbs (0.95 kg)</li>
<li>SteelSeries Apex Pro: 2.14 lbs (0.97 kg)</li>
<li>Kinesis Advantage 2: 2.2 lbs (1.0 kg)</li>
<li>Logitech G915: 2.26 lbs (1.025 kg)</li>
<li>Redragon K556: 2.60 lbs (1.18 kg)</li>
<li>Corsair K100: 2.89 lbs (1.31 kg)</li>
<li>HyperX Alloy Elite 2: 3.31 lbs (1.5 kg)</li>
<li>Razer Blackwidow Elite: 3.69 lbs (1.67 kg)</li>
</ul>
<h3 id="wiredorwireless">Wired or wireless</h3>
<p>Most mechanical keyboards are wired. This has benefits, such as less latency, resulting in a more responsive experience. It also means you’ll never have to charge a battery, and that could be an issue given that most mechanical keyboards are backlit.</p>
<p>If you use your keyboard with the same computer at the same desk every day, there&#8217;s little downside to using a wired keyboard.</p>
<p>However, some companies do offer wireless mechanical keyboards. We only include two in this roundup:</p>
<ul>
<li>Logitech G915 (30 hours battery)</li>
<li>Keychron K1 (10 hours battery)</li>
</ul>
<p>These keyboards can also be plugged in to your computer and use USB bus power. To maximize the battery life when using them wirelessly, you may wish to dim or disable the backlight.</p>
<h3 id="extrafeatures">Extra features</h3>
<p>Many keyboards offer additional features, such as a wrist rest or detachable cable. Some offer USB passthrough ports for easy connection of your peripherals. Most include programable RGB backlighting that looks great when you’re working late.</p>
<h3 id="highratingsfromusersandtesters">High ratings from users and testers</h3>
<p>While consumer reviews and ratings are never 100% reliable, it’s useful to take into account the feedback from real users and experts who have conducted comparative testing.</p>
<p>Here are consumer ratings (out of 5 stars) for each keyboard by general users who may not be considering the suitability of the keyboard for programming in particular. The list is sorted with the highest-rated keyboards on top:</p>
<ul>
<li>SteelSeries Apex Pro: 4.8 stars, 11,219 reviews</li>
<li>Corsair K100: 4.8 stars, 1,540 reviews</li>
<li>HyperX Alloy Elite 2: 4.8 stars, 686 reviews</li>
<li>Razer Blackwidow Elite: 4.7 stars, 5,327 reviews</li>
<li>Logitech G915: 4.7 stars, 1,371 reviews</li>
<li>Redragon K556: 4.6 stars, 5,898 reviews</li>
<li>Kinesis Advantage 2: 4.5 stars, 343 reviews</li>
<li>Keychron K1: 4.3 stars, 337 reviews</li>
</ul>
<p><a rel="nofollow" href="https://www.rtings.com/keyboard/reviews/best/mechanical">RTINGS</a> is a popular review site that has conducted careful tests on a wide range of mechanical keyboards. Here are their ratings (out of 10) on their suitability for programming, sorted from highest to lowest:</p>
<ul>
<li>Razer Blackwidow Elite: 8.2</li>
<li>Corsair K100: 8.2</li>
<li>Kinesis Freestyle Edge: 8.0</li>
<li>SteelSeries Apex Pro: 8.0</li>
<li>HyperX Alloy Elite 2: 7.6</li>
<li>Logitech G915: 7.6</li>
<li>Keychron K1: 7.4</li>
<li>Redragon K556: 6.9</li>
</ul>
<p>Gamers may also be interested in RTINGS gaming rating (also out of 10):</p>
<ul>
<li>Razer Blackwidow Elite: 9.5</li>
<li>Corsair K100: 9.5</li>
<li>SteelSeries Apex Pro: 9.5</li>
<li>HyperX Alloy Elite 2: 9.2</li>
<li>Logitech G915: 9.2</li>
<li>Kinesis Freestyle Edge: 9.0</li>
<li>Keychron K1: 8.0</li>
<li>Redragon K556: 7.9</li>
</ul>
<h3 id="price">Price</h3>
<p>Since you’re purchasing a tool that will make a significant impact on your health and productivity, price shouldn’t be the most important factor when you make your choice.</p>
<p>But if you’re unfamiliar with mechanical keyboards and want to spend some time using one before investing a lot of money, you might like to choose one of the more affordable models.</p>
<p>Here are the list prices of the keyboards in this buyer’s guide, starting with the most affordable:</p>
<ul>
<li>Redragon K556: $69.99 list, check price on <a rel="nofollow" href="https://www.amazon.com/Redragon-K556-Mechanical-Keyboard-Aluminum/dp/B01NAI2TXC/">Amazon</a></li>
<li>Keychron K1: $99.00 list, check price on <a rel="nofollow" href="https://www.amazon.com/Keychron-Ultra-Thin-Wireless-Bluetooth-Mechanical/dp/B07YJSM85Z/">Amazon</a></li>
<li>HyperX Alloy Elite 2: $199.85 list, check price on <a rel="nofollow" href="https://www.amazon.com/HyperX-Alloy-Elite-Software-Controlled-Customization/dp/B088KRFVBK/">Amazon</a></li>
<li>Razer Blackwidow Elite: $169.99 list, check price on <a rel="nofollow" href="https://www.amazon.com/Razer-BlackWidow-Mechanical-Gaming-Keyboard/dp/B07FFCN3DJ/">Amazon</a></li>
<li>SteelSeries Apex Pro: $209.99 list, check price on <a rel="nofollow" href="https://www.amazon.com/SteelSeries-Apex-Mechanical-Gaming-Keyboard/dp/B07SVJJCP3/">Amazon</a></li>
<li>Corsair K100: $229.99 list, check price on <a rel="nofollow" href="https://www.amazon.com/Corsair-K100-Mechanical-Gaming-Keyboard/dp/B08HR74WV4/">Amazon</a></li>
<li>Logitech G915: $249.99 list, check price on <a rel="nofollow" href="https://www.amazon.com/Logitech-Wireless-Mechanical-Keyboard-Tactile/dp/B07NY9ZT92/?th=1">Amazon</a></li>
<li>Kinesis Advantage 2: $349.00 list, check price on <a rel="nofollow" href="https://www.amazon.com/Kinesis-Advantage2-Ergonomic-Keyboard-KB600/dp/B01KR1C5PY/">Amazon</a></li>
</ul>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/best-mechanical-keyboards/?utm_source=rss">The Best Mechanical Keyboards for Developers</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/best-mechanical-keyboards/?utm_source=rss</link><guid isPermaLink="false">/?p=256681</guid><category><![CDATA[Web]]></category><dc:creator><![CDATA[Adrian Try]]></dc:creator><pubDate>Tue, 25 Jan 2022 15:00:34 GMT</pubDate><metaDesc>Developers need a good keyboard. Learn how mechanical keyboards improve your workflow and your health, and how to choose a good one.</metaDesc></item><item><title><![CDATA[The Best Figma Plugins: 50+ Workflow Superchargers]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/figma-plugins-optimize-workflow/?utm_source=rss"
              title="The Best Figma Plugins: 50+ Workflow Superchargers"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2022/01/1642648108design.jpg"
        alt="Designers at work - Best Figma Plugins"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2022/01/1642648108design-300x158.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2022/01/1642648108design-1024x539.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2022/01/1642648108design-768x404.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2022/01/1642648108design-1536x808.jpg 1536w, https://uploads.sitepoint.com/wp-content/uploads/2022/01/1642648108design.jpg 1900w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong>In this article, we&#8217;ll explore some of the best Figma plugins that will help you make the most of Figma and ensure you can create the layouts and designs you&#8217;re aiming for.</strong></p>
<h2 id="usingdesigntools">Using Design Tools</h2>
<p>Design tools have a significant influence on our lives, because they assist us in creating the products we need, like, or dream about. Knowing which ones to use and how to utilize them may help you enhance your efficiency and streamline your process. When using Figma to design, tools like templates, icons, and plugins come in handy for making your job easier and helping you to maximize your energy while leaving more room for creativity.</p>
<p>There are hundreds of Figma plugins available, with more being developed every day. As a designer who&#8217;s conversant with the interface, finding your way around them doesn&#8217;t require expertise, as they&#8217;re mostly quite intuitive and have proper documentation.</p>
<h2 id="howtoaddafigmaplugin">How to Add a Figma Plugin</h2>
<p>Finding Figma plugins simply involves searching by keyword and exploring the wide range of resources on the community page, and clicking <strong>install</strong> to add the plugin to your user account. You&#8217;ll have to refresh your design tab for newly installed plugins to appear.</p>
<p>Too many options? Plugins can be grouped into categories based on the functions they perform, and it’s not unusual to find several similar ones in the same category. Deciding on which one to use comes down to personal preference.</p>
<h2 id="responsivedesignplugins">Responsive Design Plugins</h2>
<p>First off, we&#8217;ll explore some of the better Figma plugins for responsive design.</p>
<h3 id="anima">Anima</h3>
<p>Anima can convert your high fidelity prototypes to developer-friendly HTML, CSS, React, and Vue. You can create a single prototype for all screen sizes using breakpoints and pins. This plugin was created by Anima and also gives you access to live, interactive prototypes, and lets you embed videos, animations, real input fields, hover effects, and custom code while working directly from Figma to save time. Access to certain features might require an Anima membership.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1637731301anima.png" alt="Anima plugin for Figma" /></p>
<h3 id="cssgen">CSSGen</h3>
<p>This plugin, created by Microsoft and Ori Ziv, lets you generate Sass or Less code from your local Figma styles. This plugin reads all used styles in a Figma document and lets you export them into Sass or Less</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1637731404cssgen.png" alt="CSSGen Figma plugin" /></p>
<h3 id="responsify">Responsify</h3>
<p>With Responsify, you can quickly test your designs across multiple device sizes. You have to select any frame, component, or instance and run the Responsify plugin to see what your design looks like across several screens. It was created by Brian Lovin.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1637731567responsify-2.png" alt="Responsify plugin" /></p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1637731570responsify.jpg" alt="Responsify plugin demo" /></p>
<h3 id="makers">Makers</h3>
<p>&#8220;From Figma to site&#8221;: the ability to automatically publish Figma designs into a custom domain (without going to an engineer and &#8220;design to code&#8221;) is something that would benefit the community. Especially for simple projects. With this plugin, you can build landing pages, portfolio and personal sites. In order to use this Figma plugin successfully, you have to design using their built-in components or duplicate your work if you already have a design.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1637731512makers.png" alt="The Makers Figma plugin" /></p>
<h3 id="assistant">Assistant</h3>
<p>This plugin, by Grida, will generate usable and readable code for production instantly. It gives instant feedback on your design with working code, along with an executable and responsive preview. Assistant is an open-source project.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1637731318assistant-by-G⁯rida.png" alt="Assistant Figma plugin" /></p>
<h3 id="breakpoints">Breakpoints</h3>
<p>This plugin was created by Floweare and lets you preview a responsive layout inside a Figma frame. It works even without the opened plugin window, and anyone in your team can resize the frame without the installed plugin. This helps you make design decisions faster and better. And you can also share animated prototypes.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1637731364breakpoint.gif" alt="The Breakpoint Figma plugin" /></p>
<h3 id="uicode">UIcode</h3>
<p>This plugin lets you have clean code of your mobile design right inside Figma instantly. It can generate and export code for all screens at once or for each screen individually. This plugin was created by Techsteps, and it reduces your workload as the code requires minimal finishing touches from developers.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1637731611uicode2.jpg" alt="UIcode plugin demo" /></p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/12/1639806983uicode.jpg" alt="IUcode Figma plugin" /></p>
<h2 id="pluginsforcolormanagement">Plugins for Color Management</h2>
<p>These Figma plugins improve your work’s visual appeal by making several color-related decisions on your behalf. You can create different color palettes, gradients, and a more intuitive layout, all with less time and effort than usual.</p>
<h3 id="colorkit">Color Kit</h3>
<p>Creating analogous palettes just got easier. With Color Kit, all you have to do is input a color code, along with other values like the number of shades, and you’ll have a color palette that will comprise various shades of the color. This plugin was created by Tushar and can generate lighter or darker shades of any color.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1637731383color-kit-2.png" alt="Color Kit demo" /></p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1637731381color-kit-1.png" alt="Creating shades with Color Kit" /></p>
<h3 id="spectrum">Spectrum</h3>
<p>Spectrum, created by Milan Maheshwari, lets you build color systems, design complex vector art and apply them to illustrations, images, and interfaces instantly. This process happens without delay — which is great news for your workflow and you can say goodbye to trial and error when it comes to colors.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1637731576spectrum1.png" alt="The Spectrum palette" /></p>
<h3 id="coshuffler">CoShuffler</h3>
<p>This plugin, created by Andrew G, lets you apply an assortment of colors to a large selection of objects. So if you&#8217;re making iterations for assets like buttons for a project, CoShuffler does a great deal of the work for you by applying the colors to the objects using a pre-selected palette.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1637731398coshuffler2.png" alt="CoShuffler Figma plugin" /></p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1637731395coshuffler.png" alt="CoShuffler demo" /></p>
<h3 id="pikaso">Pikaso</h3>
<p>Sometimes the hardest part of a project is deciding which colors to begin with. We’ve all been there. Daniel Danuega and Reynaldi Syarizal created Pikaso to help you decide faster and more efficiently by providing you with choices based on a single asset provided by the client. This could be a logo or a picture.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1637731547pikaso.png" alt="Pikaso Figma plugin" /></p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1637731550pikaso1.gif" alt="Pikaso demo" /></p>
<h3 id="dopelycolors">Dopely Colors</h3>
<p>This plugin has a wide variety of palettes, so can be very helpful when you’re experiencing a creative block or something similar. It&#8217;s created by Dopely to help you color better and faster.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1637731417dopely.png" alt="Dopely colors" /></p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1637731414dopely.gif" alt="Dopely colors demo" /></p>
<h3 id="chromaticfigma">Chromatic Figma</h3>
<p>With this plugin, you can use color spaces other than RGB to create good-looking and perceptually uniform gradients and color scales. The results are usually more natural-looking and aesthetically pleasing than those from the traditional RGB space. This plugin was created by Petter Nilsson.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1637735285chromatic-figma.jpg" alt="Chromatic Figma demo" /></p>
<h3 id="accidentallygreatgradients">Accidentally Great Gradients</h3>
<p>“If you are feeling blue, use the blue hues”. You can tweak the lightness and saturation to however you desire, or just go all random and let the plugin choose an accidentally great gradient for your project. This plugin was created by Johan and makes use of the HSL scale to create tons of gradients.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/12/1639807034accidentally-great.jpg" alt="Gccidentally Great image" /></p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1637731287accidentally-great1.jpg" alt="Accidentally Great demo" /></p>
<h3 id="coco">Coco</h3>
<p>Looking for inspiration right in the middle of work? How about a plugin that lets you explore a collection of official brand color palettes, popular color selections, latest palette trends. Coco, by UXPlugins, lets you do all that. You can also check contrast and make sure you selected the right colors for your design with a simple workflow.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1637731378coco.jpg" alt="The Coco Figma plugin" /></p>
<h2 id="imageassetplugins">Image Asset Plugins</h2>
<p>Next, we&#8217;ll explore some standout Figma plugins for managing image assets.</p>
<h3 id="photos">Photos</h3>
<p>This plugin was created by Emin Sinani and lets you search and insert photos into your Figma files from Unsplash, Google, Flickr, Pixabay, Pexels, Giphy, and Tenor. The Photos plugin also lets you find GIFs for your design project with a simple process. You can also select multiple photos at once and place them on the page or insert them in layers. It&#8217;s supported in both Figma and FigJam.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1637731543photos.png" alt="Photos featured image" /></p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1637731539photos-gif.gif" alt="Photos Figma plugin" /></p>
<h3 id="removebg">Remove BG</h3>
<p>You can remove picture backgrounds using the Remove BG plugin by Icons8. It uses an API that lets it recognize the main subject in a photo and erase the environment around it — like an object selection tool. </p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1637731469icons8-bg-remover.jpg" alt="Icons8 Remove BG demo" /></p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1637731467icons8-bg-remover-2.jpg" alt="Remove BG Figma plugin" /></p>
<h3 id="imagetracer">Image tracer</h3>
<p>Image tracer takes whatever layers you&#8217;ve selected and combines them together into one image (regardless of whether or not they’re already a vector). Then it converts the new image to black and white and attempts to trace it into a new vector layer. It was created by Dave Williames and saves time by providing an alternative to <em>manually</em> drawing and editing vectors.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1637731490image-tracer.jpg" alt="The Image tracer Figma plugin" /></p>
<h3 id="palettefromimage">Palette From Image</h3>
<p>Amena Clifford created a plugin that lets you select an image from your computer and generate a color palette. This means that the image doesn&#8217;t have to be in your Figma file and the colors are all generated inside your application. It gives you access to the color code of each block of color in the palette (by simply tapping on it) and you don&#8217;t need to be online to generate color palettes.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1637731531palette-from-image.jpg" alt="Palette From Image" /></p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1637731487image-from-palette.gif" alt="The Palette From Image Figma plugin" /></p>
<h2 id="fontplugins">Font Plugins</h2>
<p>Let&#8217;s now look at Figma plugins that make it easier to work with fonts.</p>
<h3 id="fontviewer">Font Viewer</h3>
<p>If you&#8217;re trying to choose fonts for a project, Font Viewer can speed your process up and shows the local font and web font in different tabs. Font viewer was created by KRAD.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1637731433font-viewer.gif" alt="The Font Viewer Figma plugin" /></p>
<h3 id="fontscanner">FontScanner</h3>
<p>Have you ever looked at a design and wondered what fonts those are? FontScanner can find out all font families, weights, and sizes from the current page. It also shows their quantities and allows you to select based on type or font size. Apart from satisfying your curiosity, it can also serve as an analysis tool for developers. It was created by Honzik Kryspin.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1637731436FOntscanner.jpg" alt="The FontScanner Figma plugin" /></p>
<h3 id="typescale">Typescale</h3>
<p>This plugin was created by Sam Smith and is helpful for type analysis. It generates a modular scale for your typography based on your choice of ratio. In a couple of clicks, you can transform a single line of text into a harmonious typographic scale on your artboard.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1637731596typescale.png" alt="Typescale featured image" /></p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1637731599typescale2.jpg" alt="The Typescale Figma plugin" /></p>
<h3 id="changefont">Change Font</h3>
<p>This was created by Yury Zeliankouski, and it lets you change the font in FigJam and Figma files using the quick actions search bar. You can select text Layers, Connectors, Shapes with Text, Sticky Notes or Code Blocks, or select a specific piece of text, Launch Quick Actions (press <kbd>command</kbd> + <kbd>/</kbd> on macOS or <kbd>Ctrl</kbd> + <kbd>/</kbd> on Windows), write &#8220;Change Font&#8221; and press <kbd>Tab</kbd>, filter the list by typing the name of the font, and select the desired font by pressing <kbd>enter/return</kbd></p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1637731371change-font.png" alt="The Change Font Figma plugin" /></p>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/figma-plugins-optimize-workflow/?utm_source=rss">The Best Figma Plugins: 50+ Workflow Superchargers</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/figma-plugins-optimize-workflow/?utm_source=rss</link><guid isPermaLink="false">/?p=256019</guid><category><![CDATA[Design]]></category><category><![CDATA[Design & UX]]></category><dc:creator><![CDATA[George George]]></dc:creator><pubDate>Wed, 19 Jan 2022 08:17:43 GMT</pubDate><metaDesc>Too many Figma plugins to choose from? Supercharge your design workflow with our picks for the best Figma plugins.</metaDesc></item><item><title><![CDATA[10 Best WordPress Themes You Should Be Using in 2022]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/ten-best-wordpress-themes-2022/?utm_source=rss"
              title="10 Best WordPress Themes You Should Be Using in 2022"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2022/01/1642314568wordpress-themes.jpg"
        alt="10 Best WordPress Themes You Should Be Using in 2022"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2022/01/1642314568wordpress-themes-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2022/01/1642314568wordpress-themes-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2022/01/1642314568wordpress-themes-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2022/01/1642314568wordpress-themes.jpg 1200w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><em>This sponsored article was created by our content partners, <a rel="nofollow" href="https://baw.agency/">BAW Media</a>. Thank you for supporting the partners who make SitePoint possible.</em></p>
<p><strong>Installing a WordPress theme can almost always improve both your website-building workflow and the end result.</strong></p>
<p>But making those two things “better” isn’t always enough. Building a website quicker doesn’t necessarily make its performance any better. Improving its appearance doesn’t necessarily make it irresistible … or even particularly engaging to its visitors.</p>
<p>You really need to invest your time in finding a WordPress theme that will take your design efforts to a new and higher level. There are many great WordPress themes that will do that. But finding them among the thousands upon thousands of popular WordPress themes on the market could prove to be an overwhelming task — and whenever possible, should be best avoided.</p>
<p>Settle on any of these ten top WordPress themes for 2022 and the problem is solved. It may take a little time to find the one that would best suit your purposes, but any one of them will serve you well.</p>
<h2 id="1bethemethebiggestmultipurposewordpressthemewith650prebuiltwebsiteshttpsmuffingroupcombethemeutm_sourcebawutm_mediumcontentutm_campaigntopwpthemes22b">1. <a rel="nofollow" href="https://muffingroup.com/betheme/?utm_source=baw&#038;utm_medium=content&#038;utm_campaign=topwpthemes22b">BeTheme: the biggest multipurpose WordPress theme with 650+ pre-built websites</a></h2>
<p><a rel="nofollow" href="https://muffingroup.com/betheme/?utm_source=baw&#038;utm_medium=content&#038;utm_campaign=topwpthemes22b"><img src="https://uploads.sitepoint.com/wp-content/uploads/2022/01/16423119111.png" alt="Betheme home page" /></a></p>
<p>Any website created using BeTheme will be super engaging, flawlessly responsive, and SEO friendly. The final product depends somewhat on what the website designer is trying to achieve, but the tools are there.</p>
<ul>
<li>Be’s 650+ pre-built websites are responsive, customizable, can be configured to address any website type, style, or niche, and will get any website-building project off to a quick start.</li>
<li>40+ core features, including several mentioned below, give Be’s users all-encompassing selections of design aides, elements, and options.</li>
<li>The Live Builder is fast, easy to work with, and has powerful page-building capabilities that include live content editing, autosave, update, and backup options.</li>
<li>The WooCommerce Builder offers a useful array of template-building tools, Single Product layouts and a host of customer-centric functions and elements.</li>
<li>Other tools include a Live Search function and Muffin and Header builders.</li>
<li>BeTheme is also mobile-ready and Elementor-ready.</li>
</ul>
<p>This premium WordPress theme is always up to date and offers its users free lifetime updates. Click on the banner to find out more about its powerful core features.</p>
<h2 id="2totalwordpressthemehttpstotalwpexplorercomutm_sourcebawutm_mediumblogutm_campaign2top1522"><a rel="nofollow" href="https://total.wpexplorer.com/?utm_source=baw&#038;utm_medium=blog&#038;utm_campaign=2top1522">2. Total WordPress Theme</a></h2>
<p><a rel="nofollow" href="https://total.wpexplorer.com/?utm_source=baw&#038;utm_medium=blog&#038;utm_campaign=2top1522"><img src="https://uploads.sitepoint.com/wp-content/uploads/2022/01/16423119542.jpg" alt="Total home page" /></a></p>
<p>Total is a complete WordPress theme that enables you to create stunning, fully responsive WordPress-powered websites with ease, just as more than 48,000 of its users have already done.</p>
<p>The tools those users have to work with include these:</p>
<ul>
<li>a template library of 90+ quick start section templates and 45 quick import demos</li>
<li>an extended version of the WPBakery page builder together with 100+ elements for creating layouts and Tempatera, a feature that lets you reuse your page layouts and designs</li>
<li>a Font Manager for adding fonts from multiple sources</li>
</ul>
<p>Total is also responsive, developer friendly, and provides its users with virtually unlimited styling and design options, including animations, custom backgrounds, and more.</p>
<p>Click on the banner to learn more about this popular WordPress theme.</p>
<h2 id="3woodmarthttpswoodmartxtemoscomutm_sourcebawutm_mediumcontentutm_campaigntopwpthemes22b"><a rel="nofollow" href="https://woodmart.xtemos.com/?utm_source=baw&#038;utm_medium=content&#038;utm_campaign=topwpthemes22b">3. WoodMart</a></h2>
<p><a rel="nofollow" href="https://woodmart.xtemos.com/?utm_source=baw&#038;utm_medium=content&#038;utm_campaign=topwpthemes22b"><img src="https://uploads.sitepoint.com/wp-content/uploads/2022/01/16423119803.jpg" alt="WoodMart home page" /></a></p>
<p>WoodMart makes it easy to create some pretty dazzling online shops, and it&#8217;s fun to work with as well. A quick look at its landing page might convince you that you’ve accidentally landed on a real live shop, but what you see is something you could easily accomplish yourself.</p>
<ul>
<li>The WoodMart WooCommerce theme provides its users with an all-in-one eCommerce solution.<br />
Woodmart is fully customizable, it&#8217;s optimized for Google Page Speed. It&#8217;s also responsive and Retina ready.</li>
<li>WoodMart also makes full use of powerful AJAX techniques to give you and your website users a look at what a leading online ecommerce experience is all about.</li>
<li>There’s a nice supply of demo layouts, supplemented by 370+ pre-made sections to get you started.</li>
</ul>
<p>Click on the banner to pay WoodMart a visit. There’s much to see.</p>
<h2 id="4reythemeforwoocommercehttpsreythemecomutm_sourcebm012022utm_mediumcontentutm_campaigntopwpthemes22b"><a rel="nofollow" href="https://reytheme.com/?utm_source=bm012022&#038;utm_medium=content&#038;utm_campaign=topwpthemes22b">4. Rey theme for WooCommerce</a></h2>
<p><a rel="nofollow" href="https://reytheme.com/?utm_source=bm012022&#038;utm_medium=content&#038;utm_campaign=topwpthemes22b"><img src="https://uploads.sitepoint.com/wp-content/uploads/2022/01/16423120534.jpg" alt="Rey home page" /></a></p>
<p>Rey has mastered the pillars of ecommerce – filtering, search, presentation, and navigation — and it has  passed the results on to you. With Rey, you’ll be experiencing design, performance, and innovation in a whole new light with features like these:</p>
<ul>
<li>Elementor page builder and powerful extensions</li>
<li>SEO-friendly plugins</li>
<li>Google and Adobe fonts integrations</li>
</ul>
<p>All the above and more comes with this responsive, developer-friendly, and performance-oriented WooCommerce theme. </p>
<h2 id="5thegemcreativemultipurposeandwoocommercewordpressthemehttpscodexthemescomthegemmetasplashutm_sourcebawutm_mediumlistingutm_campaigntopthemes20222"><a rel="nofollow" href="https://codex-themes.com/thegem/meta-splash/?utm_source=baw&#038;utm_medium=listing&#038;utm_campaign=top-themes-2022-2">5. TheGem: creative, multi-purpose and WooCommerce WordPress theme</a></h2>
<p><a rel="nofollow" href="https://codex-themes.com/thegem/meta-splash/?utm_source=baw&#038;utm_medium=listing&#038;utm_campaign=top-themes-2022-2"><img src="https://uploads.sitepoint.com/wp-content/uploads/2022/01/16423120765.jpg" alt="TheGem home page" /></a></p>
<p>TheGem has a well-deserved reputation as being the ultimate WordPress toolbox, with cool website-building features such as these:</p>
<ul>
<li>the selection of more than 400 multi- and single-page, ready-to-use websites</li>
<li>Elementor and WPBakery page builders that can customize everything, including TheGem’s collection of pre-designed page sections</li>
<li>impressive WooCommerce designs and features for creating high-conversion online shops</li>
</ul>
<p>TheGem is a five-star rated popular theme that has gained the complete trust of its 60,000+ customers.</p>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/ten-best-wordpress-themes-2022/?utm_source=rss">10 Best WordPress Themes You Should Be Using in 2022</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/ten-best-wordpress-themes-2022/?utm_source=rss</link><guid isPermaLink="false">/?p=256375</guid><category><![CDATA[Web]]></category><dc:creator><![CDATA[SitePoint Sponsors]]></dc:creator><pubDate>Mon, 17 Jan 2022 15:00:28 GMT</pubDate><metaDesc>Need a fully-featured WordPress theme? Check out these 10 powerful WordPress themes that will save time and power your next website.</metaDesc></item><item><title><![CDATA[Nuxt 3 Beta: What’s New and How to Get Started]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/nuxt-3-whats-new-get-started/?utm_source=rss"
              title="Nuxt 3 Beta: What’s New and How to Get Started"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2021/12/1639624183nuxt3a.jpg"
        alt="Nuxt 3 Beta: What's New and How to Get Started"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/12/1639624183nuxt3a-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/12/1639624183nuxt3a-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/12/1639624183nuxt3a-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/12/1639624183nuxt3a.jpg 1200w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong>In this article, we&rsquo;ll explore the most notable new features and improvements offered by Nuxt 3, and we&rsquo;ll also look at how most of them can be used in practice. This will provide a good overview of what&rsquo;s possible with Nuxt 3 and how you can implement its goodies in your projects.</strong></p>
<h2 id="toc_0">An Overview of Nuxt</h2>
<p>Nuxt is a <a rel="nofollow" href="https://v3.nuxtjs.org/">high-level, open-source application development framework</a> built on top of <a rel="nofollow" href="https://v3.vuejs.org/">Vue</a>. Its aim is to speed up, simplify, and facilitate the development of Vue-based apps.</p>
<p>It does this by providing the following:</p>
<ul>
<li>Most of the best web performance optimizations are incorporated out of the box.</li>
<li>Automated app scaffolding and development. Nuxt combines and integrates a curated set of best of its class tools in a form of an optimized and fine-tuned starter project.</li>
<li>An opinionated set of directory structure conventions for managing pages and components more easily and efficiently.</li>
</ul>
<p>All these goodies makes Nuxt already a perfect choice for building Vue apps. But the good news is that, after a long delay, <a rel="nofollow" href="https://nuxtjs.org/announcements/nuxt3-beta/">Nuxt 3 beta version was announced in October, 2021</a>. This completely re-architected version promises to be faster, lighter, more flexible and powerful, offering top-notch DX (Developer Experience). Nuxt is now better than ever, and it brings to the table some really impressive features. Let&rsquo;s find out what they are.</p>
<h2 id="toc_1">What&rsquo;s New in Nuxt 3 Beta</h2>
<p>Nuxt 3 beta comes with a lot of improvements and exciting new features. Let&rsquo;s explore the most notable of them.</p>
<p><a rel="nofollow" href="https://github.com/nuxt/framework/tree/main/packages/nitro">Nitro</a> is a new server engine build for Nuxt on top of <a rel="nofollow" href="https://github.com/unjs/h3">h3</a>. It provides the following benefits:</p>
<ul>
<li><strong>API routes support</strong>. Your <em>server API</em> and <em>middleware</em> are automatically generated by reading the files in <code>server/api/</code> and <code>server/middleware/</code> directories respectively. You can create the desired API endpoints just by placing the corresponding files in the <code>server/api/</code> directory. For example, a <code>tasks.js</code> file will generate an <code>http://yourwebsite.com/api/tasks</code> endpoint. Functions in <code>server/middleware/</code> load automatically and run in every request — which is much similar than how <a rel="nofollow" href="http://expressjs.com/">Express</a> works.</li>
<li>Apps can be deployed to a variety of serverless platforms such as Vercel, Netlify, AWS, Azure, etc. Plus, some platforms (Vercel, Netlify) are automatically detected when deploying, without the need to add custom configuration.</li>
<li>The built app can be deployed on any JavaScript supporting system including Node, Deno, Serverless, Workers, etc.</li>
<li><strong>Incremental Static Generation</strong>. This allows for using a hybrid mode for static plus serverless sites. The end result is a mix of SSR (server-side rendering) and SSG (static site generation). (This is a planned feature, but it&rsquo;s not implemented yet.)</li>
<li><strong>Much lighter app output</strong>. The built app is put into a universal <code>.output/</code> directory. The build is minified and any Node modules (except polyfills) are removed. This strategy targets modern browsers and it produces up to 75x smaller bundles, both on client and server.</li>
<li>Optimized cold start with dynamic server code-splitting and async-loaded chunks. </li>
<li>Faster bundling and hot reloading.</li>
</ul>
<p><a rel="nofollow" href="https://github.com/nuxt/framework/tree/main/packages/nuxi">Nuxi</a> is a new Nuxt CLI. It provides a zero-dependency experience for easy scaffolding new projects and module integration.</p>
<p><a rel="nofollow" href="https://github.com/nuxt/framework/tree/main/packages/kit">Nuxt Kit</a> provides a new flexible module development experience with TypeScript support and cross-version compatibility.</p>
<p><a rel="nofollow" href="https://github.com/nuxt/framework/tree/main/packages/bridge">Nuxt Bridge</a> allows you to use some of the Nuxt 3 features in your existing Nuxt 2 projects. Its aim is to make future migration smoother by offering to Nuxt 2 users the ability to incrementally update/upgrade their projects. Here are the Nuxt 3 features which you can include in your Nuxt 2 project, as they are stated on Nuxt&rsquo;s website:</p>
<ul>
<li>Using Nitro server with Nuxt 2</li>
<li>Using Composition API (same as Nuxt 3) with Nuxt 2</li>
<li>Using new CLI and devtools with Nuxt 2</li>
<li>Progressively upgrade to Nuxt 3</li>
<li>Compatibility with Nuxt 2 module ecosystem</li>
<li>Upgrade piece by piece (Nitro, Composition API, Nuxt Kit)</li>
</ul>
<p>Nuxt Bridge also aims to facilitate the upgrades for the whole Nuxt ecosystem. For that reason, legacy plugins and modules will keep working, the config file from Nuxt 2 will be compatible with Nuxt 3, and some Nuxt 3 APIs (like Pages) will remain unchanged.</p>
<p>These were the so-called “big” features, but Nuxt 3 comes with lots more <q>small</q> features and improvements. We&rsquo;ll explore them in the following list:</p>
<ul>
<li><strong>Vue 3 support</strong>. Nuxt 3 version is aligned with Vue 3 so you can leverage all the great features of Vue 3 such as Composition API, <a rel="nofollow" href="https://vueschool.io/articles/vuejs-tutorials/what-is-a-vue-js-composable/">composables</a>, and more. Nuxt already offers some of its functionality in a form of built-in composables like <code>useFetch()</code>, <code>useState()</code>, and <code>useMeta()</code>. For more information about the Vue 3 Composition API, see <a href="https://www.sitepoint.com/vue-composition-api-reusable-components/">How to Create Reusable Components with the Vue 3 Composition API</a>.</li>
<li><strong>Webpack 5 and Vite support</strong>. Enjoy the latest versions of the best bundlers offering faster build times and smaller bundle size, with no configuration required. Vite, as its name suggests, offers super fast HMR (hot module replacement).</li>
<li><strong>TypeScript support</strong> with type checking, better autocompletion and error detection, and auto-generated types. If you don&rsquo;t like or need TypeScript, you still can use Nuxt without it.</li>
<li><strong>Native ESM Support</strong>.</li>
<li><a rel="nofollow" href="https://v3.vuejs.org/guide/migration/suspense.html#introduction"><strong>Suspense support</strong></a> which allows you to fetch data in any component, before or after navigation.</li>
<li><strong>Auto-import for global utilities and composable functions</strong>. Inside a <code>&lt;script setup&gt;</code> or <code>setup()</code> function you can use any of the composable functions that Nuxt 3 offers, such as <code>useFetch()</code>, <code>useState()</code>, <code>useMeta()</code>, and also Vue reactivity functions such as <code>ref()</code>, <code>reactive()</code>, <code>computed()</code>, etc. In the new <code>composables/</code> directory you can define all your functionality in composition functions, which are auto-imported as well. This is true even for the composables from the <a rel="nofollow" href="https://vueuse.org/">VueUse</a> library, <a rel="nofollow" href="https://vueuse.org/guide/index.html#nuxt">after a small configuration</a>.</li>
<li><strong>Optional Pages support</strong>. <a rel="nofollow" href="https://next.router.vuejs.org/">Vue Router 4</a> is used only if you have created a <code>pages/</code> directory. This can produce lighter builds if you don&rsquo;t use pages.</li>
<li><strong>Nuxt Devtools</strong>, which offers seamlessly integrated debugging tools right from the browser. (This is a planned feature, but it&rsquo;s not implemented yet.)</li>
</ul>
<p>Okay, now that we&rsquo;ve seen how great Nuxt is in its latest implementation, let&rsquo;s see how we can use its super powers in action.</p>
<p>In the following sections, we&rsquo;ll explore how to get started with Nuxt 3 and how to use it to implement some minimal blog functionality. Particularly, we&rsquo;ll examine the following:</p>
<ul>
<li>creating a fresh Nuxt 3 project</li>
<li>adding <a rel="nofollow" href="https://tailwindcss.com/">Tailwind CSS</a> support to the project</li>
<li>creating and using custom layouts</li>
<li>creating blog pages </li>
<li>creating and using custom components</li>
<li>using the Nuxt 3 built-in composables</li>
<li>creating and using custom composables</li>
</ul>
<h2 id="toc_2">Getting Started With Nuxt 3</h2>
<p><em>Note: before we begin, please make sure you have <a rel="nofollow" href="https://nodejs.org/en/">Node</a> v14 or v16 installed on your machine.</em></p>
<p>We&rsquo;ll start by creating a fresh Nuxt 3 project. To do so, run the following command in your terminal:</p>
<div>
<pre><code class="language-bash">npx nuxi init nuxt3-blog</code></pre>
</div>
<p>This will set up a new project for you without any dependencies installed, so you need to run the following commands to navigate to the project and install the dependencies:</p>
<div>
<pre><code class="language-bash">cd nuxt3-blog
npm install</code></pre>
</div>
<p>And finally, to start the dev server, run this command:</p>
<div>
<pre><code class="language-bash">npm run dev</code></pre>
</div>
<p>Open <a rel="nofollow" href="http://localhost:3000">http://localhost:3000</a> in your browser. If everything works as expected, you should see the following welcome page.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/12/1638539456nuxt-starter-project-home-page.png" alt="Nuxt starter project home page"/></p>
<p>If you&rsquo;re familiar with Nuxt 2, you&rsquo;ll probably notice that the project structure in Nuxt 3 has been a bit simplified.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/12/1638539452nuxt-project-structure.png" alt="Project folder structure"/></p>
<p>Here&rsquo;s a short list exploring the most notable changes in the project structure in Nuxt 3 compared to Nuxt 2. In Nuxt 3:</p>
<ul>
<li>An <code>app.vue</code> file is added. It&rsquo;s the main component in your application. Whatever you put in it (CSS, JS, etc.) will be globally available and included in every page.</li>
<li>The use of the <code>pages/</code> directory is optional. You can build your app only with <code>app.vue</code> as a main component and other components placed in the <code>components/</code> folder. If that&rsquo;s the case, vue-router won&rsquo;t be used and the app&rsquo;s build will be much lighter.</li>
<li>A new <code>composables/</code> directory is added. Each composable added here is auto-imported so you can use it directly in your application.</li>
<li>A new <code>.output/</code> directory is added, as we mentioned before, producing smaller bundles.</li>
</ul>
<h2 id="toc_3">Building a Minimal Blog With Nuxt 3</h2>
<p><em>Note: you can explore the complete source code for this project in the <a rel="nofollow" href="https://github.com/sitepoint-editors/nuxt3-blog-example">Nuxt 3 Blog Example repo</a>.</em></p>
<p>In this section, we&rsquo;ll explore the basics of Nuxt 3 by building a super minimalist blog. We&rsquo;ll need a bit of styling and <a rel="nofollow" href="https://tailwindcss.com/">Tailwind CSS</a> is a great choice for that.</p>
<h3 id="toc_4">Including Tailwind CSS in the project</h3>
<p>To install Tailwind and its peer-dependencies, run the following:</p>
<div>
<pre><code class="language-bash">npm install -D tailwindcss@latest postcss@latest autoprefixer@latest</code></pre>
</div>
<p>Now we need to generate Tailwind and PostCSS configuration files. Run the following:</p>
<div>
<pre><code class="language-bash">npx tailwindcss init -p</code></pre>
</div>
<p>This will generate <code>tailwind.config.js</code> and <code>postcss.config.js</code> files in the root directory. Open the first one and configure the <code>content</code> option to include all of your project&rsquo;s files that contain Tailwind utility classes:</p>
<div>
<pre><code class="language-javascript">// tailwind.config.js
module.exports = {
  content: [
    &quot;./components/**/*.{vue,js,ts}&quot;,
    &quot;./layouts/**/*.vue&quot;,
    &quot;./pages/**/*.vue&quot;,
    &quot;./plugins/**/*.{js,ts}&quot;,
    &quot;./app.vue&quot;,
  ],
  theme: {
    extend: {},
  },
  plugins: [],
}</code></pre>
</div>
<p><em>Note: from version 3, Tailwind no longer uses PurgeCSS under the hood and the <code>purge</code> option has been renamed to <code>content</code>. Please read the <a rel="nofollow" href="https://tailwindcss.com/docs/content-configuration">Content Configuration</a> section of the Tailwind docs for more information about the <code>content</code> option.</em></p>
<p>The <code>postcss.config.js</code> file doesn&rsquo;t need any configuration. It already has Tailwind and Autoprefixer included as plugins:</p>
<div>
<pre><code class="language-javascript">// postcss.config.js
module.exports = {
  plugins: {
    tailwindcss: {},
    autoprefixer: {},
  },
}</code></pre>
</div>
<p>The next step is to add Tailwind&rsquo;s styles. Create a new <code>assets</code> directory and put a <code>css</code> folder in it. In the <code>assets/css/</code> directory, create a <code>styles.css</code> file and put the following content in it:</p>
<div>
<pre><code class="language-css">/* assets/css/styles.css */
@tailwind base;
@tailwind components;
@tailwind utilities;</code></pre>
</div>
<p>The final step is to update <code>nuxt.config.ts</code> with the following content:</p>
<div>
<pre><code class="language-javascript">// nuxt.config.ts
import { defineNuxtConfig } from &#39;nuxt3&#39;

// https://v3.nuxtjs.org/docs/directory-structure/nuxt.config
export default defineNuxtConfig({
  css: [&quot;@/assets/css/styles.css&quot;],
  build: {
    postcss: {
      postcssOptions: require(&quot;./postcss.config.js&quot;),
    },
  },
})</code></pre>
</div>
<p>And now we can use all Tailwind&rsquo;s utilities in our project.</p>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/nuxt-3-whats-new-get-started/?utm_source=rss">Nuxt 3 Beta: What’s New and How to Get Started</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/nuxt-3-whats-new-get-started/?utm_source=rss</link><guid isPermaLink="false">/?p=254739</guid><category><![CDATA[Web]]></category><dc:creator><![CDATA[Ivaylo Gerchev]]></dc:creator><pubDate>Wed, 15 Dec 2021 15:00:16 GMT</pubDate><metaDesc>Learn about the most notable new features and improvements offered by Nuxt 3 beta and how you can implement them in your projects.</metaDesc></item><item><title><![CDATA[5 Upcoming Web Design Trends for 2022]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/web-design-trends-2022/?utm_source=rss"
              title="5 Upcoming Web Design Trends for 2022"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2021/12/1639542641web-design-trends.jpg"
        alt="Web design trends"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/12/1639542641web-design-trends-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/12/1639542641web-design-trends-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/12/1639542641web-design-trends-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/12/1639542641web-design-trends.jpg 1200w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><em>This sponsored article was created by our content partners, <a rel="nofollow" href="https://baw.agency/">BAW Media</a>. Thank you for supporting the partners who make SitePoint possible.</em></p>
<p><strong>Web design trends don’t appear out of nowhere. They come in response to the actual needs that web users have at a given time. Those needs can address anything from making the exploring the web more useful, more enjoyable, or more comfortable.</strong></p>
<p>When the world outside is undergoing changes that can make everyday life more difficult or less predictable, people look for stability and balance. That is what our world looks like at the moment, and the desire for a greater sense of stability and calmness is what we see reflected in web design trends of 2022.</p>
<p>Let us take a close-up look at five of these trends. As we do so, we&#8217;ll use a selection of <a rel="nofollow" href="https://themes.muffingroup.com/be/splash/?utm_source=sitepoint.com&#038;utm_medium=content&#038;utm_campaign=dec21">BeTheme</a> pre-built websites to illustrate what these trends involve. You can use them for inspiration or use them to rapidly and cost-effectively create or redesign sites for your clients.</p>
<p>If you design your clients’ websites with the latest web design trends, you&#8217;ll help them capture the attention of consumers looking for cutting-edge brands. Here are five new trends for 2022 you’ll want to be aware of and your clients will appreciate.</p>
<h2 id="1immersiveimagedesigncaninspireconsumerstopurchasemore">1. Immersive Image Design Can Inspire Consumers to Purchase More</h2>
<p><a rel="nofollow" href="https://www.statista.com/statistics/319732/daily-time-spent-online-device/">According to Statista</a> — and as you may have noticed yourself — people all over the world spend more than 2½ hours every day on their smart phones, and another ½ hour at their desktop. </p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/12/16395341961.png" alt="Bar chart: desktop vs mobile usage" /></p>
<p>Some of this time is devoted to entertainment, and some is no doubt spent on conducting business or simply conversing with someone.</p>
<p>As for the rest of the time, it&#8217;s often spent looking for information on things to do outside of their screens, which could involve anything from looking for information to shopping for a product or service.</p>
<p>If you have or are building a website that sells a product or a real-world experience, you should be giving this some thought. The most effective way to sell something is to let the consumer “feel” it.</p>
<p>How do you do that?</p>
<p>With products, it’s not all difficult. Perhaps more so when hand-held devices are involved, but still not all that difficult. There are many ways you can display a product that will let a customer “feel” it.</p>
<p>An experience is a different story. In this case, a designer needs to create a digital environment that feels real to the observer. Here are two examples of how this is accomplished. </p>
<p>Many of BeTheme’s pre-built websites have been designed with this approach in mind. The <a rel="nofollow" href="https://themes.muffingroup.com/be/cottage2/?utm_source=sitepoint.com&#038;utm_medium=content&#038;utm_campaign=dec21">BeCottage2</a> pre-built website uses an image blurring and filtering effect to blend the landscape images into the digital content. </p>
[video mp4="https://uploads.sitepoint.com/wp-content/uploads/2021/12/16395343222.mp4"][/video]
<p><a rel="nofollow" href="https://themes.muffingroup.com/be/surfing2/?utm_source=sitepoint.com&#038;utm_medium=content&#038;utm_campaign=dec21">Surfing2</a> employs a similar strategy. In this example, the lightest part of the ocean image is blended seamlessly into the website background.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/12/16395344513.png" alt="Live for the surfing theme" /></p>
<p>What the designer has accomplished here is to enable visitors to experience a smooth and easy flow from the digital content into a natural setting.</p>
<h2 id="2changingtypographydrawsattentiontocontent">2. Changing Typography Draws Attention to Content</h2>
<p>Changes in website typography size, color, and style are often employed to great effect as attention-getting strategies. In 2022, we’re going to see motion added to the text as well.</p>
<p>Motion in an otherwise quiet or still setting is always noticeable, and strategically placed and well-timed motion applied to content can really make a website stand out in the crowd.</p>
<p>Motion applied to text is a strategy that should be applied sparingly and applied only to text you want the visitor to take special note of.</p>
<p><a rel="nofollow" href="https://themes.muffingroup.com/be/dietshop/?utm_source=sitepoint.com&#038;utm_medium=content&#038;utm_campaign=dec21">BeDietShop</a> does this effectively in its hero image by directing attention to the tasty food items.</p>
[video mp4="https://uploads.sitepoint.com/wp-content/uploads/2021/12/16395346124.mp4"][/video]
<p><a rel="nofollow" href="https://themes.muffingroup.com/be/event7/?utm_source=sitepoint.com&#038;utm_medium=content&#038;utm_campaign=dec21">BeEvent7</a> takes a different approach and uses motion to suggest the ticking of a clock.</p>
[video mp4="https://uploads.sitepoint.com/wp-content/uploads/2021/12/16395347045.mp4"][/video]
<p>You can put moving typography like that in this example in many ways. You can count up, you can count down, or you can count things like sales or charitable contributions.</p>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/web-design-trends-2022/?utm_source=rss">5 Upcoming Web Design Trends for 2022</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/web-design-trends-2022/?utm_source=rss</link><guid isPermaLink="false">/?p=254673</guid><category><![CDATA[Design]]></category><dc:creator><![CDATA[SitePoint Sponsors]]></dc:creator><pubDate>Tue, 14 Dec 2021 15:00:29 GMT</pubDate><metaDesc>Web design trends bring much-needed yet subtle changes to the look of the Web. Learn about upcoming trends for 2022 and how to harness them.</metaDesc></item><item><title><![CDATA[How to Write Shell Scripts in Node with Google’s zx Library]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/google-zx-write-node-shell-scripts/?utm_source=rss"
              title="How to Write Shell Scripts in Node with Google’s zx Library"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2021/12/1639359610google-zx.jpg"
        alt="How To Write Shell Scripts in Node with Google's zx Library"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/12/1639359610google-zx-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/12/1639359610google-zx-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/12/1639359610google-zx-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/12/1639359610google-zx.jpg 1200w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong>In this article, we&#8217;ll learn what Google&#8217;s zx library provides, and how we can use it to write shell scripts with Node.js. We&#8217;ll then learn how to use the features of zx by building a command-line tool that helps us bootstrap configuration for new Node.js projects.</strong></p>
<h2 id="writingshellscriptstheproblem">Writing Shell Scripts: the Problem</h2>
<p>Creating a shell script — a script that&#8217;s executed by a shell such as Bash or zsh — can be a great way of automating repetitive tasks. Node.js seems like an ideal choice for writing a shell script, as it provides us with a number of core modules, and allows us to import any library we choose. It also gives us access to the language features and built-in functions provided by JavaScript.</p>
<p>But if you&#8217;ve tried writing a shell script to run under Node.js, you&#8217;ve probably found it&#8217;s not quite as smooth as you&#8217;d like. You need to write special handling for child processes, take care of escaping command line arguments, and then end up messing around with <code>stdout</code> (standard output) and <code>stderr</code> (standard error). It&#8217;s not especially intuitive, and can make shell scripting quite awkward.</p>
<p>The Bash shell scripting language is a popular choice for writing shell scripts. There&#8217;s no need to write code to handle child processes, and it has built-in language features for working with <code>stdout</code> and <code>stderr</code>. But it isn&#8217;t so easy to write shell scripts with Bash either. The syntax can be quite confusing, making it difficult to implement logic, or to handle things like prompting for user input.</p>
<p>The Google&#8217;s zx <a href="https://www.npmjs.com/package/zx">library</a> helps make shell scripting with Node.js efficient and enjoyable. </p>
<h3 id="requirementsforfollowingalong">Requirements for following along</h3>
<p>There are a few requirements for following along with this article:</p>
<ul>
<li>Ideally, you should be familiar with the basics of JavaScript and Node.js.</li>
<li>You&#8217;ll need to be comfortable running commands in a terminal.</li>
<li>You&#8217;ll need to have <a href="https://nodejs.org/en/download/">Node.js</a> &gt;= v14.13.1 installed.</li>
</ul>
<p>All of the code in this article is <a href="https://github.com/sitepoint-editors/node-shell-scripting-with-zx">available on GitHub</a>.</p>
<h2 id="howdoesgoogleszxwork">How Does Google&#8217;s zx Work?</h2>
<p>Google&#8217;s zx provides functions that wrap up the creation of child processes, and the handling of <code>stdout</code> and <code>stderr</code> from those processes. The primary function we&#8217;ll be working with is the <code>$</code> function. Here&#8217;s an example of it in action:</p>
<pre><code class="javascript language-javascript">import { $ } from "zx";

await $`ls`;
</code></pre>
<p>And here&#8217;s the output from executing that code:</p>
<pre><code class="bash language-bash">$ ls
bootstrap-tool
hello-world
node_modules
package.json
README.md
typescript
</code></pre>
<p>The JavaScript syntax in the example above might look a little funky. It&#8217;s using a language feature called <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals">tagged template literals</a>. It&#8217;s functionally the same as writing <code>await $("ls")</code>.</p>
<p>Google&#8217;s zx provides several other utility functions to make shell scripting easier, such as:</p>
<ul>
<li><code>cd()</code>. This allows us to change our current working directory.</li>
<li><code>question()</code>. This is a wrapper around the Node.js <a href="https://nodejs.org/api/readline.html">readline</a> module. It makes it straightforward to prompt for user input.</li>
</ul>
<p>As well as the utility functions that zx provides, it also makes several popular libraries available to us, such as:</p>
<ul>
<li><strong><a href="https://www.npmjs.com/package/chalk">chalk</a></strong>. This library allows us to add color to the output from our scripts. </li>
<li><strong><a href="https://www.npmjs.com/package/minimist">minimist</a></strong>. A library that parses command-line arguments. They&#8217;re then exposed under an <code>argv</code> object.</li>
<li><strong><a href="https://www.npmjs.com/package/node-fetch">fetch</a></strong>. A popular Node.js implementation of the <a href="https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API">Fetch API</a>. We can use it to make HTTP requests.</li>
<li><strong><a href="https://www.npmjs.com/package/fs-extra">fs-extra</a></strong>. A library that exposes the Node.js core <a href="https://nodejs.org/api/fs.html">fs module</a>, as well as a number of additional methods to make it easier to work with a file system.</li>
</ul>
<p>Now that we know what zx gives us, let&#8217;s create our first shell script with it.</p>
<h2 id="helloworldwithgoogleszx">Hello World with Google&#8217;s zx</h2>
<p>First, let&#8217;s create a new project:</p>
<pre><code class="bash language-bash">mkdir zx-shell-scripts
cd zx-shell-scripts

npm init --yes
</code></pre>
<p>Then we can install the <code>zx</code> library:</p>
<pre><code class="bash language-bash">npm install --save-dev zx
</code></pre>
<p><em>Note: the <code>zx</code> documentation suggests installing the library globally with npm. By installing it as a local dependency of our project instead, we can ensure that zx is always installed, as well as control the version that our shell scripts use.</em></p>
<h3 id="toplevelawait">Top-level <code>await</code></h3>
<p>In order to use top-level <code>await</code> in Node.js — <code>await</code> outside of an <code>async</code> function — we need to write our code in <a href="https://nodejs.org/api/esm.html">ECMAScript (ES) Modules</a>, which support top-level <code>await</code>. We can indicate that all modules in a project are ES modules by adding <code>"type": "module"</code> in our <code>package.json</code>, or we can set the file extension of individual scripts to <code>.mjs</code>. We&#8217;ll be using the <code>.mjs</code> file extension for the examples in this article.</p>
<h3 id="runningacommandandcapturingitsoutput">Running a command and capturing its output</h3>
<p>Let&#8217;s create a new script named <code>hello-world.mjs</code>. We&#8217;ll add a <a href="https://dev.to/meleu/what-the-shebang-really-does-and-why-it-s-so-important-in-your-shell-scripts-2755">shebang line</a>, which tells the operating system (OS) <a href="https://en.wikipedia.org/wiki/Kernel_(operating_system)">kernel</a> to run the script with the <code>node</code> program:</p>
<pre><code class="javascript language-javascript">#! /usr/bin/env node
</code></pre>
<p>Now we&#8217;ll add some code that uses zx to run a command.</p>
<p>In the following code, we&#8217;re running a command to execute the <a href="https://en.wikipedia.org/wiki/Ls">ls</a> program. The <code>ls</code> program will list the files in the current working directory (the directory which the script is in). We&#8217;ll capture the standard output from the command&#8217;s process, store it in a variable and then log it out to the terminal:</p>
<pre><code class="javascript language-javascript">// hello-world.mjs

import { $ } from "zx";

const output = (await $`ls`).stdout;

console.log(output);
</code></pre>
<p><em>Note: the <code>zx</code> documentation suggests putting <code>/usr/bin/env zx</code> in the shebang line of our scripts, but we&#8217;re using <code>/usr/bin/env node</code> instead. This is because we&#8217;ve installed <code>zx</code> as a local dependency of our project. We&#8217;re then explicitly importing the functions and objects that we want to use from the <code>zx</code> package. This helps make it clear where the dependencies used in our script are coming from.</em></p>
<p>We&#8217;ll then use <a href="https://en.wikipedia.org/wiki/Chmod">chmod</a> to make the script executable:</p>
<pre><code class="javascript language-javascript">chmod u+x hello-world.mjs
</code></pre>
<p>Let&#8217;s run our script:</p>
<pre><code class="bash language-bash">./hello-world.mjs
</code></pre>
<p>We should now see the following output:</p>
<pre><code class="bash language-bash">$ ls
hello-world.mjs
node_modules
package.json
package-lock.json
README.md
hello-world.mjs
node_modules
package.json
package-lock.json
README.md
</code></pre>
<p>You&#8217;ll notice a few things in the output from our shell script:</p>
<ul>
<li>The command we ran (<code>ls</code>) is included in the output.</li>
<li>The output from the command is displayed twice.</li>
<li>There&#8217;s an extra new line at the end of the output.</li>
</ul>
<p><code>zx</code> operates in <code>verbose</code> mode by default. It will output the command you pass to the <code>$</code> function and also output the standard output from that command. We can change this behavior by adding in the following line of code before we run the <code>ls</code> command:</p>
<pre><code class="javascript language-javascript">$.verbose = false;
</code></pre>
<p>Most command line programs, such as <code>ls</code>, will output a new line character at the end of their output to make the output more readable in the terminal. This is good for readability, but as we&#8217;re storing the output in a variable, we don&#8217;t want this extra new line. We can get rid of it with the JavaScript <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/trim">String#trim()</a> function:</p>
<pre><code class="diff language-diff">- const output = (await $`ls`).stdout;
+ const output = (await $`ls`).stdout.trim();
</code></pre>
<p>If we run our script again, we&#8217;ll see things look much better:</p>
<pre><code class="bash language-bash">hello-world.mjs
node_modules
package.json
package-lock.json
</code></pre>
<h2 id="usinggoogleszxwithtypescript">Using Google&#8217;s zx with TypeScript</h2>
<p>If we want to write shell scripts that use <code>zx</code> in TypeScript, there are a couple of minor differences we need to account for.</p>
<p><em>Note: the TypeScript compiler provides a number of configuration options that allow us to adjust how it compiles our TypeScript code. With that in mind, the following TypeScript configuration and code are designed to work under most versions of TypeScript.</em></p>
<p>First, let&#8217;s install the dependencies we&#8217;ll need to run our TypeScript code:</p>
<pre><code class="bash language-bash">npm install --save-dev typescript ts-node
</code></pre>
<p>The <a href="https://www.npmjs.com/package/ts-node">ts-node</a> package provides a TypeScript execution engine, allowing us to transpile and run TypeScript code.</p>
<p>We need to create a <code>tsconfig.json</code> file containing the following configuration:</p>
<pre><code class="javascript language-javascript">{
  "compilerOptions": {
    "target": "es2017",
    "module": "commonjs"
  }
}
</code></pre>
<p>Let&#8217;s now create a new script named <code>hello-world-typescript.ts</code>. First, we&#8217;ll add a shebang line that tells our OS kernel to run the script with the <code>ts-node</code> program:</p>
<pre><code class="typescript language-typescript">#! ./node_modules/.bin/ts-node
</code></pre>
<p>In order to use the <code>await</code> keyword in our TypeScript code, we need to wrap it in an immediately invoked function expression (IIFE), as recommended in the <a href="https://www.npmjs.com/package/zx">zx documentation</a>:</p>
<pre><code class="javascript language-javascript">// hello-world-typescript.ts

import { $ } from "zx";

void (async function () {
  await $`ls`;
})();
</code></pre>
<p>We then need to make the script executable so that we can execute it directly:</p>
<pre><code class="javascript language-javascript">chmod u+x hello-world-typescript.ts
</code></pre>
<p>When we run the script:</p>
<pre><code class="bash language-bash">./hello-world-typescript.ts
</code></pre>
<p>… we should see the following output:</p>
<pre><code class="bash language-bash">$ ls
hello-world-typescript.ts
node_modules
package.json
package-lock.json
README.md
tsconfig.json
</code></pre>
<p>Writing scripts with <code>zx</code> in TypeScript is similar to using JavaScript, but requires a little extra configuration and wrapping of our code.</p>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/google-zx-write-node-shell-scripts/?utm_source=rss">How to Write Shell Scripts in Node with Google’s zx Library</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/google-zx-write-node-shell-scripts/?utm_source=rss</link><guid isPermaLink="false">/?p=254657</guid><category><![CDATA[JavaScript]]></category><dc:creator><![CDATA[Simon Plenderleith]]></dc:creator><pubDate>Mon, 13 Dec 2021 15:00:02 GMT</pubDate><metaDesc>Learn what Google's zx library is, how to use it, and how it helps make shell scripting with Node.js much more efficient and enjoyable.</metaDesc></item><item><title><![CDATA[The Most Popular React UI Component Libraries in 2022]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/popular-react-ui-component-libraries/?utm_source=rss"
              title="The Most Popular React UI Component Libraries in 2022"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2021/12/1639292683react-ui-component-libraries.jpg"
        alt="The Most Popular React UI Component Libraries in 2022"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/12/1639292683react-ui-component-libraries-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/12/1639292683react-ui-component-libraries-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/12/1639292683react-ui-component-libraries-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/12/1639292683react-ui-component-libraries.jpg 1200w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong>In this article, we&#8217;ll review some of the best React UI component libraries, and how to choose the right one for you. The article is written primarily for beginner React developers, but you&#8217;ll need some familiarity with specific terms in React.</strong></p>
<p>React powers the user interfaces (UI) of close to <a rel="nofollow" href="https://trends.builtwith.com/javascript/React">10 million websites</a> around the world. While the base library of React is solid, there are multiple component libraries filled with valuable design elements for your React app or web development project.</p>
<p>To help you find the best React UI library for your current project, let’s take a look at the most popular React UI libraries on GitHub. We’ll analyze their application in development and bring examples, as well as look at their popularity among developers based on usage statistics from GitHub and npm.</p>
<p>Let’s start with why you should be thinking about using a React UI library in the first place.</p>
<h2 id="doineedareactuicomponentlibrary">Do I need a React UI Component Library?</h2>
<p>Different React UI component libraries each have their pros and cons, which we&#8217;ll discuss more in detail below. But in general, using any component library can have many benefits that will help you when working on your React project:</p>
<ul>
<li><strong>Beginner-friendly</strong>. UI libraries consist of prebuilt components like buttons, form fields, etc. So, as a beginner, you won&#8217;t have to figure out how to create any of the necessary elements from scratch. Instead, you can focus on the implementation and customization with the help of the documentation.</li>
<li><strong>Faster prototyping</strong>. With ready-made React components at your disposal, you can quickly create several functioning prototypes. This means you can prove that the design concept is functioning without having to spend too much time on any of the details.</li>
<li><strong>Saves time</strong>. Using a component library saves time not only when prototyping, but also when already working on your React project. It enables you to write less code, as you won&#8217;t have to write all the styles yourself.</li>
<li><strong>Recognizable components by users</strong>. Innovation to a certain extent helps your project stand out. But too much innovation in designing UX/UI can put users off. As the UI elements in libraries are designed to be universal, they won&#8217;t cause any friction for your users.</li>
<li><strong>Customizable components</strong>. Despite being universal, most elements can be customized at least to some extent. Each library gives you a different amount of control over the customization, but you&#8217;ll be able to make sure your website doesn&#8217;t look to much like many others.</li>
<li><strong>Proven compatibility across devices</strong>. Most prebuilt UI components are mobile-responsive by default, which means you won&#8217;t have to put a lot of extra effort into ensuring your React project works on different types of devices.</li>
<li><strong>Accessible by default</strong>. Most popular React UI component libraries have built-in accessibility features or even fully adhere to WCAG or other standards and best practices. Thanks to this, you won&#8217;t have to worry about self-coding semantic tags or keyboard navigation.</li>
<li><strong>Crowd-sourced</strong>. UI component libraries often have their communities centered around GitHub. This means users can raise issues, request features, and also easily become contributors to the libraries.</li>
</ul>
<p>Despite these many upsides, even the best React UI component libraries have some downsides that you should consider before you commit to one:</p>
<ul>
<li><strong>Customizing components can be difficult</strong>. Depending on the specific library you choose, the ease of customizing components differs. With some React libraries, you get primitive components that are meant to be heavily customized by the developer, but with others, getting the result you want can be tricky.</li>
<li><strong>Similar web design with other sites</strong>. Each React UI library has its design system, so if you choose to use a popular library but don&#8217;t customize the components or theme enough, your site can end up looking very similar to other sites using the same library — in some cases, even unoriginal. However, depending on your project, that might not be an issue at all.</li>
<li><strong>Support relies on the community</strong>. Most React UI libraries don&#8217;t offer official support but instead guide their users to Stack Overflow, GitHub, Discord, or other similar channels. With less popular libraries, the community is smaller, and getting help can be more complicated.</li>
</ul>
<p>So, with these important considerations out of the way, let&#8217;s take a look at the most popular libraries based on GitHub statistics. We&#8217;ve listed the libraries based on their number of active projects on GitHub, starting with the most popular.</p>
<p>By the end of this post, you&#8217;ll hopefully have found the best React-based UI components library for your web or mobile app development project.</p>
<h2 id="1muiformerlymaterialui">1. MUI (formerly Material-UI)</h2>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/16382607601-MUI-formerly-Material-UI-React-libraries.jpg" alt="MUI React library (formerly Material UI)" /></p>
<p><img style="display:inline-block" src="https://flat.badgen.net/github/dependents-repo/mui-org/material-ui" alt="MUI dependents count" /> <img style="display:inline-block" src="https://flat.badgen.net/npm/dw/@mui/material" alt="MUI weekly downloads" /> <img style="display:inline-block" src="https://flat.badgen.net/github/stars/mui-org/material-ui" alt="MUI star count" /> <img style="display:inline-block" src="https://flat.badgen.net/github/forks/mui-org/material-ui" alt="MUI forks count" /></p>
<p>Used by more than 745,000 projects on GitHub, <a rel="nofollow" href="https://mui.com/">MUI</a> is a straightforward and customizable React components library based on Google&#8217;s Material Design. So, MUI is not simply a component library, but an entire design system. It features a wholesome system of guidelines, design principles, and best practices of UI design. MUI is built on 63.9% JavaScript and 36.1% TypeScript.</p>
<p>You can use MUI with its large set of components to easily create a user interface in React applications. Either use the existing Material Design components, customize them, or create your own design system. Thanks to MUI&#8217;s ready-made components and in-depth documentation, you can create clean and beautiful mobile or web apps fast — even with little previous design experience.</p>
<p>As the Material-UI design system that MUI is based on was created by Google, it&#8217;s also used on Google’s own platform. Therefore, MUI components can have a distinctly Google-like look and feel. On the one hand, this means MUI can be an especially great choice for building Android apps, as the app’s visuals will fit well with the operating system.</p>
<p>But on the other hand, any website or app created with this library — if not customized enough — could be easily associated with Google.</p>
<p>Still, seeing how much MUI is used and how many GitHub stars it has, it’s one of the best React UI component libraries out there. It offers a large number of React components, suitable for a wide variety of general-purpose development projects. MUI is used by medium.com, Scale AI, and UNIQLO, among others.</p>
<p>The picture below shows an example of MUI <a rel="nofollow" href="https://mui.com/components/rating/">rating variants</a>.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/16382607641-MUI-star-rating-components.jpg" alt="Rating variants in MUI" /></p>
<p>You can install the MUI components library using npm:</p>
<pre><code class="bash language-bash">npm install @mui/material @emotion/react @emotion/styled
</code></pre>
<p>Or yarn:</p>
<pre><code class="bash language-bash">yarn add @mui/material @emotion/react @emotion/styled
</code></pre>
<h2 id="2reactbootstrap">2. React-Bootstrap</h2>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/16382607692-React-Bootstrap-UI-element-library.jpg" alt="React-Bootstrap UI element library" /></p>
<p><img style="display:inline-block" src="https://flat.badgen.net/github/dependents-repo/react-bootstrap/react-bootstrap" alt="React-Bootstrap dependents count" /> <img style="display:inline-block" src="https://flat.badgen.net/npm/dw/react-bootstrap" alt="React-Bootstrap weekly downloads" /> <img style="display:inline-block" src="https://flat.badgen.net/github/stars/react-bootstrap/react-bootstrap" alt="React-Bootstrap star count" /> <img style="display:inline-block" src="https://flat.badgen.net/github/forks/react-bootstrap/react-bootstrap" alt="React-Bootstrap forks count" /></p>
<p>Used by 605,000+ projects on GitHub, <a rel="nofollow" href="https://react-bootstrap.github.io/">React-Bootstrap</a> is one of the oldest React UI component libraries out there. In a nutshell, it’s the popular frontend framework Bootstrap completely rebuilt in React. The library consists of ready-made components that are fully responsive and accessible. All the design elements are also highly customizable.</p>
<p>React-Bootstrap can be used for UI foundations, websites, and designing applications. The library is built on 59.4% JavaScript, 38.3% TypeScript, and 2.3% SCSS, and the latest release is compatible with the most recent Bootstrap version, 5.1.</p>
<p>One important upside to using React-Bootstrap is the fact that it’s compatible with the thousands of Bootstrap themes out there. Also, creating custom themes is easy when you keep in mind the classes and variants defined in Bootstrap. On top of that, with React-Bootstrap, you can import only the individual components you’re using, which can help minimize the total amount of code. It’s also a beginner-friendly library, thanks to its proper documentation.</p>
<p>However, as a downside, if you’re familiar with Bootstrap and decide to choose React-Bootstrap for your development project, you’ll have to learn a new API. Moreover, when compared to some other libraries, like MUI or Ant Design, React-Bootstrap has a somewhat smaller set of components.</p>
<p>In the end, React-Bootstrap’s popularity is a clear sign that it’s a great choice for a wide variety of development projects. And if you’re already familiar with Bootstrap, it can feel natural to use React-Bootstrap, too.</p>
<p>The image below shows an example of React-Bootstrap&#8217;s <a rel="nofollow" href="https://react-bootstrap.netlify.app/components/buttons/">button variants</a>.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/16382607662-React-Bootstrap-button-variants.jpg" alt="Button variants in React-Bootstrap" /></p>
<p>How to install:</p>
<pre><code class="bash language-bash">npm install react-bootstrap
</code></pre>
<p>You can install React-Bootstrap components using yarn:</p>
<pre><code class="bash language-bash">yarn add react-bootstrap
</code></pre>
<h2 id="3antdesign">3. Ant Design</h2>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/16382607743-Ant-Design-React-component-library.jpg" alt="Ant Design React component library" /></p>
<p><img style="display:inline-block" src="https://flat.badgen.net/github/dependents-repo/ant-design/ant-design" alt="Ant Design dependents count" /> <img style="display:inline-block" src="https://flat.badgen.net/npm/dw/antd" alt="Ant Design weekly downloads" /> <img style="display:inline-block" src="https://flat.badgen.net/github/stars/ant-design/ant-design" alt="Ant Design star count" /> <img style="display:inline-block" src="https://flat.badgen.net/github/forks/Ant-Design/ant-design" alt="Ant Design forks count" /></p>
<p>Used by over 255,000 projects on GitHub, <a rel="nofollow" href="https://ant.design/">Ant Design</a> describes itself as a React UI library and design system for enterprise-level users, meaning that the elements are designed for business use. It was created by Alibaba, the Chinese tech giant.</p>
<p>Ant Design offers a large set of high-quality components that are great for building entire UI frameworks quickly — or you can just use individual components. The library is built on 43.7% TypeScript, 31.1% JavaScript, 24.9% Less, and 0.3% unspecified code.</p>
<p>Ant Design is a great React component library, in part thanks to its great documentation that includes plenty of guidelines, examples, and variants. In addition to that, it’s also a robust platform when it comes to customizing the existing components and themes in detail.</p>
<p>Furthermore, what’s great about Ant Design is its compatibility with lots of third-party React libraries and several of their own products, like <a rel="nofollow" href="https://antv.vision/en">AntV Data Visualization</a>, <a rel="nofollow" href="https://charts.ant.design/en">Ant Design Charts</a>, and <a rel="nofollow" href="https://mobile.ant.design/">Ant Design Mobile</a>. These help expand the number of use cases that you can cover with their libraries.</p>
<p>One of the downsides to Ant Design is its huge bundle size (1.2 MB), when compared to other React libraries, which are usually around several hundred kilobytes. And if you’re not working on a development project with considerable business needs, then this library might be a bit of overkill.</p>
<p>In addition to Alibaba, Ant Design is also used by the likes of Lenovo and Toyota, so it’s a great choice for high-level business projects. And the thorough resources can still make it a great option for beginners. On top of that, it has even more stars on GitHub than MUI does, which is more evidence of its greatness.</p>
<p>The image below shows an example of <a rel="nofollow" href="https://ant.design/components/icon/">icon variants</a> in Ant Design.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/16382607723-Ant-Design-icon-variants.jpg" alt="Icon variants in Ant Design" /></p>
<p>You can install Ant Design components using npm:</p>
<pre><code class="bash language-bash">npm install antd
</code></pre>
<p>Or yarn:</p>
<pre><code class="bash language-bash">yarn add antd
</code></pre>
<h2 id="4reactstrap">4. Reactstrap</h2>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/16382607804-Reactstrap-UI-component-library.jpg" alt="Reactstrap UI component library" /></p>
<p><img style="display:inline-block" src="https://flat.badgen.net/github/dependents-repo/reactstrap/reactstrap" alt="Reactstrap dependents count" /> <img style="display:inline-block" src="https://flat.badgen.net/npm/dw/reactstrap" alt="Reactstrap weekly downloads" /> <img style="display:inline-block" src="https://flat.badgen.net/github/stars/reactstrap/reactstrap" alt="Reactstrap star count" /> <img style="display:inline-block" src="https://flat.badgen.net/github/forks/reactstrap/reactstrap" alt="Reactstrap forks count" /></p>
<p>Used by 241,000+ projects on GitHub, <a rel="nofollow" href="https://reactstrap.github.io/">Reactstrap</a> offers straightforward and self-contained components for Bootstrap 5.1. The UI elements are responsive, simple in design, and applicable for a variety of projects. Reactstrap is built on 74.7% JavaScript, 24.9% TypeScript, and 0.4% Shell.</p>
<p>You can use Reactstrap for complete UI development or only use individual components. It offers great flexibility and prebuilt validation, which is great for quickly building beautiful forms with a great user experience.</p>
<p>As Reactstrap is a younger component library than some other mentions on this list, it does have slightly fewer components available. Then again, this can be a good thing if you’re aiming for a simple design and you don’t want to be overwhelmed by too many options.</p>
<p>The official Reactstrap documentation is thorough, but it mainly consists of code and doesn’t have a lot of explanations. However, as it’s quite a straightforward library, it’s still easy to understand and work with — even for beginners. On top of that, there’s a decent community around Reactstrap and you can speed up your development thanks to the many free and premium Reactstrap themes available.</p>
<p>All in all, Reactstrap is similar to React-Bootstrap, with a few small differences. If you like working with Bootstrap, you can easily choose either for your project.</p>
<p>The image below shows an example of <a rel="nofollow" href="https://reactstrap.github.io/?path=/docs/components-button--button-dropdown">button dropdown variants</a> in Reactstrap.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/16382607774-Reactstrap-button-dropdown-components.jpg" alt="Button dropdown variants in Reactstrap" /></p>
<p>To use Reactstrap, you first need to install Bootstrap:</p>
<pre><code class="bash language-bash">npm install bootstrap
</code></pre>
<p>Or:</p>
<pre><code class="bash language-bash">yarn add bootstrap
</code></pre>
<p>Then you can install Reactstrap using npm:</p>
<pre><code class="bash language-bash">npm install reactstrap react react-dom
</code></pre>
<p>Or using yarn:</p>
<pre><code class="bash language-bash">yarn add reactstrap
</code></pre>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/popular-react-ui-component-libraries/?utm_source=rss">The Most Popular React UI Component Libraries in 2022</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/popular-react-ui-component-libraries/?utm_source=rss</link><guid isPermaLink="false">/?p=254645</guid><category><![CDATA[JavaScript]]></category><dc:creator><![CDATA[Kaarle Varkki]]></dc:creator><pubDate>Sun, 12 Dec 2021 15:00:51 GMT</pubDate><metaDesc>A UI library can help kickstart your React app or web dev project. Learn about 9 popular React UI component libraries and when to use them.</metaDesc></item><item><title><![CDATA[A Beginner’s Guide to Creating a Map Using Leaflet.js]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/leaflet-create-map-beginner-guide/?utm_source=rss"
              title="A Beginner’s Guide to Creating a Map Using Leaflet.js"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2021/12/1639032987leaflet.jpg"
        alt="A Beginner’s Guide to Creating a Map Using Leaflet"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/12/1639032987leaflet-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/12/1639032987leaflet-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/12/1639032987leaflet-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/12/1639032987leaflet.jpg 1200w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong>Leaflet is currently one of the most <a rel="nofollow" style="font-weight:bold" href="https://leafletjs.com/">popular mapping libraries</a>. It&#8217;s a flexible, lightweight, and open-source JavaScript library for creating interactive maps.</strong></p>
<p>Leaflet is a framework for presenting map data. The data, along with the base map layer, must be provided by the developers. The maps are composed of tile layers along with browser support, default interactivity, panning and zooming capabilities. You can also add more custom layers and plugins, along with all the mapping in Leaflet. This mapping library converts your data to map layers and has wonderful support, making it the first choice for most developers. It works really well across major desktop and mobile platforms, making it a perfect JavaScript library for mobile and larger screen maps as well.</p>
<p>In this tutorial, I&#8217;m going to show you how to create a beautiful and interactive map of the South Pacific with HTML, CSS and Leaflet that will highlight the most popular beaches. I collected the data from the TripAdvisor website and collated the top ten beaches of the South Pacific as rated by the <a rel="nofollow" href="https://www.tripadvisor.com.au/TravelersChoice-Beaches-cTop-g255055">Travellers&#8217; Choice 2021 poll</a>.</p>
<p>Have you seen some interesting online maps and wished to create one yourself? Follow along on this exciting journey as I show you how to plot a cool map and highlight the top ten beaches using Leaflet.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1637142660final-gif.gif" alt="Leaflet map gif showing the different layers" /></p>
<h2 id="creatingabasicleafletmapinfoursteps">Creating a Basic Leaflet Map in Four Steps</h2>
<p>The process for building a simple map with leaflet is straightforward. Some background knowledge of HTML and JavaScript is beneficial, but don&#8217;t worry if you&#8217;re a complete beginner. It&#8217;s quite easy with this JavaScript library, and I&#8217;ll walk you through each line of code as I create this stunning, insightful map.</p>
<h3 id="createabasichtmlpage">Create a basic HTML page</h3>
<p>To start with, I create an HTML page to render the map object. I then add a <code>&lt;/div&gt;</code> to hold the map and give it an ID like <code>map</code> to reference later. Next, I add some style details where I specify the width and height as <code>100vw</code> and <code>100vh</code>. This will make the map occupy the whole page:</p>
<pre><code class="markup language-markup">&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
  &lt;head&gt;
    &lt;meta charset="utf-8"&gt;
    &lt;title&gt;Leaflet Map&lt;/title&gt;
    &lt;style type="text/css"&gt;
      body{
        margin: 0;
        padding: 0;
      }
      #map {
        width: 100vw;
        height: 100vh;
      }
    &lt;/style&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;div id="map"&gt;&lt;/div&gt;
  &lt;/body&gt;
&lt;/html&gt;
</code></pre>
<h3 id="referencethefilesoftheopensourceleafletjavascriptlibrary">Reference the files of the open-source Leaflet JavaScript library</h3>
<p>Since I&#8217;m using the Leaflet library, I need to include the necessary JavaScript and CSS files of this library. You can <a rel="nofollow" href="https://leafletjs.com/download.html">download the files directly, use the JavaScript package manager (npm) to install the files locally, or use the hosted version</a> from their CDN:</p>
<pre><code class="markup language-markup">&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
  &lt;head&gt;
    &lt;meta charset="utf-8"&gt;
    &lt;title&gt;Leaflet Map&lt;/title&gt;
    &lt;link rel="stylesheet" href="https://unpkg.com/leaflet@1.6.0/dist/leaflet.css" integrity="sha512-xwE/Az9zrjBIphAcBb3F6JVqxf46+CDLwfLMHloNu6KEQCAWi6HcDUbeOfBIptF7tcCzusKFjFw2yuvEpDL9wQ==" crossorigin="" /&gt;
    &lt;style type="text/css"&gt;
      body{
        margin: 0;
        padding: 0;
      }
      #map {
        width: 100vw;
        height: 100vh;
      }
    &lt;/style&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;div id="map"&gt;&lt;/div&gt;

    &lt;script src="https://unpkg.com/leaflet@1.6.0/dist/leaflet.js" integrity="sha512-gZwIG9x3wUXg2hdXF6+rVkLF/0Vi9U8D2Ntg4Ga5I5BZpVkVxlJWbSQtXPSiUTtC0TjtGOmxa1AJPuV0CPthew==" crossorigin=""&gt;&lt;/script&gt;
    &lt;script&gt;
      // All the code for the leaflet map will come here
    &lt;/script&gt;
  &lt;/body&gt;
&lt;/html&gt;
</code></pre>
<p><em>Note: the <code>integrity</code> attribute allows a browser to check the fetched script to ensure that the code isn&#8217;t loaded if the source has been manipulated.</em></p>
<h3 id="preparethedata">Prepare the data</h3>
<p>To plot any map, I require co-ordinate values like latitude and longitude. I collate the latitude and longitude for each of the data points from this site <a rel="nofollow" href="https://www.latlong.net/">here</a>. Moreover, for the Leaflet development, I also need the base layer, which I get from a site called <a rel="nofollow" href="https://www.openstreetmap.org/#map=4/-19.64/142.38">OpenStreetMap</a>.</p>
<h3 id="setuptheleafletmap">Set up the Leaflet map</h3>
<p>Now comes the interesting part of creating the map by writing some lines of code. You won&#8217;t believe how few lines of code are required to create fully functional maps with Leaflet. This ease of development, along with the fact that Leaflet is an open-source JavaScript library, puts it high on the list of mapping libraries.</p>
<p>So, to begin with, remember that everything in this JavaScript library is accessed by the letter “L”, and all the functions are extended through it.</p>
<h4 id="initializethemap">Initialize the map</h4>
<p>The first thing I do is declare the map variable and initialize it with the Leaflet map. The first parameter is the ID of the <code>&lt;div&gt;</code> previously defined. The second is where you want the centre of the map to be. The last is the zoom level. I&#8217;ve set the zoom to 3.5, but you can set it to anything you like.</p>
<p>I use these parameters for my map, but there are lots of different options available for setting the state of map, interaction, animation and events that you can check out <a rel="nofollow" href="https://leafletjs.com/reference.html#map-l-map">here</a>:</p>
<pre><code class="javascript language-javascript">const map = L.map('map', {
  center: [-29.50, 145],
  zoom: 3.5
});
</code></pre>
<h4 id="addthebaselayer">Add the base layer</h4>
<p>Next, I&#8217;ve added the tile layer, which will be the base layer for the Leaflet map. A tile layer is a set of tiles accessed over a server by a direct URL request. This tile layer adds the geographic boundaries to the map.</p>
<p>Be sure to include attribution text for this, as most developers forget to do that:</p>
<pre><code class="javascript language-javascript">L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', { attribution: '&amp;copy; &lt;a href="https://www.openstreetmap.org/copyright"&gt;OpenStreetMap&lt;/a&gt; contributors' }).addTo(map);
</code></pre>
<h4 id="addthedefaultmarkers">Add the default markers</h4>
<p>To indicate the beaches, I add markers. Leaflet provides this feature as default. Since I need to show ten beaches, I&#8217;ll add a marker each with the latitude and longitude values of the respective beach:</p>
<pre><code class="javascript language-javascript">const marker1 = L.marker([-37.699450, 176.279420]).addTo(map);
const marker2 = L.marker([-27.643310, 153.305140]).addTo(map);
const marker3 = L.marker([-33.956330, 122.150270]).addTo(map);
const marker4 = L.marker([-34.962390, 117.391220]).addTo(map);
const marker5 = L.marker([-17.961210, 122.214820]).addTo(map);
const marker6 = L.marker([-16.505960, 151.751520]).addTo(map);
const marker7 = L.marker([-22.594400, 167.484440]).addTo(map);
const marker8 = L.marker([-37.977000, 177.057000]).addTo(map);
const marker9 = L.marker([-41.037600, 173.017000]).addTo(map);
const marker10 = L.marker([-37.670300, 176.212000]).addTo(map);
</code></pre>
<p>Voila! An absolutely lovely and functional Leaflet map is all set up and ready. Wasn&#8217;t this Leaflet development a breeze?</p>
<p>The image below shows what this all looks like so far.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1637142666initial.png" alt="Leaflet map initial version" /></p>
<p>You can find the entire code <a href="https://codepen.io/SitePoint/pen/jOGrLbY?editors=0010">in this Pen</a>:</p>
<p class="codepen" data-height="600" data-default-tab="result" data-slug-hash="jOGrLbY" data-user="SitePoint" style="height: 600px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;">
  <span>See the Pen <a href="https://codepen.io/SitePoint/pen/jOGrLbY"><br />
  Leaflet Top South Pacific Beaches-Initial</a> by SitePoint (<a href="https://codepen.io/SitePoint">@SitePoint</a>)<br />
  on <a href="https://codepen.io">CodePen</a>.</span>
</p>
<p><script async src="https://cpwebassets.codepen.io/assets/embed/ei.js"></script></p>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/leaflet-create-map-beginner-guide/?utm_source=rss">A Beginner’s Guide to Creating a Map Using Leaflet.js</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/leaflet-create-map-beginner-guide/?utm_source=rss</link><guid isPermaLink="false">/?p=254590</guid><category><![CDATA[JavaScript]]></category><category><![CDATA[Web]]></category><dc:creator><![CDATA[Shachee Swadia]]></dc:creator><pubDate>Wed, 08 Dec 2021 15:00:43 GMT</pubDate><metaDesc>Learn how easy it is to create a beautiful, interactive map with HTML, CSS &amp; Leaflet, a user-friendly, open-source JavaScript mapping library.</metaDesc></item><item><title><![CDATA[5 Reasons You Should Adopt a Micro Frontend Architecture]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/micro-frontend-architecture-benefits/?utm_source=rss"
              title="5 Reasons You Should Adopt a Micro Frontend Architecture"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2021/12/1638919155micro-frontends.jpg"
        alt="5 Reasons You Should Adopt a Micro-frontend Architecture"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/12/1638919155micro-frontends-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/12/1638919155micro-frontends-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/12/1638919155micro-frontends-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/12/1638919155micro-frontends.jpg 1200w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong>Micro frontends are an architectural approach to frontend development that has become increasingly popular. This could easily represent the future of frontend web development, and this is why learning the main benefits that such an architecture can bring to your applications and development team is critical.</strong></p>
<p>My team and I have been using this approach for two years, and it&#8217;s time to share everything we have learned, as well as the most important reasons why you should start thinking about employing it in your next projects.</p>
<p>Let’s first study what the micro frontend architecture is and then dive into the five reasons to adopt it now.</p>
<h2 id="whatisamicrofrontendarchitecture">What is a Micro Frontend Architecture?</h2>
<p>Over the past few years, IT companies have begun to break large software into smaller, easier-to-manage chunks. The idea behind this approach is to have many services that can be developed, tested, and deployed independently.</p>
<p>This is what the <a href="https://en.wikipedia.org/wiki/Microservices">microservice architecture</a> is with regard to backend development. But the same approach can be applied to frontend development as well, and it&#8217;s named micro frontend architecture. On <a href="https://martinfowler.com/articles/micro-frontends.html">Martin Fowler’s official website</a>, the micro frontend approach is defined as:</p>
<blockquote>
<p>an architectural style where independently deliverable frontend applications are composed into a greater whole.</p>
</blockquote>
<p>This architectural approach to frontend web development has become more and more popular because of the well-known pitfalls coming with the traditional monolithic approach. This is mainly because frontend software tends to grow rapidly, and when a monolithic architecture is used, everything gets far more difficult to maintain.</p>
<p>On the other hand, micro frontends give you the ability to achieve a less complex and cumbersome architecture. In particular, thanks to the micro frontend approach, you can split an entire application into small, independent parts. Each of them will then be implementable by different frontend teams, and even with different technologies. This ensures the same scalability, flexibility, and adaptability that comes with the backend microservice architecture. Moreover, this approach allows you to mix micro frontend components developed with libraries or different frameworks on the same web page.</p>
<p>So, it shouldn&#8217;t surprise you that micro frontends are now a trend in the IT community, and it&#8217;s an approach that&#8217;s being increasingly adopted. </p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/12/1638919155micro-frontends.jpg" alt="Micro frontend architecture" /></p>
<h2 id="5benefitsofchoosingmicrofrontendstoday">5 Benefits of Choosing Micro Frontends Today</h2>
<p>Developing with micro frontend has taught me what are the real strengths of this approach to frontend development. </p>
<p>Now, let&#8217;s look at the five most relevant reasons to use it, backed by my experience as a frontend developer who has worked with micro frontends for more than two years.</p>
<p>To create a balanced picture, this article will then be followed up by another piece on the most important five pitfalls coming with micro frontends.</p>
<h3 id="scalinguptomultipleteams">Scaling up to multiple teams</h3>
<p>The team I work with consists of developers with different backgrounds and skills. Some are experts in <a href="https://reactjs.org/">React</a>, other <a href="https://vuejs.org/">Vue.js</a>, or <a href="https://angular.io/">Angular</a>. Some prefer to code in <a href="https://en.wikipedia.org/wiki/javaScript">JavaScript</a>, others in <a href="https://en.wikipedia.org/wiki/TypeScript">TypeScript</a>. Initially, this represented an obstacle. The only solution was to find common ground, although this choice would have forced some devs to learn new technologies and lose their expertise. So, we looked for a solution and decided to adopt the micro frontend architectural approach.</p>
<p>Thanks to this, we were able to split the original team into multiple teams where everyone can express themselves at their best. This is because the different teams can make the best possible decision in terms of architecture, testing, and coding style based on the business logic they have to tackle. Plus, this approach inherently leads to code and style isolation, making each team independent of the others.</p>
<p>Micro frontends are also helpful in terms of the end result. This is what our team has learned after fully embracing this approach. In fact, having multiple small teams that are free to use the technologies they prefer means that they&#8217;re inherently less limited and consequently more motivated to write higher quality code.</p>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/micro-frontend-architecture-benefits/?utm_source=rss">5 Reasons You Should Adopt a Micro Frontend Architecture</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/micro-frontend-architecture-benefits/?utm_source=rss</link><guid isPermaLink="false">/?p=254179</guid><category><![CDATA[JavaScript]]></category><category><![CDATA[Web]]></category><dc:creator><![CDATA[Antonello Zanini]]></dc:creator><pubDate>Tue, 07 Dec 2021 15:00:50 GMT</pubDate><metaDesc>A micro frontend approach lets us split a frontend app into small, independent pieces. Learn five key reasons why this approach is so useful.</metaDesc></item><item><title><![CDATA[A Beginner’s Guide to Vue Router]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/a-beginners-guide-to-vue-router/?utm_source=rss"
              title="A Beginner’s Guide to Vue Router"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2021/12/1638838876vue-router.jpg"
        alt="A Beginner's Guide to Vue Router"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/12/1638838876vue-router-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/12/1638838876vue-router-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/12/1638838876vue-router-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/12/1638838876vue-router.jpg 1200w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong>In this tutorial, we’ll be looking at how we can implement routing in a Vue app using Vue Router. So we can have a hands-on practice, we’ll be building a simple Pokedex app using Vue and Vue Router.</strong> </p>
<p>Specifically, we’ll be covering the following:</p>
<ul>
<li>setting up a router</li>
<li>route parameters</li>
<li>declarative and programmatic navigation</li>
<li>nested routes</li>
<li>404 pages</li>
</ul>
<p>Every JavaScript UI framework that allows the creation of single page applications needs a way to navigate users from one page to another. All of this needs to be managed on the client-side by syncing the view that’s currently displayed on the page with the URL in the address bar. In the Vue world, the [official library] for managing this type of task is Vue Router.</p>
<p>As ever, the code for this tutorial can be found on <a href="https://github.com/sitepoint-editors/pokedex-vue-router">GitHub</a>.</p>
<h2 id="prerequisites">Prerequisites</h2>
<p>The following are required so you can make the best use of this tutorial:</p>
<ul>
<li>Basic knowledge of HTML, CSS, JavaScript, and Vue. If you know how to render something on the page using Vue, you should be able to follow along. A little knowledge on APIs would also help.</li>
<li><a href="https://www.sitepoint.com/quick-tip-multiple-versions-node-nvm/">Node.js</a> and <a href="https://cli.vuejs.org/">Vue CLI</a> installed on your machine. We’ll be using Vue 3 in this tutorial so make sure Vue CLI is updated.</li>
</ul>
<h2 id="appoverview">App Overview</h2>
<p>We’re going to build a Pokedex app. It will have three pages:</p>
<ul>
<li>
<p><strong>Pokemon list page</strong>. This is the default page which lists all the original 151 Pokemon.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/10/1635651665wan-vue-router-pokemon-list.png" alt="Pokemon List" /></p>
</li>
<li>
<p><strong>Pokemon page</strong>. This is where we display the basic details such as type and the description.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/12/1638837307wan-vue-router-pokemon-list.jpg" width="290" alt="Pokemon Page" /></p>
</li>
<li>
<p><strong>Pokemon details page</strong>. This is where we display the evolution chain, abilities and moves.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/10/1635651661wan-vue-router-pokemon-details.png" alt="Pokemon details" /></p>
</li>
</ul>
<h2 id="settinguptheapp">Setting Up the App</h2>
<p>Spin up a new Vue app using the Vue CLI:</p>
<pre><code class="bash language-bash">vue create poke-vue-router
</code></pre>
<p>Choose Vue 3 from the options listed:</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636867036vue-cli.png" alt="Vue CLI options" /></p>
<p>Once it&#8217;s done, navigate inside the project folder and install the libraries we need:</p>
<pre><code class="bash language-bash">cd poke-vue-router
npm install vue-router@4 axios
</code></pre>
<p>Note that we’re using Vue Router 4 instead of 3, which is the default result that shows up when you Google it. It’s at <code>next.router.vuejs.org</code> as opposed to <code>router.vuejs.org</code>. We’re using Axios to make a request to <a href="https://pokeapi.co/">PokeAPI v2</a>.</p>
<p>At this point, it&#8217;s a good idea to run the project to make sure the default Vue app is working:</p>
<pre><code class="bash language-bash">npm run serve
</code></pre>
<p>Visit <code>http://localhost:8080/</code> on your browser and check to see if the default Vue app is running. It should show something like this:</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636867035default-vue-app.png" alt="default vue app" /></p>
<p>Next, you need to add <code>sass-loader</code> as a dev dependency. For the purpose of this tutorial, it&#8217;s best to just install the same version I used. This is because, at the time of writing, the latest version isn&#8217;t compatible with Vue 3:</p>
<pre><code class="bash language-bash">npm install sass-loader@10.1.1 --save-dev
</code></pre>
<p>You also need to install <code>node-sass</code>, for the same reason as above. It&#8217;s best to stick with the same version as mine:</p>
<pre><code class="bash language-bash">npm install node-sass@4.14.1 --save
</code></pre>
<p><em>Note: if installing Sass this way doesn&#8217;t work for you, you can also choose <strong>Manually select features</strong> when creating the Vue app with the CLI. Then, select <strong>CSS Preprocessors</strong> and pick <strong>Sass/SCSS (with dart-sass)</strong>.</em></p>
<h2 id="creatingtheapp">Creating the App</h2>
<p>Now we’re ready to start building the app. As you follow along, remember that the root directory is the <code>src</code> folder.</p>
<p>Start by updating the <code>main.js</code> file. This is where we import the root component <code>App.vue</code> and the <code>router/index.js</code> file where we declare all things related to routing:</p>
<pre><code class="javascript language-javascript">// main.js

import { createApp } from "vue";
import App from "./App.vue";
import router from "./router";

const app = createApp(App);
app.use(router);
app.mount("#app");
</code></pre>
<h3 id="settinguparouter">Setting up a router</h3>
<p>In the <code>App.vue</code> file, use the <code>router-view</code> component provided by Vue Router. This is the top-most component used by Vue Router that renders the corresponding component for the current path visited by the user:</p>
<pre><code class="javascript language-javascript">// App.vue
&lt;template&gt;
  &lt;div id="app"&gt;
    &lt;router-view /&gt;
  &lt;/div&gt;
&lt;/template&gt;

&lt;script&gt;
export default {
  name: "App",
};
&lt;/script&gt;
</code></pre>
<p>Next, create a new <code>router/index.js</code> file and add the following. To create a router, we need to extract <code>createRouter</code> and <code>createWebHistory</code> from Vue Router. <code>createRouter</code> allows us to create a new router instance, while <code>createWebHistory</code> creates an HTML5 history that&#8217;s basically a wrapper for the <a href="https://developer.mozilla.org/en-US/docs/Web/API/History_API">History API</a>. It allows Vue Router to manipulate the address in the address bar when we’re navigating between pages:</p>
<pre><code class="javascript language-javascript">// router/index.js
import { createRouter, createWebHistory } from "vue-router";
</code></pre>
<p>Below that, import all the pages we’ll be using:</p>
<pre><code class="javascript language-javascript">import PokemonList from "../views/PokemonList.vue";
</code></pre>
<p>Vue Router requires an array of objects containing the <code>path</code>, <code>name</code>, and <code>component</code> as its properties:</p>
<ul>
<li><code>path</code>: this is the pattern you’d like to match. In the code below, we’re matching for the root path. So if the user tries to access <code>http://localhost:8000</code>, this pattern is matched.</li>
<li><code>name</code>: the name of the page. This is the unique identifier for the page and is what’s being used when you want to navigate to this page from other pages.</li>
<li><code>component</code>: the component you want to render when the <code>path</code> matches the URL the user accessed.</li>
</ul>
<pre><code class="javascript language-javascript">const routes = [
  {
    path: "/",
    name: "PokemonList",
    component: PokemonList,
  },
];
</code></pre>
<p>Finally, create the router instance by supplying an object containing the <code>history</code> and the <code>routes</code> to <code>createRouter</code>:</p>
<pre><code class="javascript language-javascript">const router = createRouter({
  history: createWebHistory(),
  routes,
});

export default router;
</code></pre>
<p>That’s all we need for now. You might be wondering where the other pages are. We’ll add them later as we go along. For now, let’s work on the default page first.</p>
<h3 id="creatingapage">Creating a page</h3>
<p>Creating a page doesn’t really need any special code. So if you know how to create a custom component in Vue, you should be able to create a page for Vue Router to use.</p>
<p>Create a <code>views/PokemonList.vue</code> file and add the code below. In this file, we’re using a custom <code>List</code> component to render the Pokemon list. The only thing we really need to do is to supply the data for the <code>List</code> component to use. We make a request to PokeAPI once the component is mounted. We don’t want the list to get too big, so we’re limiting the results to the original 151 Pokemon. Once we get the results back, we simply assign it to the component’s <code>items</code> data. This will in turn update the <code>List</code> component:</p>
<pre><code class="markup language-markup">&lt;template&gt;
  &lt;List :items="items" /&gt;
&lt;/template&gt;

&lt;script&gt;
import axios from "axios";
import List from "../components/List.vue";

export default {
  name: "PokemonList",
  data() {
    return {
      items: null,
    };
  },
  mounted() {
    axios.get(`https://pokeapi.co/api/v2/pokemon?limit=151`).then((res) =&gt; {
      if (res.data &amp;&amp; res.data.results) {
        this.items = res.data.results;
      }
    });
  },
  components: {
    List,
  },
};
&lt;/script&gt;
</code></pre>
<p>Here’s the code for the <code>List</code> component. Components are stored in the <code>components</code> directory, so create a <code>components/List.vue</code> file and add the following:</p>
<pre><code class="markup language-markup">&lt;template&gt;
  &lt;div v-if="items"&gt;
    &lt;router-link
      :to="{ name: 'Pokemon', params: { name: row.name } }"
      class="link"
      v-for="row in items"
      :key="row.name"
    &gt;
      &lt;div class="list-item"&gt;
        {{ row.name }}
      &lt;/div&gt;
    &lt;/router-link&gt;
  &lt;/div&gt;
&lt;/template&gt;

&lt;script&gt;
export default {
  name: "List",
  props: {
    items: {
      type: Array,
    },
  },
};
&lt;/script&gt;

&lt;style lang="scss" scoped&gt;
@import "../styles/list.scss";
&lt;/style&gt;
</code></pre>
<p>You can check out the code for the <code>styles/list.scss</code> file in the <a href="https://github.com/sitepoint-editors/pokedex-vue-router/blob/master/src/styles/list.scss">GitHub repo</a>.</p>
<p>At this point, you can now view the changes in the browser. Except you get the following error instead:</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636867032vue-error.png" alt="Vue error" /></p>
<p>This is because Vue is trying to generate the link to the Pokemon page but there isn&#8217;t one yet. The Vue CLI is smart enough to warn you of that. You can temporarily solve this issue by using a <code>&lt;div&gt;</code> instead for the template of <code>components/List.vue</code> file:</p>
<pre><code class="markup language-markup">&lt;template&gt;
  &lt;div v-if="items"&gt;
    &lt;div v-for="row in items" :key="row.name"&gt;{{ row.name }}&lt;/div&gt;
  &lt;/div&gt;
&lt;/template&gt;
</code></pre>
<p>With that, you should be able to see the list of Pokemon. Remember to change this back later once we add the Pokemon page.</p>
<h3 id="declarativenavigation">Declarative Navigation</h3>
<p>With Vue Router, you can navigate in two ways: declaratively, and programmatically. Declarative navigation is pretty much the same as what we do with the anchor tag in HTML. You just declare where you want the link to navigate to. On the other hand, programmatic navigation is done by explicitly calling Vue Router to navigate to a specific page when a user action is performed (such as a button button being clicked).</p>
<p>Let’s quickly break down how this works. To navigate, you need to use the <code>router-link</code> component. The only property this requires is <code>:to</code>. This is an object containing the <code>name</code> of the page you want to navigate to, and an optional <code>params</code> object for specifying the parameters you want to pass to the page. In this case, we’re passing in the name of the Pokemon:</p>
<pre><code class="markup language-markup">&lt;router-link
  :to="{ name: 'Pokemon', params: { name: row.name } }"
  class="link"
  v-for="row in items"
  :key="row.name"
&gt;
  &lt;div class="list-item"&gt;
    {{ row.name }}
  &lt;/div&gt;
&lt;/router-link&gt;
</code></pre>
<p>To visualize how this works, you need to know the pattern used by the <code>Pokemon</code> screen. Here’s what it looks like: <code>/pokemon/:name</code>. <code>:name</code> represents the param <code>name</code> that you passed in. For example, if the user wanted to view Pikachu, the URL would look like <code>http://localhost:8000/pokemon/pikachu</code>. We’ll get back to this in more detail shortly.</p>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/a-beginners-guide-to-vue-router/?utm_source=rss">A Beginner’s Guide to Vue Router</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/a-beginners-guide-to-vue-router/?utm_source=rss</link><guid isPermaLink="false">/?p=247502</guid><category><![CDATA[JavaScript]]></category><dc:creator><![CDATA[Wern Ancheta]]></dc:creator><pubDate>Mon, 06 Dec 2021 15:00:26 GMT</pubDate><metaDesc>Learn the basics of using Vue Router, such as router setup, passing custom parameters, page navigation, and implementing a 404 page.</metaDesc></item><item><title><![CDATA[Stay Private and Declutter Your Inbox Using Email Aliases]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/email-aliases-stay-private-declutter-inbox/?utm_source=rss"
              title="Stay Private and Declutter Your Inbox Using Email Aliases"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2021/12/1638757552email-aliases.jpg"
        alt="Stay Private and Declutter your Inbox Using Email Aliases"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/12/1638757552email-aliases-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/12/1638757552email-aliases-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/12/1638757552email-aliases-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/12/1638757552email-aliases.jpg 1200w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong>In this article, you’ll learn how to create an email alias and how to utilize it in the best way possible to secure your mailbox, protect your privacy and declutter your real email inbox.</strong></p>
<h2 id="whatisanemailalias">What Is an Email Alias?</h2>
<p>An email alias is a unique email address you’ve created that functions like a nickname, or an on-the-fly email address that you can use for specific tasks. The underlying technology is quite simple, but grants you way more power than you may be thinking right now.</p>
<p>Email aliases can be platform-specific or platform-agnostic.</p>
<p>Platform-specific aliases are connected to a specific email client, such as Gmail, Outlook, Yahoo or your business email address (for example, on Rackspace or Godaddy). These aliases are deeply integrated in the ecosystem of the provider, and can&#8217;t be used outside of it.</p>
<p>Platform-agnostic aliases allow you to connect multiple mailboxes, even from different email providers, and create aliases for all of them. It&#8217;s a better, more streamlined approach for your aliases.</p>
<h2 id="whyyoushoulduseanemailalias">Why You Should Use an Email Alias</h2>
<p>There are four main use cases for email aliases, so let&#8217;s explore them now.</p>
<h3 id="securingyourprimaryinbox">Securing your primary inbox</h3>
<p>An Email Alias secures your primary inbox. No one will ever know your real email address. Email aliases mask your email address, protecting your digital identity.</p>
<p>Aliases have little to no connection in terms of meaning, wording or redirections to your <em>real mailbox</em>. For example, your real email address could be <code>&lt;me@gmail.com&gt;</code> and one of the aliases for it could be <code>&lt;imarockstar@youbet.com&gt;</code> — which has zero connection to the source address.</p>
<h3 id="controllingyouridentity">Controlling your identity</h3>
<p>Email aliases give you control of your identity online. They can be created, enabled and disabled in a single click.</p>
<p>If you&#8217;re like me, you probably created your primary email address when you were around 11, perhaps in middle school. There&#8217;s no way that address is still relevant to your use case and interests as an adult.</p>
<p>However, <em>you can&#8217;t go back</em>. You can&#8217;t delete it, since all your friends and work colleagues use it for serious reasons, and you can&#8217;t replace it everywhere online. You&#8217;re stuck.</p>
<p><em>Email aliases can be created, renamed, redirected, deactivated and deleted in a single click of your mouse</em>. No complex setup, no hurdles.</p>
<h3 id="sendingemails">Sending emails</h3>
<p>An alias can be used to send emails, making it perfect for businesses that want to save a bit of money on their business addresses.</p>
<p>Yes, you could pay for a Google Workplace account for each of your teammates … or you <em>could use free Gmail accounts and set up your professional online identity with aliases!</em></p>
<p>Yep, you read it right. You can connect a domain to a platform-agnostic email alias generator and create aliases with your professional domain that redirect messages to free mailboxes on Gmail, Outlook, Zoho and ProtonMail.</p>
<p>For example, if your domain is <code>youbet.com</code>, and you connect it to an alias generator service, you could create the aliases <code>&lt;info@youbet.com&gt;</code>, <code>&lt;support@youbet.com&gt;</code>, and <code>&lt;talent@youbet.com&gt;</code> — all on the same domain — and redirect messages to your real Gmail inbox <code>&lt;me@gmail.com&gt;</code>.</p>
<p>Your clients will never know the source and you&#8217;ll appear as <strong>professional</strong> as you can be using aliases!</p>
<h3 id="itsfreeorveryaffordable">It&#8217;s free or very affordable!</h3>
<p>Come on, we wouldn&#8217;t be talking about it if it wasn&#8217;t. That&#8217;s what&#8217;s innovative about it. 🔥</p>
<p>You can have your aliases for free or a very, very affordable fee — certainly much (I mean a <em>loooooot</em>) lower than professional email hosting for sure!</p>
<h2 id="howtocreateanemailaliasingmail">How to Create an Email Alias in Gmail</h2>
<p>Chances are you have a Gmail account. If you simply need an alias and you&#8217;re not interested in using it for business needs, you can create a <em>free one from your Gmail Client.</em></p>
<p>Here&#8217;s how to do it:</p>
<ol>
<li>
<p><a rel="nofollow" href="https://mail.google.com/mail/u/0/#inbox">Log into Gmail</a> and select the <strong>settings</strong> icon in the right corner. </p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636959894image-1.png" alt="Gmail settings" /></p>
</li>
<li>
<p>Click <strong>See All Settings</strong>. </p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636959898image-2.png" alt="See All Settings" /></p>
</li>
<li>
<p>In the top menu bar, select <strong>Accounts and Import</strong>. </p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636959900image-3.png" alt="Accounts and Import" /></p>
</li>
<li>
<p>Under <strong>Send Email As</strong> select <strong>Add Another Email Address</strong>. </p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636959903image-4.png" alt="Add another email address to your primary email account" /></p>
</li>
<li>
<p>Add a new email address and make sure <strong>Treat as Alias</strong> is selected. </p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636959906image-5.png" alt="Treat as Alias" /></p>
</li>
<li>
<p>Once that&#8217;s done, when you send a message, choose which address to send from. <em>Recipients see that the message came from whichever address you chose.</em></p>
</li>
</ol>
<p>That&#8217;s it!</p>
<p>As you can see, this is <em>not a very useful alias</em>. You still need two email addresses, and all you&#8217;re doing is connecting them to the same email inbox and potentially hiding your real email address from the receiver.</p>
<p>However, you&#8217;re not optimizing your time or money, as you still need two accounts in two separate providers.</p>
<h2 id="howtocreateaplatformagnosticalias">How to Create a Platform-agnostic Alias</h2>
<p>If you want a fully platform-agnostic alias, one of the solutions available is <strong>SimpleLogin</strong>. (Disclaimer: I&#8217;m personally associated with SimpleLogin.)</p>
<p>To create a SimpleLogin account, head over to <a rel="nofollow" href="https://simplelogin.io">https://simplelogin.io</a> and register for free.</p>
<ol>
<li>
<p>Head over to <a rel="nofollow" href="https://simplelogin.io">https://simplelogin.io</a> and register for free. Click on <strong>Sign Up</strong> at the top-right corner.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636959908image-6.png" alt="Sign up for SimpleLogin" /></p>
</li>
<li>
<p>Input your email address and a password for your SimpleLogin account.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636959910image-7.png" alt="Create SimpleLogin account with an existing email address" /></p>
</li>
<li>
<p>SimpleLogin will send a validation email to the address inserted.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636959912image-8.png" alt="SimpleLogin verification email" /></p>
</li>
<li>
<p>Click on <strong>Verify Email</strong> in the email you just received.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636959915image-9.png" alt="Click on Verify Email" /></p>
</li>
<li>
<p>You&#8217;ll be redirected inside your SimpleLogin&#8217;s Dashboard! Make sure to follow the guided tutorial, as it provides important information and only takes a couple of minutes. 🎯 </p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636959917image-10.png" alt="SimpleLogin dashboard" /></p>
</li>
<li>
<p>Your <em>first alias</em> will already be in the dashboard. That&#8217;s to receive email newsletters from SimpleLogin. If you wish to stop receiving it — you guessed it — just click on the toggle and the alias will be deactivated.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636959920image-11.png" alt="Create your first alias email address" /></p>
</li>
<li>
<p>Now things get fun! Click on <strong>New Custom Alias</strong>.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636959922image-12.png" alt="Create new custom alias" /></p>
</li>
<li>
<p>Choose your preferred alias name and a domain name from the list of publicly available, <strong>free domains</strong> SimpleLogin provides for all accounts.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636959925image-13.png" alt="Choose an alias name" /></p>
</li>
<li>
<p>Choose the real mailbox(es) that will receive emails sent to this alias. <em>(You can choose more than one if you connect multiple email addresses!)</em></p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636959928image-14.png" alt="Choose mailbox" /></p>
</li>
<li>
<p>That&#8217;s it; your platform-agnostic alias is ready. It was painless, wasn&#8217;t it? 😊</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636959930image-15.png" alt="New email alias is ready" /></p>
</li>
</ol>
<p>Before we move on, it&#8217;s a good idea to test if the alias is working as intended. We just need to send an email to the alias we just generated. Let&#8217;s do that from Gmail.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636959932image-16.png" alt="Sending a test email from a Google email account" /></p>
<p>That&#8217;s our freshly created alias! Let&#8217;s send the email.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636959935image-17.png" alt="Send mail to the alias" /></p>
<p>If everything worked as intended, we should now receive the email to the email alias associated with your <code>alias.82jia@slmail.me</code>, hence <code>giorgiositepoint@protonmail.com</code>. Let&#8217;s check!</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636959937image-18.png" alt="Receiving a test email at the same inbox" /></p>
<p>Here we go: there&#8217;s the email sent to the alias. Beautiful, isn&#8217;t it? Almost feels like magic.</p>
<p>Just to confirm our identity is indeed protected, let&#8217;s respond to the email from our inbox.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636959940image-19.png" alt="Responding to a test email" /></p>
<p>If everything worked as intended, we should now receive the response in our Gmail inbox with the &#8220;From Address&#8221; showing our alias, <em>not</em> our real Proton inbox.</p>
<p>Time for the truth…</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636959942image-20.png" alt="Success! The from address is not your personal email address" /></p>
<p>Wonderful!</p>
<p>Just to recap, we:</p>
<ul>
<li>created a platform-agnostic alias that we can connect to multiple mailboxes</li>
<li>sent an email to the alias we just created</li>
<li>received the message in the connected mailbox</li>
<li>replied to that message</li>
<li>received the reply from our alias, not the real mailbox</li>
</ul>
<p><em>All of this for free.</em></p>
<p>If you&#8217;re more of a visual learner, here&#8217;s a <a rel="nofollow" href="https://www.youtube.com/watch?v=KxK5Mq8LfAg">video tutorial explaining the basics of the tool</a>.</p>
<h2 id="toolsforcreatingemailaliases">Tools for Creating Email Aliases</h2>
<p>SimpleLogin isn’t the only tool for creating email aliases. There are several others that allow you to create platform-agnostic, beautiful and simple to use aliases.</p>
<p>Here are a few:</p>
<ul>
<li><a rel="nofollow" href="https://relay.firefox.com/">Firefox Relay</a></li>
<li><a rel="nofollow" href="https://anonaddy.com/">AnonAddy</a></li>
<li><a rel="nofollow" href="https://www.33mail.com/">33Mail</a></li>
<li><a rel="nofollow" href="https://spreadprivacy.com/introducing-email-protection-beta/">DuckDuckGo</a></li>
</ul>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/email-aliases-stay-private-declutter-inbox/?utm_source=rss">Stay Private and Declutter Your Inbox Using Email Aliases</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/email-aliases-stay-private-declutter-inbox/?utm_source=rss</link><guid isPermaLink="false">/?p=247254</guid><category><![CDATA[Web]]></category><dc:creator><![CDATA[Giorgio Barilla]]></dc:creator><pubDate>Sun, 05 Dec 2021 15:00:31 GMT</pubDate><metaDesc>Is your inbox full of junk? Learn how to manage your emails with email aliases, which let you easily get rid of emails you no longer want.</metaDesc></item><item><title><![CDATA[How to Quickly Start a Django Project and a Django App]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/start-django-project-app/?utm_source=rss"
              title="How to Quickly Start a Django Project and a Django App"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2021/12/1638432445django-project.jpg"
        alt="How to Quickly Start a Django Project and a Django App"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/12/1638432445django-project-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/12/1638432445django-project-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/12/1638432445django-project-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/12/1638432445django-project.jpg 1200w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong>In this tutorial, we&#8217;ll learn the difference between a Django project and a Django app, and how to start a new Django project.</strong></p>
<p>Django is the Python web framework of choice for building web applications. It&#8217;s a mature, full-featured, flexible and open-source framework that lets you build anything from a simple CRUD application to a more complex, multi-app project like a <a href="https://www.sitepoint.com/django-photo-sharing-app/">photo-sharing app</a>.</p>
<h2 id="requirements">Requirements</h2>
<p>You don&#8217;t need previous knowledge to set up a Django project. But Django is a Python framework, so to use it you should have <a href="https://www.sitepoint.com/premium/courses/learn-programming-fundamentals-with-python-2916">strong foundations using Python</a>.</p>
<p>Before starting, make sure you have a terminal or command prompt with Python 3.6 or later installed.</p>
<p>Most macOS and Linux systems have Python 3 installed by default, but if you&#8217;re using Windows, you&#8217;ll need to download and install <a rel="nofollow" href="https://www.python.org/downloads/">Python</a>. You can follow this guide from the <a rel="nofollow" href="https://docs.python.org/3/using/windows.html">official Python website</a>.</p>
<p>You can open a terminal by opening the applications finder of your operating system and searching for <em>Terminal</em>, or on Windows, <em>cmd</em>.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1635828763Open-terminal.png" alt="Open a terminal with application finder" /></p>
<p>Once you&#8217;ve set up a terminal, it&#8217;s time to confirm your Python version. To do this, type the following command:</p>
<pre><code class="bash language-bash">python --version

Python 3.9.7 # My result
</code></pre>
<p>If you didn’t get a result of the form Python 3.x, don&#8217;t panic. There are two options:</p>
<ul>
<li>
<p>if <code>python --version</code> returned a Python 2.x version, you’ll need to use <code>python3</code> along with this tutorial. This usually happens with some macOS systems, as well as with some <a href="https://www.sitepoint.com/anonymous-linux-distros/">Linux distros</a> like Ubuntu. Try running the following command:</p>
<pre><code class="bash language-bash">python3 --version

Python 3.9.7 # Again, my result
</code></pre>
</li>
<li>
<p>if you got an <code>Unknown command</code> error, tried to run <code>python3</code>, and still got another error, you&#8217;ll need to download and install Python from the official website.</p>
</li>
</ul>
<p>Now that you know what Python command to run in your terminal, let&#8217;s dive into Django projects.</p>
<h2 id="whatsadjangoproject">What&#8217;s a Django Project?</h2>
<p>A Django project is a Python package needed to make a web application work. It contains everything you need to build the backend (server-side development, what the users don&#8217;t see) of your site. The normal functionality of a Django project determines how you interact with the database, authentication, how data is retrieved, and so on.</p>
<p>You can also think of it as a collection of settings, and small Python modules named apps. We&#8217;ll talk about them later, but as a pre-concept, an app is another set of Python files that solve a specific task of your app.</p>
<p>Through this article, you&#8217;ll learn about the sophisticated structure of a Django project. But from the start I want you to know that a Django project can be narrowed down to a single file, something similar to a <a href="https://www.sitepoint.com/flask-masses/">Flask</a> project.</p>
<p>A quick demonstration of this is the <a rel="nofollow" href="https://github.com/rnevius/minimal-django">Minimal Django</a> project. This is a file with 23 lines of code that allows us to bring a Django &#8220;Hello, World!&#8221; project to life:</p>
<pre><code class="python language-python">import sys

from django.conf import settings
from django.urls import path
from django.core.management import execute_from_command_line
from django.http import HttpResponse

settings.configure(
    DEBUG=True,
    ROOT_URLCONF=sys.modules[__name__],
)


def index(request):
    return HttpResponse('&lt;h1&gt;A minimal Django response!&lt;/h1&gt;')


urlpatterns = [
    path(r'', index),
]

if __name__ == '__main__':
    execute_from_command_line(sys.argv)
</code></pre>
<p>Now, a Django project can go much further. A great example is Instagram, which has thousands of Django endpoints and still uses this framework for crucial functionality.</p>
<h2 id="howtosetupadjangoproject">How to Set up a Django Project</h2>
<p>Don&#8217;t worry too much if some of the following commands seem complex. After you&#8217;ve created a couple of projects, you&#8217;ll know them like the back of your hand.</p>
<p>First of all, you need to know that Django is an external package. In other words, it doesn&#8217;t come built-in with Python, so you&#8217;ll need to install it with PIP.</p>
<p>PIP is a package manager for Python, a tool that allows you to install Python packages from the <a rel="nofollow" href="https://pypi.org/">Python Package Index</a> (PyPI).</p>
<p>Now, before installing the actual Python package, you&#8217;ll need to create a virtual environment. It&#8217;s a good practice to create a virtual environment for each Django project you build, so you can keep track of dependencies.</p>
<p>Maybe the code you have in a Django 2.6 project may not work with Django 3.0. A virtual environment lets you have specific requirements for each project you have.</p>
<p>You can create a <a href="https://www.sitepoint.com/virtual-environments-python-made-easy/">virtual environment</a> named <code>.venv</code> (or whatever name you want) with the following command:</p>
<pre><code class="bash language-bash">python -m venv .venv
</code></pre>
<p>Now, if you list the files in the current directory, you&#8217;ll see a new folder called <code>.venv</code>, which at the same time contains isolated Python binaries:</p>
<pre><code class="bash language-bash">$ ls -lah .venv/
Permissions Size User   Date Modified Name
drwxr-xr-x     - daniel 10 nov 23:13  .
drwxr-xr-x     - daniel 10 nov 23:13  ..
drwxr-xr-x     - daniel 10 nov 23:13  bin
drwxr-xr-x     - daniel 10 nov 23:13  include
drwxr-xr-x     - daniel 10 nov 23:13  lib
lrwxrwxrwx     3 daniel 10 nov 23:13  lib64 -&gt; lib
.rw-r--r--    69 daniel 10 nov 23:13  pyvenv.cfg
</code></pre>
<p>To active your virtual environment, you need to activate it with the following command:</p>
<pre><code class="bash language-bash">source .venv/bin/activate
</code></pre>
<p>This will only work on bash shells (available on macOS and Linux). If you&#8217;re using a different shell, you can take a look at the following activation <code>venv</code> table:</p>
<table>
<thead>
<tr>
<th>Platform</th>
<th>Shell</th>
<th>Command to activate virtual environment</th>
</tr>
</thead>
<tbody>
<tr>
<td>POSIX</td>
<td>bash/zsh</td>
<td>$ source .venv&gt;/bin/activate</td>
</tr>
<tr>
<td></td>
<td>fish</td>
<td>$ source .venv&gt;/bin/activate.fish</td>
</tr>
<tr>
<td></td>
<td>csh/tcsh</td>
<td>$ source .venv&gt;/bin/activate.csh</td>
</tr>
<tr>
<td></td>
<td>PowerShell Core</td>
<td>$ .venv/bin/Activate.ps1</td>
</tr>
<tr>
<td>Windows</td>
<td>cmd.exe</td>
<td>C:\&gt; .venv\Scripts\activate.bat</td>
</tr>
<tr>
<td></td>
<td>PowerShell</td>
<td>PS C:\&gt; .venv\Scripts\Activate.ps1</td>
</tr>
</tbody>
</table>
<p>A way to check that your shell is activated is by looking for changes in your prompt. In my case, what I saw is pictured below.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636604523Venv-terminal.jpg" alt="Virtual Environment Prompt" /></p>
<p>Now, install the Django package. You can either install the latest or a specific version of Django:</p>
<pre><code class="bash language-bash">pip install django # Latest version
pip install django==2.2 # Specific version
</code></pre>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/start-django-project-app/?utm_source=rss">How to Quickly Start a Django Project and a Django App</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/start-django-project-app/?utm_source=rss</link><guid isPermaLink="false">/?p=241817</guid><category><![CDATA[Programming]]></category><category><![CDATA[Web]]></category><dc:creator><![CDATA[Daniel Diaz]]></dc:creator><pubDate>Wed, 01 Dec 2021 16:00:13 GMT</pubDate><metaDesc>Learn the difference between Django projects and apps, and how to start a Django project, run a Django server, create a Django app, and more.</metaDesc></item><item><title><![CDATA[An Absolute Beginner’s Guide to Webflow]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/webflow-absolute-beginners-guide/?utm_source=rss"
              title="An Absolute Beginner’s Guide to Webflow"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2021/12/1638398712webflow-no-code-website.jpg"
        alt="An Absolute Beginner's Guide to Webflow"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/12/1638398712webflow-no-code-website-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/12/1638398712webflow-no-code-website-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/12/1638398712webflow-no-code-website-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/12/1638398712webflow-no-code-website.jpg 1200w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong>In this article, we&#8217;ll present a beginner&#8217;s guide to Webflow, a no-code web design tool for designers, exploring how you can start using it today.</strong></p>
<p>No-code tools help you design and build websites without knowing how to code. They&#8217;re becoming more and more popular as interest levels in these tools have steadily increased.</p>
<p>Webflow is one of the more popular <a rel="nofollow" href="https://webflow.com/">online no-code tools</a>. It helps you design and build websites without knowing languages like CSS or having to write custom JavaScript code, while still giving you the ability to create stunning websites.</p>
<h2 id="webdesignfornoncoders">Web Design for Non-coders</h2>
<p>Tools like Webflow are great for non-coders like the general public and for those in the creative field who want more control over their sites without spending tons of time learning coding languages first (for example, graphic designers who are wanting to get into web design).</p>
<p>Webflow seems to have positioned itself in a way that caters to the general public all the way up to experienced web designers and developers who already know how to code, but looking for solutions to help them be better and more efficient.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636583368webflow-home.png" alt="Webflow Home Page" /></p>
<p>Webflow does most (if not all) of the heavy lifting for you when it comes to developing your website. Designed with a user interface (UI) — called the Designer — that feels more like a design what-you-see-is-what-you-get app, it writes the code for you in the background as you start laying out your elements and customizing your styles. Webflow has free templates to help you get started (which is great for novice users and those who don’t feel their design skills are any better than the templates), but you can also start from scratch if you’re a more experienced user or know your way around front-end coding languages.</p>
<h2 id="webflowasavisualwebdesigntool">Webflow as a Visual Web Design Tool</h2>
<p>With Webflow, there’s likely two different types of users that would regularly use Webflow: those who don’t have the know-how to code their own site and need the assistance that Webflow and its visual editor provides, and those who can design and code their own websites and are looking to speed up/simplify the process.</p>
<p>For those who need assistance in developing their own website, Webflow helps you along the way with templates and tutorials to do most of the coding work for you. However, you’ll likely learn that you’ll want to start picking up some coding skills in order to truly customize things to your liking and to fully understand the breadth of features that Webflow offers.</p>
<p>For web designers/developers who are experienced at developing their own sites, Webflow can get out of your way and allow you to get straight to work inside their visual designer. However, with some of their features limited, you&#8217;ll likely run into things quickly that you can’t do that you wish you could, and likely will find yourself diving into the code at some point along the way.</p>
<h2 id="pricing">Pricing</h2>
<p>Webflow does come at a <a rel="nofollow" href="https://webflow.com/pricing">monthly price</a>, depending on how you want to use the platform. You can pay monthly per site, or monthly for an individual account with multiple projects. While not clear from the start, these two pricing plans cater to the two different types of users discussed above.</p>
<p>For those who own their site and want just one or two sites, the site plan is likely where you’ll want to be. For those who are web designers/developers who plan to use Webflow as a tool to develop sites to hand over to clients, the account plans are likely the better fit (especially if you’d like to download your site from Webflow and use it elsewhere, such as on your own server or with CMSs such as WordPress).</p>
<p>Either way, you get a free-forever plan that allows you experiment and work with Webflow to get your site where you want it to be before you decide to upgrade. (However, the free-forever plan limits what you can and can&#8217;t do. For example, you can&#8217;t connect your site to a custom domain.)</p>
<p>Webflow&#8217;s pricing is great for those who just need one or two sites. However, it could get quite expensive for someone who&#8217;d like to have several websites at once. Somewhat tied to the pricing is another drawback (perhaps more so a drawback for the more experienced users): being able to design then export your site to then use/modify for another platform (such as WordPress) isn’t the most ideal, and requires you to pay monthly for the ability as well, even if you opt to not launch/host your site on Webflow.</p>
<p>Overall, Webflow’s popularity means that people are reaping the benefits from the no-code tool, and it continues to draw the attention of not only the general public, but those who are fairly novice with web development all the way up to those who are experienced web designers and developers.</p>
<p>Since you’ve likely landed on this article because you too are interested in Webflow and how it can be beneficial for your situation, let’s dive in to how to get started with Webflow to get you familiar with the platform and how you might utilize it for your needs. We&#8217;ll then end with information about the best path to take should you continue on your Webflow journey.</p>
<h2 id="skilllevel">Skill Level</h2>
<p>Even though Webflow is billed as a “no-code” tool, it should be stated that it doesn’t mean “no-skill”. Webflow has a bit of a learning curve to understand, even for the seasoned web developer. Those who don’t have much of a background in web design/development may find this learning curve more steep than they were hoping for when trying out a tool billed as “no-code”. Having some basic understanding of websites (such as layouts and the box model) and how to style things (such as margins, paddings, floats, positions, etc.) is beneficial and reduces the learning curve, but isn&#8217;t essential for using Webflow.</p>
<p>While I would say that Webflow is easy to pick up and learn (which is a biased opinion, as I’ve coded dozens of websites in my career), be prepared for some time learning the ropes and understanding not only how Webflow works, but web design and development principles as well. Those who have experience building websites will likely fare better through the initial learning curve than those new to building websites in no-code tools.</p>
<p>The great thing, however, is that Webflow understands this and has spent significant time creating what they call “Webflow University” to help you learn their tools and develop your web design and development skills on their platform. It’s also a great resource beyond what this getting started guide will cover, should you want to take your Webflow experiment/skill set to the next level.</p>
<h2 id="signupandonboarding">Sign Up and Onboarding</h2>
<p>Signing up for an account with Webflow is as easy as it is on most other sites you’ve created accounts with. Clicking “Get Started” at the top of the home page will walk you through the signup and onboarding process. The onboarding process will help you set your account up correctly by asking questions to get to know more about you.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636583628webflow-signup.png" alt="Webflow Signup Screen" /></p>
<p>Once you’ve gone through the onboarding questionnaire, you’ll be dropped into the Webflow visual editor, called the Designer, to start a tutorial. Regardless of how experienced you are with web development, I highly recommend you spend the time to go through the tutorial, as it will help reduce the learning curve as you move on to your first project.</p>
<p>Some of the most important parts of the tutorial that Webflow walks you through are the Elements Panel, classes, how to make your site responsive with breakpoints, and ending with information about how to push your project live. It’s during the tutorial where you’re likely to get a good understanding of the skills needed, especially as it explains different web principles to you (like cascading style sheets).</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636583709webflow-tutorial.png" alt="Webflow Tutorial During Onboarding" /></p>
<p>Once you’ve completed the quick welcome tutorial, it’s time to start your first project (as prompted when you’ve completed the introductory topics). Clicking <strong>Create New Project</strong> puts you right into Webflow’s visual editor.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636583775webflow-createnewproject.png" alt="Webflow Create New Project" /></p>
<p>From here, it’s a “choose your own adventure” type of setup on what path you want to move forward with. For the sake of learning and understanding how Webflow works, I highly recommend picking a template to edit instead of jumping straight into a blank site project.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636583836webflow-templates.png" alt="Webflow Templates" /></p>
<p>For this how-to tutorial, we’re going to edit an existing Webflow template to learn how the Designer works and the major features of the main interface you’ll be using inside Webflow.</p>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/webflow-absolute-beginners-guide/?utm_source=rss">An Absolute Beginner’s Guide to Webflow</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/webflow-absolute-beginners-guide/?utm_source=rss</link><guid isPermaLink="false">/?p=238156</guid><category><![CDATA[Web]]></category><dc:creator><![CDATA[Amber Leigh Turner]]></dc:creator><pubDate>Tue, 30 Nov 2021 15:00:12 GMT</pubDate><metaDesc>No-code tools for web design offer a lot of value. Learn how to get started with Webflow, whether you're new to web design or a seasoned pro.</metaDesc></item><item><title><![CDATA[How to Build Your Backend with Hasura and PostgreSQL]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/hasura-postgresql-build-backend/?utm_source=rss"
              title="How to Build Your Backend with Hasura and PostgreSQL"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1638252308hasura-postgresql.jpg"
        alt="How to Build Your Backend with Hasura and PostgreSQL"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1638252308hasura-postgresql-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1638252308hasura-postgresql-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1638252308hasura-postgresql-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1638252308hasura-postgresql.jpg 1200w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong>Backend development often requires writing many lines of code that handle CRUD, authorization and business logic. All this code needs to be tested, debugged and maintained during the entire lifetime of the project. This takes a lot of time that developers can be using to develop new features. In this article, you&#8217;ll learn how Hasura and PostgreSQL can help you speed up app development and launch backends quickly with minimal effort.</strong></p>
<p><a rel="nofollow" href="https://hasura.io/">Hasura</a> is an open-source GraphQL engine that generates GraphQL and REST API endpoints using your database schema. It supports data modeling, real-time querying, event programming, role-based authorization and actions for running custom business logic over GraphQL.</p>
<p><a rel="nofollow" href="https://www.postgresql.org/">PostgreSQL</a> is a popular and powerful open-source, object-oriented relational database that offers enterprise-class features on a similar level with Oracle Database and Microsoft SQL Server. PostgreSQL is used by large international companies such as Netflix, Instagram, Uber and Spotify, according to <a rel="nofollow" href="https://stackshare.io/postgresql">StackShare</a>.</p>
<p>In this article, we&#8217;ll go over the main features Hasura provides that makes it suitable for developing and launching scalable backends, for both web and mobile applications. We&#8217;ll also look at how you can leverage PostgreSQL&#8217;s features to perform various computation and analytical tasks using just SQL to deliver the right data to your frontend without writing custom code.</p>
<p>Do note that Hasura does support other databases as well, such as Microsoft SQL Server, Amazon Aurora and Google BigQuery. We&#8217;ll focus on PostgreSQL, since it&#8217;s free and accessible for the majority of businesses and organizations. Support for <a rel="nofollow" href="https://hasura.io/graphql/database/mysql/">MySQL</a> is coming soon, in case you&#8217;re interested.</p>
<p>If you&#8217;re new to GraphQL, please check out our <a href="https://www.sitepoint.com/how-to-build-a-web-app-with-graphql-and-react/">tutorial</a> to learn more. Let&#8217;s start with why PostgreSQL can be a perfect choice for your project.</p>
<h2 id="whypostgresql">Why PostgreSQL</h2>
<p>Relational databases have many distinct advantages over other types of databases, in that you can model your data using strict schemas and table relationships. The ability to perform JOINs and execute ACID transactions is a major requirement for many applications in most industries. These features are essential to promoting integrity and consistency of business data at any given time.</p>
<p>PostgreSQL also has additional advantages over other relational databases such as MySQL, in that:</p>
<ul>
<li>you can model data using <strong>table inheritance</strong></li>
<li>it has better <strong>concurrency control</strong> for multi-user environments (you can write massive amounts of data more efficiently)</li>
<li>it&#8217;s <strong>fault tolerant</strong> and is less prone to data corruption</li>
<li>it supports a number unique data types such as <strong>JSON</strong> and <strong>Spatial</strong>, which is useful for finance and research-related applications</li>
</ul>
<p>PostgreSQL isn&#8217;t just a data storage service. It&#8217;s also a server capable of running custom functions and triggers to perform various computation and analytical tasks. Running logic on PostgreSQL is more efficient, as it negates the need to write custom server code. You can define logic in PostgreSQL using:</p>
<ul>
<li><strong>Views</strong>, a stored query that can help simplify complex queries</li>
<li><strong>Functions &#038; Operators</strong>, such as date formatting, pattern matching, arithmetic operations</li>
<li><strong>Extensions</strong>, addons that extends PostgreSQL&#8217;s capabilities (such as <a rel="nofollow" href="https://postgis.net/">PostGIS</a>)</li>
<li><strong>Procedural Languages</strong>, programming languages for writing user-defined functions, stored procedures, triggers and extending the standard SQL (such as <a rel="nofollow" href="https://www.postgresql.org/docs/9.0/plpgsql-overview.html">PL/pgSQL</a>)</li>
</ul>
<p>When you implement logic in PostgreSQL, Hasura is able to expose them to frontend applications via GraphQL queries and mutations. Here&#8217;s a top-level view of a PostgreSQL server, as seen via the <a rel="nofollow" href="https://www.pgadmin.org/">pgAdmin</a> interface:</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/163653365901-pgAdmin-interface.png" alt="The pgAdmin interface" /></p>
<p>Learning to take advantage of PostgreSQL features can help you solve complex problems easily without writing server code. Here are a few examples of what you can do with PostgreSQL:</p>
<h3 id="example1">EXAMPLE 1</h3>
<p>You can retrieve a list of online users that are currently active using a <strong>view</strong>:</p>
<pre><code class="sql language-sql">CREATE OR REPLACE VIEW "public"."online_users" AS
 SELECT users.id,
    users.last_seen
   FROM users
  WHERE (users.last_seen &gt;= (now() - '00:00:30'::interval));
</code></pre>
<h3 id="example2">EXAMPLE 2</h3>
<p>Using a <strong>PostGIS function</strong>, you can list all stores that are located within a 1,000 meter radius. See this <a rel="nofollow" href="https://www.compose.com/articles/geofile-everything-in-the-radius-with-postgis/">geolocation tutorial</a> for a detailed explanation:</p>
<pre><code class="sql language-sql">SELECT id, name, address, geom
FROM Seattle_Starbucks
WHERE ST_DWithin(geom, ST_MakePoint(-122.325959,47.625138)::geography, 1000);
</code></pre>
<p>In the next section, we&#8217;ll focus on Hasura&#8217;s features.</p>
<h2 id="whatishasura">What is Hasura?</h2>
<p>Hasura is an open-source, real-time GraphQL engine that generates GraphQL and REST API endpoints for your database. It comes with a web console that allows you to:</p>
<ul>
<li>model your database schema</li>
<li>view, insert, update and delete data</li>
<li>implement role-based access control policies</li>
<li>run GraphQL queries and mutations</li>
<li>create REST endpoints</li>
<li>run SQL code</li>
<li>define actions and triggers</li>
</ul>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/163653366302-hasura-api-dashboard.png" alt="Hasura API dashboard" /></p>
<p>Hasura doesn&#8217;t support user authentication, so you&#8217;ll need to integrate Hasura and your frontend application with a provider such as:</p>
<ul>
<li><a rel="nofollow" href="https://docs.clerk.dev/integrations/hasura">Clerk</a></li>
<li><a rel="nofollow" href="https://hasura.io/docs/latest/graphql/core/guides/integrations/auth0-jwt.html">Auth0</a></li>
<li><a rel="nofollow" href="https://hasura.io/blog/add-5-login-methods-to-your-hasura-app-in-5-minutes-with-onegraphs-authguardian/">AuthGuardian</a></li>
<li><a rel="nofollow" href="https://hasura.io/blog/authentication-and-authorization-using-hasura-and-firebase/">Firebase</a></li>
<li><a rel="nofollow" href="https://hasura.io/blog/how-to-build-a-simple-secure-social-media-site-with-magic-and-hasura/">Magic</a></li>
</ul>
<p>There&#8217;s also no file storage service, you&#8217;ll need to integrate your app with a <a rel="nofollow" href="https://hasura.io/blog/building-file-upload-downloads-for-your-hasura-app/">third-party storage provider</a>. If you’d prefer a more out-of-the-box integrated experience with Hasura, you can check out <strong>NHost</strong>, which we&#8217;ll discuss later in the deployment section.</p>
<p>In the next section, we&#8217;ll look at how we can run Hasura locally and in the cloud.</p>
<h2 id="launchinghasura">Launching Hasura</h2>
<p>There are a couple of ways you can quickly launch and run a Hasura instance:</p>
<h3 id="1docker">1. Docker</h3>
<p>Using Docker to run Hasura in your local machine is the recommended way for setting up a development environment. With this setup, there&#8217;s no rate limiting for API requests and there&#8217;s no internet connection throttling your experience when you interact with Hasura&#8217;s web console. Any work you do locally can easily be migrated to staging and production environments. We&#8217;ll discuss how this is done later in the &#8220;Migrations and Environments&#8221; section.</p>
<p>Assuming you already have <a rel="nofollow" href="https://docs.docker.com/get-docker/">Docker</a> and <a rel="nofollow" href="https://docs.docker.com/compose/install/">Docker Compose</a> already installed on your machine, you can follow the instructions provided by this <a href="https://hasura.io/docs/latest/graphql/core/getting-started/docker-simple.html">guide</a> to run Hasura on your machine:</p>
<pre><code class="bash language-bash"># create new directory
mkdir my-hasura
cd my-hasura

# download docker-compose.yml
curl https://raw.githubusercontent.com/hasura/graphql-engine/stable/install-manifests/docker-compose/docker-compose.yaml -o docker-compose.yml

# start hasura and postgresql container instances
docker-compose up -d
</code></pre>
<p>You can confirm your Hasura and PostgreSQL container instances are running by executing the command <code>docker ps</code>. You should be able to access your local Hasura instance via your browser at <code>http://localhost:8080/console</code>. To complete the setup, you&#8217;ll need to connect to the PostgreSQL database, which is running as a container alongside Hasura&#8217;s.</p>
<p>With the database connected, you&#8217;ll be able to use the web console to create tables, define relationships and perform CRUD operations on your data. Do note that your data is public when using the default Docker setup. You can secure it by simply uncommenting the line that starts with <code>HASURA_GRAPHQL_ADMIN_SECRET</code> in your <code>docker-compose.yml</code> file and restarting your Hasura container.</p>
<h3 id="2cloud">2. Cloud</h3>
<p>A much easier way of getting started is via <a rel="nofollow" href="https://hasura.io/cloud/">Hasura Cloud</a>. This is a re-engineered version of the open-source Hasura designed for scalability, availability, security<br />
and global distribution.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/163653366503-hasura-cloud-dashboard.png" alt="The Hasura Cloud dashboard" /></p>
<p>Hasura Cloud comes with several new features not available in the open-source version, which include:</p>
<ul>
<li><a rel="nofollow" href="https://hasura.io/graphql/monitoring/">Monitoring dashboard</a> for errors, connections, subscriptions, slow queries and other operations</li>
<li><a rel="nofollow" href="https://hasura.io/graphql/caching/">GraphQL caching</a> for improved server and client data fetching performance</li>
<li><a rel="nofollow" href="https://hasura.io/docs/latest/graphql/cloud/security/api-limits.html">Rate limiting</a> for preventing malicious users and DDoS attacks from compromising your API</li>
<li><a rel="nofollow" href="https://hasura.io/docs/latest/graphql/cloud/regression-tests.html">Regression testing</a> for running test suites such as checking changes in your dev instance against your production instance</li>
</ul>
<p>To get started with Hasura Cloud, you&#8217;ll need to <a rel="nofollow" href="https://cloud.hasura.io/signup/">sign up</a> for a free account. Do note the free account has a rate limit of 60 requests per minute. After creating an account, you&#8217;ll need to:</p>
<ul>
<li>Create a project (a Hasura instance)</li>
<li>Connect to a PostgreSQL database</li>
</ul>
<p>For convenience, Hasura Cloud provides a one-click installation and connection to a free Heroku Cloud database instance. You can also connect to any other PostgreSQL database that&#8217;s accessible over the Internet. There are many PostgreSQL providers you can use. These include cloud services such as:</p>
<ul>
<li>AWS</li>
<li>Azure</li>
<li>Digital Ocean</li>
<li>TimescaleDB Cloud</li>
<li>YugabyteDB</li>
</ul>
<p>You can follow this <a rel="nofollow" href="https://hasura.io/docs/latest/graphql/cloud/getting-started/index.html">guide</a> if you need more clarity with the steps above. By default, Hasura Cloud restricts data access from the public using the admin secret key. We&#8217;ll discuss more about this in the upcoming sections.</p>
<h2 id="hasurafeatures">Hasura Features</h2>
<p>In this section, I&#8217;ll give you a high-level overview of the features that Hasura offers for building a custom backend without writing code.</p>
<h3 id="datamanager">Data Manager</h3>
<p>Hasura comes with a visual designer for modeling your data layer. This allows you to:</p>
<ul>
<li>create tables</li>
<li>define relationships (one-to-one, one-to-many, many-to-many)</li>
<li>perform CRUD operations</li>
<li>create views</li>
<li>run any SQL statement</li>
<li>implement data validation using PostgreSQL&#8217;s DDL constraints</li>
<li>define triggers</li>
</ul>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/163653366904-hasura-create-table.png" alt="Hasura create table" /></p>
<p>When it comes to columns, Hasura supports a rich set of data types which include:</p>
<ul>
<li>integers, numerics and floats</li>
<li>serials and UUID</li>
<li>characters and text</li>
<li>date and time</li>
<li>Boolean</li>
<li>geometric — such as line, box, path, polygon and circle</li>
<li>JSON</li>
</ul>
<p>You can also add custom types using the <code>CREATE TYPE</code> SQL command. Next, we&#8217;ll look at how data is authorized in Hasura.</p>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/hasura-postgresql-build-backend/?utm_source=rss">How to Build Your Backend with Hasura and PostgreSQL</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/hasura-postgresql-build-backend/?utm_source=rss</link><guid isPermaLink="false">/?p=238030</guid><category><![CDATA[JavaScript]]></category><category><![CDATA[Web]]></category><dc:creator><![CDATA[Michael Wanyoike]]></dc:creator><pubDate>Mon, 29 Nov 2021 15:00:38 GMT</pubDate><metaDesc>Learn how Hasura and PostgreSQL can help you speed up app development and launch backends quickly with minimal effort.</metaDesc></item><item><title><![CDATA[Build a Link Previewer with Puppeteer and Serverless Functions]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/puppeteer-serverless-functions-link-previewer/?utm_source=rss"
              title="Build a Link Previewer with Puppeteer and Serverless Functions"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1638152303serverless-functions.jpg"
        alt="Build a Link Previewer with Puppeteer and Serverless Functions"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1638152303serverless-functions-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1638152303serverless-functions-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1638152303serverless-functions-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1638152303serverless-functions.jpg 1200w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong>In this tutorial, we’re going to see how we can deploy serverless functions alongside our front-end application and create an API that generates images and grabs metadata from links.</strong></p>
<p>With serverless functions, developers can create and implement modern features and functionalities in their applications without going through the pain of setting up and managing back-end servers. The functions are hosted and deployed by cloud computing companies. </p>
<p><a href="https://www.netlify.com/products/functions/">Netlify functions</a> make creating and deploying serverless functions easy for applications hosted on <a href="https://www.netlify.com/">Netlify</a>. </p>
<h2 id="prerequisites">Prerequisites</h2>
<p>To follow along with this tutorial, you&#8217;ll need to be familiar with JavaScript, <a href="https://vuejs.org/">Vue.js</a>, Git, GitHub, and <a href="https://www.netlify.com/">Netlify</a>. You should also have a text editor — such as <a href="https://code.visualstudio.com/">VS Code</a>) with <a href="https://marketplace.visualstudio.com/items?itemName=octref.vetur">Vetur</a> installed (for IntelliSense) — and a recent version of Node installed on your machine. You can install Node <a href="https://nodejs.org/en/download/">here</a>. You can check your version of Node by running the command <code>node -v</code>in your terminal.</p>
<p>You should also have an account on Netlify. You can <a href="https://app.netlify.com/signup/email">create one</a> if you haven&#8217;t already.</p>
<h2 id="whatwerebuilding">What We&#8217;re Building</h2>
<p>To show how we can easily set up serverless functions with our front-end application, we&#8217;ll be building an app with a custom link previewer component. </p>
<p>This component sends a request with a URL to our serverless function. The function then uses Puppeteer to get metadata from the target site using the URL and to generate a screenshot of the site. </p>
<p>The function sends the metadata and screenshots back to the component on our front-end to display it as a link preview in the application.</p>
<p><em>Here&#8217;s the link to the <a href="https://lnkpreviewr.netlify.app">example project deployed on Netlify</a>. And here&#8217;s the <a href="https://github.com/miracleonyenma/link-previewer">GitHub Repo</a> to follow along.</em></p>
<h2 id="createandsetupthevueapplication">Create and Set Up the Vue Application</h2>
<p>We&#8217;re going to create a Vue 3 application using <a href="https://cli.vuejs.org/">Vue CLI</a>. We&#8217;ll also install and set up <a href="https://TailwindCSS.com/">Tailwind CSS</a>, a utility-first CSS framework that provides classes we can use for our app without having to write a lot of custom CSS.</p>
<h3 id="installandsetupvue">Install and set up Vue</h3>
<p>To quickly scaffold a Vue application, we&#8217;ll use Vue CLI. To install Vue CLI, run:</p>
<pre><code class="bash language-bash">npm install -g @vue/cli
</code></pre>
<p>Once the CLI has been installed, we can <a href="https://cli.vuejs.org/guide/creating-a-project.html#vue-create">create a project</a> by running:</p>
<pre><code class="bash language-bash">vue create link-previewer
</code></pre>
<p>This will prompt us to pick a preset for our installation. We&#8217;ll select &#8220;Manually select features&#8221; so that we can pick the features we need. Here are the options I selected:</p>
<pre><code class="bash language-bash">Please pick a preset: Manually select features
? Check the features needed for your project: Choose Vue version, Babel, PWA, Router, Vuex, Linter
? Choose a version of Vue.js that you want to start the project with: 3.x
? Use history mode for router? (Requires proper server setup for index fallback in production) Yes
? Pick a linter / formatter config: Basic
? Pick additional lint features: Lint on save
? Where do you prefer placing config for Babel, ESLint, etc.? In dedicated config files
</code></pre>
<p>After selecting these options, we&#8217;ll be asked if we want to save the options as a preset for later use. Select <code>Y</code> (yes) or <code>N</code> (no) and continue with the installation.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636517571Linkpreviewer-vue-presets.png" alt="Linkpreviewer vue presets" /></p>
<p>Run <code>cd link-previewer</code> to enter the newly created project.</p>
<h3 id="installandsetuptailwindcss">Install and set up Tailwind CSS</h3>
<p>To install Tailwind, we&#8217;ll use the <a href="https://TailwindCSS.com/docs/installation#post-css-7-compatibility-build">PostCSS 7 compatibility build</a>, since Tailwind depends on PostCSS 8 — which at the time of writing is not yet supported by Vue 3. Uninstall any previous Tailwind installation and re-install the compatibility build: </p>
<pre><code class="bash language-bash">npm uninstall tailwindcss postcss autoprefixer
npm install -D tailwindcss@npm:@tailwindcss/postcss7-compat postcss@^7 autoprefixer@^9
</code></pre>
<h4 id="createthetailwindconfigurationfiles">Create the Tailwind configuration files</h4>
<p>Next, generate <code>tailwind.config.js</code> and <code>postcss.config.js</code> files:</p>
<pre><code class="bash language-bash">npx tailwindcss init -p
</code></pre>
<p>This will create a minimal <code>tailwind.config.js</code> file at the root of the project.</p>
<h4 id="configuretailwindtoremoveunusedstylesinproduction">Configure Tailwind to remove unused styles in production</h4>
<p>In the <code>tailwind.config.js</code> file, configure the <code>purge</code> option with the paths to all of the pages and components so Tailwind can tree-shake unused styles in production builds:</p>
<pre><code class="javascript language-javascript">// ./tailwind.config.js
module.exports = {
  purge: ['./index.html', './src/**/*.{vue,js,ts,jsx,tsx}'],
  ...
}
</code></pre>
<h4 id="includetailwindinthecssfile">Include Tailwind in the CSS file</h4>
<p>Create the <code>./src/assets/css/main.css</code> file and use the <code>@tailwind</code> directive to include Tailwind’s <code>base</code>, <code>components</code>, and <code>utilities</code> styles:</p>
<pre><code class="css language-css">/* ./src/assets/css/main.css */
@tailwind base;
@tailwind components;
@tailwind utilities;

body{
  @apply bg-gray-50;
}
</code></pre>
<p>Tailwind will swap these directives out at build time with all of the styles it generates based on the  configured design system.</p>
<p>Finally, ensure the CSS file is being imported in the <code>./src/main.js</code> file:</p>
<pre><code class="javascript language-javascript">// ./src/main.js
import { createApp } from 'vue'
import App from './App.vue'
import './registerServiceWorker'
import router from './router'
import store from './store'
import './assets/css/main.css'

createApp(App).use(store).use(router).mount('#app')
</code></pre>
<p>And that&#8217;s it, we can run our server:</p>
<pre><code class="bash language-bash">npm run serve
</code></pre>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636517548Linkpreviewer-installed-start-server.png" alt="Vue CLI: start the server after successfully creating an app" /></p>
<p>Now that the app is running, if we go to the URL provided, we should see the default demo app for Vue and see that Tailwind&#8217;s <a href="https://tailwindcss.com/docs/preflight">preflight base styles</a> have been applied.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636517535Linkpreviewer-default-app-tailwind.png" alt="Vue app output after adding Tailwind CSS" /></p>
<h4 id="installtailwindcssintellisenseextension">Install Tailwind CSS IntelliSense extension</h4>
<p>For a smoother development experience, install the <a href="https://marketplace.visualstudio.com/items?itemName=bradlc.vscode-tailwindcss">Tailwind CSS Intellisense extension</a> for VS Code.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636517565Linkpreviewer-tailwind-intellisens-vetur.png" alt="Install Tailwind CSS Intellisense Extension for VS Code" /></p>
<h3 id="basicappstructure">Basic app structure</h3>
<p>Here&#8217;s an overview of what our project folder should look like:</p>
<pre><code class="bash language-bash">link-previewer/
├─ functions/
│  ├─ generate-preview.js
│  └─ hello.js
├─ public/
│  ├─ favicon.ico
│  ├─ img/
│  │  └─ icons/
│  ├─ index.html
│  └─ robots.txt
├─ src/
│  ├─ main.js
│  ├─ App.vue
│  ├─ registerServiceWorker.js
│  ├─ assets/
│  │  ├─ css/
│  │  │  └─ main.css
│  │  └─ logo.png
│  ├─ components/
│  │  └─ LinkPreviewer.vue
│  ├─ router/
│  │  └─ index.js
│  ├─ store/
│  │  └─ index.js
│  └─ views/
│     ├─ About.vue
│     └─ Home.vue
├─ .git
├─ .gitignore
├─ .browserslistrc
├─ .eslintrc.js
├─ babel.config.js
├─ netlify.toml
├─ package-lock.json
├─ package.json
├─ postcss.config.js
├─ README.md
└─ tailwind.config.js
</code></pre>
<h2 id="aquickintroductiontonetlifyfunctions">A Quick Introduction to Netlify Functions</h2>
<p><a href="https://www.netlify.com/products/functions/">Netlify Functions</a> is a Netlify product that simplifies the process of creating and deploying serverless functions. According to the product&#8217;s home page, it&#8217;s used to:</p>
<blockquote>
<p>Deploy server-side code that works as API endpoints, runs automatically in response to events, or processes more complex jobs in the background. </p>
</blockquote>
<p>A basic Netlify Function file exports a handler method with the following syntax:</p>
<pre><code class="javascript language-javascript">exports.handler = async function(event, context){
  return {
    statusCode: 200,
    body: JSON.stringify({message: "Hello World!"})
  }
}
</code></pre>
<p>Netlify provides the <code>event</code> and <code>context</code> parameters when the function is called/invoked. When a function&#8217;s endpoint is called, the <code>handler</code> receives an <code>event</code> object like this:</p>
<pre><code class="javascript language-javascript">{
  "path": "Path parameter (original URL encoding)",
  "httpMethod": "Incoming request’s method name",
  "headers": {Incoming request headers},
  "queryStringParameters": {Query string parameters},
  "body": "A JSON string of the request payload",
  "isBase64Encoded": "A boolean flag to indicate if the applicable request payload is Base64-encoded"
}
</code></pre>
<p>The <code>context</code> parameter, on the other hand, includes information about the context in which the function was called.</p>
<p>Within the function, we&#8217;re returning an object with two important properties:</p>
<ul>
<li><code>statusCode</code>, which is <code>200</code> in this case</li>
<li><code>body</code>, which is a <em>stringified</em> object.</li>
</ul>
<p>The function will be called from our site at <code>/.netlify/functions/hello</code> and on success, it would return the 200 status code and the message, “Hello, World!”. </p>
<p>Now that we have an idea of how Netlify functions work, let&#8217;s see them in practice.</p>
<h2 id="creatingourfirstnetlifyfunction">Creating Our First Netlify Function</h2>
<p>To create our first Netlify function, we&#8217;ll create a new file <code>functions/hello.js</code> in the project directory and enter the following:</p>
<pre><code class="javascript language-javascript">// functions/hello.js
exports.handler = async function(event, context){
  return {
    statusCode: 200,
    body: JSON.stringify({message: "Hello World!"})
  }
}
</code></pre>
<p>Once we&#8217;ve created the function file, we have to make some necessary configurations in order for us to run our function locally.</p>
<h3 id="setupnetlifyconfiguration">Set up Netlify configuration</h3>
<p>We&#8217;ll create a <code>netlify.toml</code> file at the root of our project folder that will tell Netlify where to find our functions: </p>
<pre><code class="toml language-toml"># ./netlify.toml

[functions]
  directory = "./functions"
</code></pre>
<p>Netlify will now locate and deploy the functions in the <code>functions</code> folder at build time.</p>
<h2 id="installnetlifycli">Install Netlify CLI</h2>
<p>To run our functions locally without having to deploy to Netlify, we need to install <a href="https://docs.netlify.com/cli/get-started/">Netlify CLI</a>. The CLI allows us to deploy our projects with some great Netlify features locally. </p>
<p>To install the CLI, make sure you have <a href="https://nodejs.org/en/download/">Node.js</a> version 10 or later, then run:</p>
<pre><code class="bash language-bash">npm install netlify-cli -g
</code></pre>
<p>This installs Netlify CLI globally, so we can run <code>netlify</code> commands from any directory. To get the version, usage, and so on, we can run:</p>
<pre><code class="bash language-bash">netlify 
</code></pre>
<h2 id="runtheappwithnetlifydev">Run the App with Netlify Dev</h2>
<p>To run our project locally with Netlify CLI, stop the dev server (if it&#8217;s active), then run:</p>
<pre><code class="bash language-bash">netlify dev
</code></pre>
<p>And here&#8217;s what we should see:</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636517551Linkpreviewer-Netlif-CLI-dev.png" alt="Run Netlify dev with Netlify CLI" /></p>
<p>If you look closely, you&#8217;ll see a few things going on there:</p>
<ul>
<li>
<p>Netlify tries to inject environment variables from our <code>.env</code> files into the build process, which can then be accessed by our Netlify Functions. In this case, we have no <code>.env</code> file, so it loads the defaults defined in <code>process</code>.</p>
</li>
<li>
<p>Secondly, it loads or deploys our functions located in the functions directory. The Functions server is deployed on a different and random port — <code>36647</code>.</p>
</li>
<li>
<p>Lastly, it automatically detects what framework the application is built with and runs the necessary build processes to deploy the application. In this case, you can see &#8220;Starting Netlify Dev with Vue.js&#8221;. It also supports React and other popular frameworks.</p>
</li>
</ul>
<p>Netlify then starts our development server on <code>http://localhost:8888</code>.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636517554Linkpreviewer-netlify-dev-server-started.png" alt="Netlify dev Cli started" /></p>
<p>Now that our server has started and our functions arevloaded, we can call/invoke it. By default, we can access our functions using this route: <code>/.netlify/functions/&lt;function name&gt;</code>. </p>
<p>One important thing to note is that we don&#8217;t need to specify the port where our Functions server is running. We can use the default route above to communicate with our Functions server. Netlify automatically resolves the URL and port behind the scenes.</p>
<p>if we send a <code>GET</code> request to <a href="http://localhost:8888/.netlify/functions/hello">http://localhost:8888/.netlify/functions/hello</a>, we should get a response of <code>{"message":"Hello, World!"}</code>.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636517543Linkpreviewer-hello-function.png" alt="hello.js Function response from browser" /></p>
<p>Great! Our first serverless function works!</p>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/puppeteer-serverless-functions-link-previewer/?utm_source=rss">Build a Link Previewer with Puppeteer and Serverless Functions</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/puppeteer-serverless-functions-link-previewer/?utm_source=rss</link><guid isPermaLink="false">/?p=237998</guid><category><![CDATA[JavaScript]]></category><dc:creator><![CDATA[Miracle Onyenma]]></dc:creator><pubDate>Sun, 28 Nov 2021 15:00:02 GMT</pubDate><metaDesc>Learn how to deploy serverless functions alongside a front-end app and create an API that generates images and grabs metadata from links.</metaDesc></item><item><title><![CDATA[An Introduction to Cloud Computing and AWS Certification]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/cloud-computing-aws-certification/?utm_source=rss"
              title="An Introduction to Cloud Computing and AWS Certification"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1637906398aws-cloud-computing.jpg"
        alt="An introduction to Cloud Computing and AWS Certification"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1637906398aws-cloud-computing-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1637906398aws-cloud-computing-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1637906398aws-cloud-computing-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1637906398aws-cloud-computing.jpg 1200w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong>In this article, we&#8217;ll look at what cloud computing is, the different types of cloud computing, what a cloud provider is, and why you might want to use one. We&#8217;ll also survey the best cloud providers, and dig into AWS services in particular and what cloud certification is all about.</strong></p>
<h2 id="gettingstartedwithcloudcomputing">Getting Started with Cloud Computing</h2>
<p>When starting your cloud computing career, one of the first steps is to choose a cloud provider. Using that cloud provider&#8217;s services, you&#8217;ll be able to learn about various cloud computing concepts and get to practice your skills .</p>
<h3 id="whatisacloudprovider">What is a cloud provider?</h3>
<p>A cloud provider is a company that offers you computing services over the Internet. In the simplest terms, it allows you to store and run your applications on somebody else&#8217;s computers. </p>
<p>In reality, you can do more than this with a cloud provider, and you&#8217;ll get a glimpse of that in this article!</p>
<h3 id="whyuseacloudprovider">Why use a cloud provider?</h3>
<p>Rather than purchasing equipment, setting up your infrastructure, and maintaining it, you can use a cloud provider.</p>
<p>This way, you can focus on building and maintaining your applications without worrying about the physical infrastructure.</p>
<h2 id="whatcloudprovidertouse">What Cloud Provider to Use?</h2>
<p>There are many cloud providers available, and there&#8217;s no right or wrong answer when choosing one. Some of the most popular cloud service providers are:</p>
<ul>
<li>Amazon Web Services (AWS)</li>
<li>Microsoft Azure</li>
<li>Google Cloud</li>
<li>IBM</li>
<li>Oracle</li>
</ul>
<p>Amazon Web Services is the biggest and most popular cloud provider. Another strong point of AWS is its certification program. Amazon&#8217;s certifications are among the highest-paying certifications in IT.</p>
<p>As a result, this article focuses on AWS for your introduction to cloud computing. The AWS Cloud Practitioner Certificate is Amazon&#8217;s foundational course, which teaches the fundamentals of cloud computing and AWS.</p>
<h2 id="awscertifications">AWS Certifications</h2>
<p>Amazon Web Services offers 11 certifications that are divided into four categories.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1637904906aws-certifications.png" alt="Screenshot of all AWS certifications" /></p>
<p><small>AWS certifications</small></p>
<p>The <strong>Foundational Level</strong> has only one certification, the <a href="https://www.sitepoint.com/premium/courses/aws-certified-cloud-practitioner-2020-3110">AWS Certified Cloud Practitioner</a> certificate. It covers topics such as:</p>
<ul>
<li>the fundamentals of cloud computing</li>
<li>basic AWS information</li>
<li>the key AWS services</li>
<li>billing and pricing</li>
<li>security</li>
</ul>
<p>The Cloud Practitioner certificate is suitable and recommended for people who are getting started with cloud computing and AWS. To ease you into the cloud world, this article goes over cloud computing and AWS fundamentals. You can use it as a pre-requisite for the Cloud Practitioner certificate.</p>
<p>The next level is the <strong>Associate Level</strong>, which has three certifications:</p>
<ul>
<li>Solutions Architect</li>
<li>SysOps Administrator</li>
<li>Developer Associate</li>
</ul>
<p>These certifications are more complex than the foundational level, and they teach you how to implement solutions using the AWS infrastructure. With the &#8220;Associate Level&#8221; certificates, you deep dive into services rather than getting an overview of them.</p>
<p>The certificate you choose depends on the path you want to follow. The AWS Solutions Architect certificate helps you gain general AWS expertise. Since it enables you to gain general AWS expertise, you can use it as the foundation for your following certificates.</p>
<p>After the <a href="https://www.sitepoint.com/premium/courses/aws-certified-cloud-practitioner-2020-3110">AWS Certified Cloud Practitioner</a> certificate, you could work towards the Solutions Architect one. </p>
<p>The following levels, <strong>Professional Level</strong> and <strong>Specialty</strong>, are the most difficult certifications. You don&#8217;t have to worry about them for now.</p>
<h2 id="whatcloudcomputingis">What Cloud Computing Is</h2>
<p>Let&#8217;s start with some fundamental information on cloud concepts. The first question you might ask yourself is &#8220;what is cloud computing?&#8221;</p>
<p>In layman&#8217;s terms, cloud computing is simply like using someone else&#8217;s computer. Instead of having your servers, you rent the servers from someone like AWS.</p>
<p>In more sophisticated terms, cloud computing is the on-demand delivery of IT resources over the Internet on a pay-as-you-go basis.</p>
<h2 id="thebenefitsofcloudcomputing">The Benefits of Cloud Computing</h2>
<p>When it comes to cloud computing, there are six significant benefits:</p>
<ol>
<li><strong>Variable expense versus capital expense</strong>. This means you only pay when you use resources, unlike on-premise resources, where you need to invest a hefty sum beforehand.</li>
<li><strong>No capacity guessing</strong>. You avoid under-utilization or over-utilization of resources. That means you don&#8217;t have to pay for underutilized resources, or have your applications down from over-utilized resources. Cloud computing enables you to rapidly scale up or down in response to changing business needs.</li>
<li><strong>Increased speed and agility</strong>. Cloud computing allows you to create or terminate resources within minutes. You don&#8217;t have to wait for your IT team for weeks to implement on-premise solutions.</li>
<li><strong>Benefit from massive economies of scale</strong>. You&#8217;re splitting the cost with other customers to receive significant discounts.</li>
<li><strong>Go global</strong>. Deploy your applications to various locations worldwide with minimal effort.</li>
<li><strong>Spending money on running and maintaining data centers</strong>. Avoid the headaches, costs, time, and other resources associated with infrastructure development. Let others handle it and focus on your applications.&nbsp;</li>
</ol>
<p>Now you know what cloud computing is and its six significant benefits. The next stage is to become familiar with the various types of cloud computing.</p>
<h2 id="typesofcloudcomputing">Types of Cloud Computing</h2>
<p>There are three types of Cloud Computing:</p>
<ol>
<li><strong>IaaS</strong> (<strong>Infrastructure as a Service</strong> &#8211; for admins). You are responsible for managing your servers (either physical or virtual). </li>
<li><strong>PaaS</strong> (<strong>Platform as a Service</strong> &#8211; for developers). There&#8217;s no need for you to manage the underlying architecture. You&#8217;re only concerned with deploying and running your applications. An example would be Heroku (where you deploy and run web applications).</li>
<li><strong>SaaS</strong> (<strong>Software as a Service</strong> &#8211; for customers). This is a final product that the service provider runs and manages. Google&#8217;s Gmail is one example. You don&#8217;t have to worry about anything other than using the service.</li>
</ol>
<h2 id="cloudcomputingdeployments">Cloud Computing Deployments</h2>
<p>In addition to the three cloud computing services, there are four cloud computing deployments. These are:</p>
<ol>
<li><strong>Public</strong>: fully utilizing cloud computing. Examples are AWS, GCP, Azure, IBM, Alibaba, and so on.</li>
<li><strong>Hybrid</strong>: using a mix of public and private deployments. Sensitive and critical information might be stored in a &#8220;private&#8221; cloud, whereas other information is stored on the &#8220;public&#8221; cloud.&nbsp;</li>
<li><strong>Private</strong>: deploying resources on-premise and using virtualization and resource management tools.</li>
<li><strong>Multi-Cloud</strong>: a multi-cloud architecture uses various cloud service providers. For instance, you could use a mix of AWS and Google Cloud.</li>
</ol>
<h2 id="awsinfrastructure">AWS Infrastructure</h2>
<p>At the time of writing, Amazon has&nbsp;<em>81+ availability zones</em> within&nbsp;<em>25+ geographic regions</em>. There are over 230+ <em>points of presence</em>, split as follows:</p>
<ul>
<li>218+ edge locations</li>
<li>12+ regional edge caches</li>
</ul>
<p>A <strong>region</strong> is a geographic area, and it consists of at least two availability zones (AZs). The reason for having at least two AZs is in case one of the data centers goes down. For example, one region is <strong>eu-west-1 (Ireland)</strong>. Every region is independent of each other, and the&nbsp;<strong>US-EAST</strong> is the largest region. As a result, almost all services become available first in this region.&nbsp;</p>
<p>An <strong>availability zone</strong> is a data center (a building containing lots of physical servers). An availability zone might consist of several data centers, but they&#8217;re counted as one AZ because they&#8217;re close to each other.</p>
<p><strong>Points of presence</strong> are data centers placed at the edge of the networks.</p>
<p>An <strong>edge location</strong> is an AWS endpoint for caching content. That&#8217;s typically CloudFront, which is AWS&#8217;s content delivery network. The purpose of these edge locations is to provide low latency for the end users.</p>
<p>There&#8217;s a unique region that&#8217;s not available to everyone. This region is called&nbsp;<strong>GovCloud</strong>, and it&#8217;s only accessible to companies from the US and US citizens. You also have to pass a screening process.&nbsp;<em>GovCloud allows users to host sensitive Controlled Unclassified Information such as military information.</em></p>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/cloud-computing-aws-certification/?utm_source=rss">An Introduction to Cloud Computing and AWS Certification</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/cloud-computing-aws-certification/?utm_source=rss</link><guid isPermaLink="false">/?p=232296</guid><category><![CDATA[Web]]></category><dc:creator><![CDATA[Catalin Pit]]></dc:creator><pubDate>Thu, 25 Nov 2021 15:00:21 GMT</pubDate><metaDesc>Learn about cloud computing options, how the many services offered by Amazon work, and what Amazon cloud certification is all about.</metaDesc></item><item><title><![CDATA[How to Make Your Website Pass Google’s Core Web Vitals]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/pass-googles-core-web-vitals/?utm_source=rss"
              title="How to Make Your Website Pass Google’s Core Web Vitals"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1637799451google-core-web-vitals.jpg"
        alt="How To Make Your Website Pass Google's Core Web Vitals"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1637799451google-core-web-vitals-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1637799451google-core-web-vitals-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1637799451google-core-web-vitals-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1637799451google-core-web-vitals.jpg 1200w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong>In this article, we&#8217;ll look at how to optimize your website to get a good score on Google&#8217;s Core Web Vitals report. Google favors websites with fast loading times and good website performance. As long as you know the best steps to follow, you can also rank higher in search results.</strong></p>
<p>In today&#8217;s fast-paced world, everyone wants interactive websites with quick loading times.&nbsp;</p>
<p>Google <a href="https://www.thinkwithgoogle.com/intl/en-ca/marketing-strategies/app-and-mobile/mobile-page-speed-new-industry-benchmarks/">reports</a> mobile web pages load within 22 seconds on average. However, 53 percent of mobile users will leave a page that takes longer than three seconds to load.&nbsp;</p>
<p>These numbers prove that optimizing your site to maximize performance should be a top priority. As such, Google announced the creation of Core Web Vitals, which includes three metrics: Largest Contentful Paint (LCP), First Input Delay (FID), and Cumulative Layout Shift (CLS).&nbsp;</p>
<p>As of mid June 2021, this Google page experience update is a ranking factor in search engines.</p>
<p>How can you make your website pass Google&#8217;s Core Web Vitals?&nbsp;</p>
<p>To start off, we&#8217;ll discuss the following topics in this article:</p>
<ul>
<li>What Google&#8217;s Core Web Vitals metrics are</li>
<li>How to measure Core Web Vitals</li>
<li>What a good score for Google&#8217;s Core Web Vitals is</li>
<li>How to improve your score for Core Web Vitals</li>
<li>Tools to improve Core Web Vitals</li>
</ul>
<h2 id="whataregooglescorewebvitalsmetrics">What are Google&#8217;s Core Web Vitals Metrics?</h2>
<p>Here&#8217;s the main thing you need to know about the Core Web Vitals:</p>
<ul>
<li><strong>Largest Contentful Paint (LCP)</strong>. This is a Core Web Vital that measures the amount of time it takes to render the main content or the largest content element visible on the page.</li>
<li><strong>First Input Display (FID)</strong>. This measures how quickly a page responds to a user&#8217;s actions.</li>
<li><strong>Cumulative Layout Shift (CLS)</strong>. This measures the unexpected movement of content when viewing a page.</li>
</ul>
<p>For a more in-depth, deep dive, you can check out our <a href="https://www.sitepoint.com/core-web-vitals/">guide on the Core Web Vitals</a>.&nbsp;</p>
<h2 id="howtomeasurecorewebvitalsmetrics">How to measure Core Web Vitals Metrics?</h2>
<p>Measuring Core Web Vitals is fast and easy with Google PageSpeed Insights.&nbsp;</p>
<p>Just place the URL of your entire site in the text box, click the <strong>Analyze</strong> button and let the tool do the rest.&nbsp;</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1635928800pagespeed-insights.jpg" alt="Google PageSpeed Insights" /></p>
<p>The Core Web Vitals can be found under the <strong>Field Data</strong> and <strong>Lab Data</strong>.&nbsp;</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1635928795lcp.jpg" alt="Google's Core Web Vitals" /></p>
<p>Field Data refers to historical reports about a web page&#8217;s performance based on anonymized reports from Chrome users. Meanwhile, Lab Data uses a simulated load page with specific network conditions to rate a site.</p>
<p>Google PageSpeed Insights uses a slower network connection for the lab test to account for users with slow internet speed.</p>
<p>In the example pictured above, the field LCP data is 1.7 seconds, while the lab LCP is 3.4 seconds. Meanwhile, the FID is 19ms, while the Cumulative Layout Shift is 0.&nbsp;</p>
<h2 id="whatisagoodscoreforgooglescorewebvitals">What Is a Good Score for Google&#8217;s Core Web Vitals?</h2>
<p>Now, let&#8217;s look at the scores you should aim for to pass the Chrome User Experience Report. Let&#8217;s break it down:</p>
<ul>
<li><strong>LCP</strong>: a good LCP score is around <a href="https://support.google.com/webmasters/answer/9205520?hl=en">2.5 seconds</a> or less. Websites that load within 2.6 to 4 seconds need improvement, while those with a load time greater than four seconds have a poor LCP.</li>
<li><strong>FID</strong>: a good threshold for the FID score would require a delay of less than 100ms. However, surpassing 300ms denotes a bad user experience.</li>
<li><strong>CLS</strong>: a CLS score below 0.1 is considered good, but anything above 0.25 is considered poor.</li>
</ul>
<p>Optimizing your website seems like a challenge, especially if your landing page has a lot of elements. The good news is that it&#8217;s possible — as long as you apply the following best practices for improving your score for Google&#8217;s Core Web Vitals.</p>
<h2 id="specifictechniquesforimprovinglargestcontentfulpaint">Specific Techniques for Improving Largest Contentful Paint</h2>
<p>Let&#8217;s take a look at some popular tactics to improve your LCP score.&nbsp;</p>
<h3 id="imagecompression">Image compression</h3>
<p>Image compression involves minimizing or grouping parts of an image file so that it takes up less space. Despite the reduction in image size, this process doesn&#8217;t significantly impact the overall quality of an image in most cases.&nbsp;</p>
<p>The best image compression tools include <a href="https://ezgif.com/optipng">Ezgif</a>, <a href="http://jpeg-optimizer.com/">Jpeg Optimizer</a>, <a href="https://tinypng.com/">Tiny PNG</a>, and <a href="https://compressor.io/">Compressor</a>. Utilizing image formats like JPEG and WebP also lets images get rendered faster.&nbsp;</p>
<h3 id="utilizeacontentdeliverynetworkcdn">Utilize a content delivery network (CDN)</h3>
<p>A CDN can reduce the distance between the user and the server, which leads to a faster page load time and better LCP. Even if your server is based in America, a user from France or Australia can enjoy a positive page experience and quick download times, regardless of their location.</p>
<p>How to choose the best CDN for your business? <a href="https://cdncomparison.com/">CDN comparison</a> lets you compare the features of each CDN provider based on pricing, main features, security, and support.&nbsp;</p>
<h3 id="getareliablewebhost">Get a reliable web host</h3>
<p>A hosting provider can make or break your website loading experience.</p>
<p>A cheap or weak hosting plan won&#8217;t help you achieve a passing LCP score, even if you try numerous tactics to speed up your loading time.&nbsp;</p>
<p>You can check our guide on the <a href="https://www.sitepoint.com/web-hosting-providers-comparison/">best web hosting providers</a> to discover the most prominent players in the industry.</p>
<h3 id="clientsiderendering">Client-side rendering</h3>
<p>Client-side rendering lets developers build a website processed through JavaScript.&nbsp;</p>
<p>In hindsight, it can boost loading times. Over time, however, adding larger JavaScript files could slow down your site, especially when it&#8217;s not properly optimized.&nbsp;</p>
<p>Minifying codes and compression can let you avoid these repercussions. Alternatively, server-side is another option so LCP gets processed on the server, which boosts the LCP score.&nbsp;</p>
<h3 id="removeunusedplugins">Remove unused plugins</h3>
<p>Plugins can improve your site&#8217;s performance, but too much of a good thing can impact your ranking factor.</p>
<p>Having more plugins will require browsers to perform additional tasks and HTTP requests before it can show the landing page.&nbsp;</p>
<p>A good tip is to declutter and remove outdated and unused plugins. Try to list down all the plugins on your website and evaluate whether they&#8217;re still useful to your ecommerce store.&nbsp;</p>
<p>You can also use tools like <a href="https://gtmetrix.com/reports/querohms.com/S0eJqjni/">GTmetrix</a> to determine which files or plugins take time to load.&nbsp;</p>
<p>Just place your WordPress URL on the search bar. You&#8217;ll then be able to identify slow-loading plugins that have a big impact on your site speed.&nbsp;</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1635928793gtmetrix-waterfall-plugin.png" alt="GTMetrix" /></p>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/pass-googles-core-web-vitals/?utm_source=rss">How to Make Your Website Pass Google’s Core Web Vitals</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/pass-googles-core-web-vitals/?utm_source=rss</link><guid isPermaLink="false">/?p=231377</guid><category><![CDATA[Web]]></category><dc:creator><![CDATA[Monique Danao]]></dc:creator><pubDate>Wed, 24 Nov 2021 15:00:55 GMT</pubDate><metaDesc>Google's Core Web Vitals are key to ranking well. Learn the steps involved and tools available for ensuring your site is properly optimized.</metaDesc></item><item><title><![CDATA[Surfer SEO vs Outranking: Which SEO Tool Is Best for You?]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/surfer-seo-vs-outranking/?utm_source=rss"
              title="Surfer SEO vs Outranking: Which SEO Tool Is Best for You?"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1637715336surfer-seo-vs-outrank.jpg"
        alt="Surfer SEO vs Outranking: Which SEO Tool Is Best for You?"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1637715336surfer-seo-vs-outrank-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1637715336surfer-seo-vs-outrank-1024x579.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1637715336surfer-seo-vs-outrank-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1637715336surfer-seo-vs-outrank.jpg 1200w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong>In this article, we’ll be comparing Surfer SEO vs Outranking — two search engine optimization (SEO) tools that use artificial intelligence (AI) to help you take your SEO workflow to the next level.</strong></p>
<p>As technology becomes more advanced, so do <a href="https://www.sitepoint.com/marketing-automation-ai-tools-boost-growth/">marketing automation tools</a> that can help entrepreneurs and small business owners perform faster and more accurate keyword research, content optimization, data analysis, and content writing.</p>
<h2 id="keywordresearchandcontentplanning">Keyword Research and Content Planning</h2>
<p>Choosing the right keywords is, without a doubt, a crucial part of SEO.</p>
<p>However, it’s important to note that, while both Outranking and Surfer SEO are able to show related keywords and their monthly search volume, they&#8217;re not technically keyword research tools. They’re each more of a content optimization tool.</p>
<h3 id="outranking">Outranking</h3>
<p>Once you&#8217;ve done keyword research and added your target keyword inside <a href="https://www.outranking.io/">Outranking</a>, the content optimization tool analyzes the top search engine result pages (SERPs) and shows you the average word count, number of images, and meta title/description length your blog post should have.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1635988839Screen-Shot-2021-10-31-at-3.12.54-PM.jpg" alt="Outranking keyword analyzer" /></p>
<p>It also shows you how many words your competitors’ blog posts have, how many do-follow and no-follow backlinks they have, their domain and page authority, and their search engine rankings.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1635988848Screen-Shot-2021-10-31-at-3.15.05-PM.jpg" alt="Outranking SERP Analysis Results" /></p>
<p>In the &#8220;Keyword Data&#8221; tab, you’ll be able to find things like highest frequency keywords, related keywords, and some additional keywords for content.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1635988855Screen-Shot-2021-10-31-at-3.20.08-PM.jpg" alt="Outranking Keyword Data" /></p>
<p>When it comes to data accuracy, Outranking uses the same engine as <a href="https://app.neilpatel.com/en/ubersuggest/">Ubersuggest</a> to determine search volume, which makes it a bit more accurate than Surfer SEO.</p>
<h3 id="surferseo">Surfer SEO</h3>
<p>Just like Outranking, <a href="https://surferseo.com/">Surfer SEO</a> also shows you other related keyword suggestions and their respective search volume once you&#8217;ve added your main keyword.</p>
<p>However, Surfer SEO includes a metric they call SERP Similarity Score, which can be used to decide whether you want to use a term as a secondary keyword or the main keyword of another blog post.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1635988830Keyword-Research-SERP-Similarity-Score.jpg" alt="SERP Similarity Score" /></p>
<p>For instance, if you use the keyword “how to build muscle” and Surfer SEO sees that several pages that rank for that keyword also rank for another keyword like “gain muscle mass,” it will return a high SERP similarity. </p>
<p>What does this mean, exactly?</p>
<p>This means that Google considers both terms as almost identical, so you should add both of them to your blog post.</p>
<p>On the other hand, if Surfer SEO shows that two keywords have a low similarity score, you should think about writing two different articles that target each specific keyword.</p>
<h4 id="contentplanning">Content Planning</h4>
<p>With Surfer SEO, you can plan content based on a keyword or your URL.</p>
<p>When planning content using a keyword, Surfer SEO will give you multiple topic clusters, each with its respective user intent and search volume, as well as a set of keywords to use. Each topic cluster could be used as separate blog posts that could then link back to your main topic or pillar post. </p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1635988926Screen-Shot-2021-11-02-at-11.23.24-AM.jpg" alt="Surfer SEO Topic Clusters" /></p>
<p>When planning content using your URL, Surfer SEO will give you keywords that you’re ranking for but aren’t using in your existing content.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1635988921Screen-Shot-2021-11-02-at-11.20.55-AM.jpg" alt="Content Planning Based on URL" /></p>
<p>This is a great way to find blog posts that need optimization and featured snippet opportunities.</p>
<h2 id="surferseovsoutrankingoutlinebuilder">Surfer SEO vs Outranking: Outline Builder</h2>
<p>This is where things start getting a little interesting. Both of these content optimization tools read through all the H2 and H3 tags from the top-ranking pages and give you headings you can use to build your outline. </p>
<h3 id="outranking-1">Outranking</h3>
<p>Outranking generates optimized outlines using the top SERPs and Google’s People Also Ask sections.</p>
<p>It then shows you the results in semantically grouped sections broken into H2 and H3 tags that you can easily drag and drop to add to your outline.  </p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1635988863Screen-Shot-2021-10-31-at-9.48.22-PM.jpg" alt="Outranking AI Outline Builder" /></p>
<p>Outranking also has a feature called Concepts, which are facts gathered from existing information that summarize the context of topics covered in each paragraph. </p>
<p>For example, if we generate Concepts from the “Benefits of going vegetarian or vegan” H2 tag, Outranking will go through the SERPs data and find the closest H2 tag that it can with that exact content (“benefits of going vegetarian or vegan”) and pull out information from the paragraphs under that and create Concepts around it. </p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1635988872Screen-Shot-2021-10-31-at-10.17.56-PM.jpg" alt="Concepts Builder Headings" /></p>
<p>Basically, it will read what’s underneath the H2 tag and extract the key information you need to include in your blog post. </p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1635988869Screen-Shot-2021-10-31-at-10.07.25-PM.jpg" alt="Concepts Builder Sections" /></p>
<h3 id="surferseo-1">Surfer SEO</h3>
<p>Just like Outranking, Surfer SEO also analyzes the top pages ranking on SERPs and suggests different titles and headings.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1635988940Screen-Shot-2021-11-02-at-12.10.30-PM.jpg" alt="Surfer SEO Outline Builder Headings" /></p>
<p>Once you open up the Headings tab, you’ll notice that Surfer SEO highlights the terms it thinks you should include in your blog post.</p>
<p>Additionally, you can see subheadings nested right under the main headings to keep the logical structure of your outline.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1635988947Screen-Shot-2021-11-02-at-12.11.26-PM.jpg" alt="Surfer Outline Builder Subheadings" /></p>
<p>You also have the option to add only the heading or both the heading and the paragraph.</p>
<p>All of these suggestions are based on your competitors’ content. If you notice that Surfer SEO is pulling information from a website that’s not one of your direct competitors, you can simply remove them from the analysis.</p>
<p>For example, if you have a blog about vacuums and are writing a detailed review of a specific model, you can remove websites like Capterra or TrustPilot, since they’re more of a “user reviews” content website than full-on detailed reviews.</p>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/surfer-seo-vs-outranking/?utm_source=rss">Surfer SEO vs Outranking: Which SEO Tool Is Best for You?</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/surfer-seo-vs-outranking/?utm_source=rss</link><guid isPermaLink="false">/?p=220540</guid><category><![CDATA[Computing]]></category><category><![CDATA[Entrepreneur]]></category><category><![CDATA[Low Code]]></category><category><![CDATA[Marketing]]></category><category><![CDATA[SEO & SEM]]></category><category><![CDATA[Web]]></category><dc:creator><![CDATA[Christian Coulson]]></dc:creator><pubDate>Tue, 23 Nov 2021 15:00:17 GMT</pubDate><metaDesc>Surfer SEO vs Outranking: learn how these two AI tools boost your content creation process and efforts to rank higher on search engines.</metaDesc></item><item><title><![CDATA[Functional Programming in PHP: Higher-order Functions]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/functional-programming-in-php-higher-order-functions/?utm_source=rss"
              title="Functional Programming in PHP: Higher-order Functions"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1637195560higher-order-functions.jpg"
        alt="Functional Programming in PHP: Higher-order Functions"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1637195560higher-order-functions-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1637195560higher-order-functions-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1637195560higher-order-functions-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1637195560higher-order-functions.jpg 1200w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong>If you examine several frameworks and large-scale applications, you&#8217;ll certainly see a higher-order function at some point. Many languages support the idea of higher-order functions, including JavaScript, Java, .NET, Python and even PHP, to name a few.</strong></p>
<p>But what is a higher-order function and why would we want to use one? What advantages does it give us and can we use it to simplify our code? In this article, we&#8217;ll talk about higher-order functions in PHP specifically, but will show how they&#8217;ve been used in other languages for comparison.</p>
<h2 id="firstclassfunctions">First-Class Functions</h2>
<p>Before we can get into what a higher-order function is, we must first understand that we have to have a language that can support a feature called <a href="https://en.wikipedia.org/wiki/First-class_function">first-class functions</a> (aka first-order functions). This means that the language treats functions as first-class citizens. In other words, the language treats functions like it does variables. You can store a function in a variable, pass it to other functions as a variable, return them from functions like variables and even store them in data structures like arrays or object properties like you can with variables. Most modern languages these days have this feature by default. All you really need to know is that a function can be passed around and used much like variables are. </p>
<p>For our purposes, we&#8217;ll be focusing mostly on passing functions as arguments and returning functions as results, and briefly touching on the concept of non-local variables and closures. (You can read more about these concepts in sections <a href="https://en.wikipedia.org/wiki/First-class_function#Higher-order_functions:_passing_functions_as_arguments">1.1</a>, <a href="https://en.wikipedia.org/wiki/First-class_function#Higher-order_functions:_returning_functions_as_results">1.4</a> and <a href="https://en.wikipedia.org/wiki/First-class_function#Non-local_variables_and_closures">1.3</a> of the Wikipedia article that was linked to in the previous paragraph.)</p>
<h2 id="whatarehigherorderfunctions">What Are Higher-order Functions?</h2>
<p>There are two main characteristics that identify a higher-order function. A higher-order function can implement just one or both of the following ideas: a function that takes one or more functions as an input or returns a function as an output. In PHP there&#8217;s a keyword that&#8217;s a clear giveaway that a function is higher-order: the keyword <code>callable</code>. While this keyword doesn&#8217;t have to be present, the keyword makes it easy to identify them. If you see a function or method that has a callable parameter, it means that it takes a function as input. Another easy sign is if you see a function return a function using its <code>return</code> statement. The return statement might be just the name of the function, or could even be an anonymous/in-line function. Below are some examples of each type.</p>
<pre><code class="php language-php">// Simple user-defined function we'll pass to our higher-order function
function echoHelloWorld() {
  echo "Hello World!";
}

// Higher-order function that takes a function as an input and calls it
function higherOrderFunction(callable $func) {
  $func();
}

// Call our higher-order function and give it our echoHelloWorld() function. 
// Notice we pass just the name as a string and no parenthesis.
// This echos "Hello World!"
higherOrderFunction('echoHelloWorld'); 
</code></pre>
<p>Here are some simple examples of higher-order functions that return a function:</p>
<pre><code class="php language-php">// Returns an existing function in PHP called trim(). Notice it's a simple string with no parentheses.
function trimMessage1() {
  return 'trim';
}

// Here's an example using an anonymous inline function
function trimMessage2() {
    return function($text) {
        return trim($text);
    };
}

// Returns the 'trim' function
$trim1 = trimMessage1(); 

// Call it with our string to trim
echo $trim1('  hello world  ');

// Returns the anonymous function that internally calls 'trim'
$trim2 = trimMessage1(); 

// Call it again with our string to trim
echo $trim2('  hello world  ');
</code></pre>
<p>As you can imagine, you can take in a function and also use that to generate another function that&#8217;s returned. Pretty neat trick, right? But why would you want to do any of this? It sounds like something that would simply make things more complicated.</p>
<h2 id="whywouldyouuseorcreateahigherorderfunction">Why Would You Use or Create a Higher-order Function?</h2>
<p>There are several reasons you might want to create higher-order functions in your code. Everything from code flexibility, code reuse, code extension or to imitate a code solution you saw in another program. While the reasons are numerous, we&#8217;ll cover a few of them here.</p>
<h3 id="addingcodeflexibility">Adding code flexibility</h3>
<p>Higher-order functions add a ton of flexibility. Based on the previous examples, you probably can see a few uses for something like this. You can write a single function that takes in a whole suite of different functions and uses them without having to write code to execute them individually. </p>
<p>Maybe the higher-order function itself doesn&#8217;t know what type of function it will receive. Who said that the function has to know anything about the function it&#8217;s taking in? One minute the input function could be an <code>add()</code> function, and in the next it could be a <code>divide()</code> function. In either case it just works.</p>
<h3 id="easilyexpandyourcode">Easily expand your code</h3>
<p>This functionality also makes it easier to add additional input functions later. Let&#8217;s say you have <code>add()</code> and <code>divide()</code>, but down the road you need to add a <code>sum()</code> function. You can write the <code>sum()</code> function and pipe it through the higher-order function without ever having to change it. In a later example, we&#8217;ll demonstrate how we can use this functionality to create our own <code>calc()</code> function.</p>
<h3 id="imitatefeaturesofanotherlanguage">Imitate features of another language</h3>
<p>Another reason you might want to use a higher-order function in PHP is to simulate the behavior of something like a decorator in Python. You “wrap” a function inside another function to modify how that function behaves. For instance, you could write a function that times other functions. You write a higher-order function that takes in a function, starts a timer, calls the function, then ends the timer to see how much time has elapsed.</p>
<h2 id="examplesofexistinghigherorderfunctionsinphp">Examples of Existing Higher-Order Functions in PHP</h2>
<p>It&#8217;s really simple to find examples of higher-order functions in PHP. Look at the <a href="https://www.php.net/docs.php">PHP documentation</a> and find a function/method that takes a <code>callable</code> input parameter and you&#8217;ve found one. Below are a few examples of commonly used higher-order functions. You might have even used them without ever knowing they were higher-order functions.</p>
<h3 id="thehigherorderdynamicduoarray_mapandarray_filter">The higher-order dynamic duo: <code>array_map</code> and <code>array_filter</code></h3>
<pre><code class="php language-php">$arrayOfNums = [1,2,3,4,5];

// array_map: example of taking an inline anonymous function
$doubledNums = array_map(function($num) {
  return $num * 2;
}, $arrayOfNums);

var_dump($doubledNums); // Prints out array containing [2, 4, 6, 8, 10];
</code></pre>
<p>Let&#8217;s see how to use another one, this time with a filter function we&#8217;ve defined separately:</p>
<pre><code class="php language-php">$arrayOfNums = [1,2,3,4,5];

// Example of creating a function and giving it to a higher-order function array_filter()
function isEven($num) {
  return ($num % 2) === 0;
}

// array_filter is a higher-order function
$evenNums = array_filter($arrayOfNums, 'isEven');

var_dump($evenNums); // Prints out array containing [2, 4]
</code></pre>
<p><code>array_filter</code> and <code>array_map</code> are two very popular higher-order functions that you&#8217;ll find in plenty of code projects. Another one you might use is <code>call_user_func</code>, which takes in a function and a list of arguments and calls on that function. This is essentially a customized higher-order function. Its whole purpose is to call other functions that the user has defined:</p>
<pre><code class="php language-php">function printCustomMessage($message) {
  echo "$message";
}

call_user_func('printCustomMessage', 'Called custom message through the use of call_user_func!');
</code></pre>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/functional-programming-in-php-higher-order-functions/?utm_source=rss">Functional Programming in PHP: Higher-order Functions</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/functional-programming-in-php-higher-order-functions/?utm_source=rss</link><guid isPermaLink="false">/?p=213231</guid><category><![CDATA[PHP]]></category><category><![CDATA[Programming]]></category><dc:creator><![CDATA[Tim Hurd]]></dc:creator><pubDate>Mon, 22 Nov 2021 15:00:41 GMT</pubDate><metaDesc>Learn what higher-order functions are, how they work, why you might need them, and what they look like in PHP, JavaScript and Python.</metaDesc></item><item><title><![CDATA[Build a Code Snippet Web App with Next.js and FaunaDB]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/nextjs-faunadb-build-code-snippet-app/?utm_source=rss"
              title="Build a Code Snippet Web App with Next.js and FaunaDB"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1637110868next-faunadb.jpg"
        alt="Build a Code Snippet Web App with Next.js and FaunaDB"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1637110868next-faunadb-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1637110868next-faunadb-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1637110868next-faunadb-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1637110868next-faunadb.jpg 1200w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong>While programming, developers encounter problems requiring code reuse, leading to repetitive programming that can be time-wasting and reduces productivity. This gives rise to the need for reusable source code called “code snippets”. These snippets prevent repetitive code during programming, can be saved for future use, and are sharable.</strong> </p>
<p>In this tutorial, we&#8217;ll build a website to help users save daily code snippets using the <a href="https://nextjs.org/">Next.js</a> web development framework, and powered by the <a href="https://fauna.com/">Fauna</a> database to handle the storage, manipulation, and display of code snippets. By working on this fun project, we&#8217;ll also learn how to create a basic CRUD app with Next.js and FaunaDB that could also be used for building other similar projects.</p>
<p>A working version of this project can be found at <a href="https://github.com/sitepoint-editors/CodeSnippet-app">GitHub</a>. To follow along, you&#8217;ll need <a href="https://www.sitepoint.com/quick-tip-multiple-versions-node-nvm/">Node installed on your machine</a>, as well as a FaunaDB account and a Google account (for authentication).</p>
<h2 id="installingdependencies">Installing Dependencies</h2>
<p>In this section, we’ll look at how to install Next.js using the <code>npx create-next-app</code> command. This will initialize the Next CLI and build a new Next.js application.</p>
<p>We&#8217;ll also install the dependencies we&#8217;ll be using for the back end — FaunaDB and SWR — via the command line. SWR (state-while-revalidate) is a Next.js hook for fetching data. We&#8217;ll go into this in depth later in this tutorial.</p>
<h3 id="nextjsinstallation">Next.js installation</h3>
<p>To install Next.js, enter the following command in the CLI:</p>
<pre><code class="bash language-bash">npx create-next-app snippetapp
</code></pre>
<p>The above command creates a project directory called <code>snippetapp</code> with the Next.js starter template, which contains the required files for coding with Next. When Next has finished installing, change into the newly created directory:</p>
<pre><code class="bash language-bash">cd snippetapp
</code></pre>
<h3 id="faunadbandswrinstallation">FaunaDB and SWR installation</h3>
<p>To install Fauna, we&#8217;ll be using the following command in the CLI:</p>
<pre><code class="bash language-bash">npm install --save faunadb
</code></pre>
<p>Then to install SWR:</p>
<pre><code class="bash language-bash">npm install swr@0.3.8
</code></pre>
<p>With this, we&#8217;ve installed all the dependencies we&#8217;ll be using to build our application and can now proceed to set up our database on Fauna.</p>
<h2 id="faunadbsetup">FaunaDB Setup</h2>
<p>FaunaDB is a serverless, real-time database. It transforms a traditional database into a flexible data API that still retains the capabilities of a database and its performance while delivering secure and scalable access to app data.</p>
<p>Here, we&#8217;ll create a user account and set up the database to store the data we&#8217;ll be using in our snippet application.</p>
<h3 id="creatingauseraccount">Creating a user account</h3>
<p>To create a user account, navigate to the <a href="https://dashboard.fauna.com/accounts/register">Fauna signup page</a> and create an account.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634823530fauna-signup.jpg" alt="Creating a FaunaDB account" /></p>
<p>After creating a user account, you&#8217;ll be redirected to the dashboard.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634823499after-signup.jpg" alt="The FaunaDB dashboard" /></p>
<h3 id="createthesnippetdatabaseandcollection">Create the snippet database and collection</h3>
<p>Here, we&#8217;ll create a database with the collections required to manage the code snippets of our application. Click on <strong>CREATE DATABASE</strong>. We&#8217;ll create a database called <code>snippets</code>.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634823508create-a-db.jpg" alt="Creating a FaunaDB snippets database" /></p>
<p>On the new page that opens, click on <strong>NEW COLLECTION</strong> and create a collection called <code>codesnippet</code>.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634823505collection.jpg" alt="collection page" /></p>
<p>After creating a collection, we get a page where we can create a document.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634823527document-page.jpg" alt="Create a document" /></p>
<p>Here, you&#8217;ll click on <strong>NEW DOCUMENT</strong>. A JSON document will open, where you can enter the details, as pictured below.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634823533new-document.jpg" alt="Document creation" /></p>
<pre><code class="javascript language-javascript">{
  name: "Prompt User",
  description: "prompts the user",
  language: "javascript",
  code: "prompt('would you like to continue')"
}
</code></pre>
<p>Here, we define a snippet with attributes: <code>name</code>, <code>description</code>, <code>language</code> and <code>code</code>. Click on <strong>SAVE</strong> to save the new collection. We&#8217;ve successfully added a snippet to our database. Now we can proceed to getting our access credentials to use on our app.</p>
<h3 id="secretkeycreation">Secret key creation</h3>
<p>On the dashboard, click on <strong>Security</strong>. This opens up a new page to create our security key.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634823524creating-a-key.jpg" alt="Creating a FaunaDB security key" /></p>
<p>Here, we&#8217;ll set the role to “server” instead of “admin”, and you can give the key a name. Click on the <strong>SAVE</strong> button to generate your key.</p>
<h3 id="creatingaenvfile">Creating a <code>.env</code> file</h3>
<p>We&#8217;ll now create a <code>.env</code> file within the directory of our project. This file will store our generated secret key. In the <code>.env</code> file we have this:</p>
<pre><code class="bash language-bash">FAUNA_SECRET = paste your key here
</code></pre>
<h2 id="creatingacodesnippetpage">Creating a Code Snippet Page</h2>
<p>In this section, we&#8217;ll build the display and upload page for the snippets, and also add functionality to it.</p>
<p>Open the project directory in your code editor and navigate to the <code>index.js</code> file in your pages folder. Here we’ll clear out the code and start building our application:</p>
<pre><code class="javascript language-javascript">import Head from "next/head"
import Image from "next/image"
import styles from "../styles/Home.module.css"

export default function Home() {
  return (
    &lt;div className={styles.container}&gt;
      &lt;Head&gt;
        &lt;title&gt;View Snippet&lt;/title&gt;
        &lt;meta name="description" content="Generated by create next app" /&gt;
        &lt;link rel="icon" href="/favicon.ico" /&gt;
      &lt;/Head&gt;

      &lt;main className={styles.main}&gt;
        &lt;h1 className={styles.title}&gt;Re-usuable Code Snippets&lt;/h1&gt;
        &lt;p className={styles.info}&gt;Add your code snippets here...&lt;/p&gt;
        &lt;button&gt;Create new snippet&lt;/button&gt;
      &lt;/main&gt;
    &lt;/div&gt;
  )
}
</code></pre>
<h3 id="creatingourcomponents">Creating our Components</h3>
<p>Now we&#8217;ll create a component file that will render our snippets. Create a folder named <code>component</code> in your working directory and create a file named <code>Snippets.js</code> within it with the following code:</p>
<pre><code class="javascript language-javascript">import React from "react"
import styles from "../styles/Home.module.css"

function Snippets() {
  return (
    &lt;div className={styles.cont}&gt;
      &lt;p className={styles.lang}&gt;language&lt;/p&gt;
      &lt;h3 className={styles.name}&gt;name of snippet&lt;/h3&gt;
      &lt;p className={styles.descp}&gt;description of snippet&lt;/p&gt;
      {/* Code will be displayed here*/}
      &lt;div className={styles.links}&gt;
        &lt;a&gt;Edit&lt;/a&gt;
        &lt;a&gt;Delete&lt;/a&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  )
}

export default Snippets
</code></pre>
<h3 id="importingourcomponentsintotheapp">Importing our components into the app</h3>
<p>We&#8217;ll now add imports for this file in our <code>index.js</code>:</p>
<pre><code class="javascript language-javascript">import Snippets from "../components/Snippets"
</code></pre>
<p>And use it in our app:</p>
<pre><code class="javascript language-javascript">&lt;button&gt;Create new snippet&lt;/button&gt;
&lt;Snippets/&gt;
</code></pre>
<h3 id="stylingourapp">Styling our app</h3>
<p>We can now style our page. Navigate to the <code>Home.module.css</code> file in the <code>styles</code> folder and replace the styles there with the following:</p>
<pre><code class="css language-css">.container{
  display: flex;
  height: 100%;
  min-height: 100vh;
  background: rgb(48, 48, 255);
  flex-direction: column;
  align-items: center;
  color: #fff;
  font-family: Montserrat;
}
.cont{
  color: #333;
  margin-top: 5px;
  background: rgb(214, 214, 214);
  border-radius: 15px;
  padding: 10px 15px;
}
.main button{
  width: fit-content;
  flex-grow: unset;
  display: inline-block;
  padding: 5px 10px;
  outline: none;
  border: none;
  border-radius: 5%;
  font-weight: bold;
  color: rgb(48, 48, 255);
}
.main button:hover{
  cursor: pointer;
}
.links{
  margin-top: 10px;
}
.links a{
  margin-left: 5px;
}
.links a:hover{
  cursor: pointer;
}
</code></pre>
<h2 id="viewingourapp">Viewing Our App</h2>
<p>At this point, you should be able to start the dev server with <code>npm run dev</code>, visit <a href="http://localhost:3000">http://localhost:3000</a>, and see the skeleton of our app.</p>
<h2 id="settingupthesnippetdisplayarea">Setting up the Snippet Display Area</h2>
<p>Next, we&#8217;ll create the display section for the snippet code. Create a new file called <code>Code.js</code> in the components folder and import it into <code>Snippets.js</code>:</p>
<pre><code class="javascript language-javascript">import React from 'react'
import styles from '../styles/Home.module.css'
import Code from "./Code";

function Snippets() {
  return (
    &lt;div className={styles.cont}&gt;
      &lt;p className={styles.lang}&gt;language&lt;/p&gt;
      &lt;h3 className={styles.name}&gt;name of snippet&lt;/h3&gt;
      &lt;p className={styles.descp}&gt;description of snippet&lt;/p&gt;

      {/* Code will be displayed here*/}
      &lt;Code /&gt;

      &lt;div className={styles.links}&gt;
        &lt;a&gt;Edit&lt;/a&gt;
        &lt;a&gt;Delete&lt;/a&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  )
}

export default Snippets
</code></pre>
<p>For the syntax highlighting of the code, we&#8217;ll be using two packages, namely <a href="https://www.npmjs.com/package/react-syntax-highlighter">react-syntax-highlighter</a> and <a href="https://www.npmjs.com/package/react-copy-to-clipboard">react-copy-to-clipboard</a>. We can download this via the CLI:</p>
<pre><code class="bash language-bash">npm install react-syntax-highlighter react-copy-to-clipboard --save
</code></pre>
<p>Then in <code>Code.js</code>:</p>
<pre><code class="javascript language-javascript">import React from "react"
import { PrismLight as SyntaxHighlighter } from "react-syntax-highlighter"
import {atomDark} from "react-syntax-highlighter/dist/cjs/styles/prism"
import { CopyToClipboard } from "react-copy-to-clipboard"
import styles from "../styles/Home.module.css"
function Code() {
  const codeString = "npm install import react from 'react'"
  const [show, setshow] = React.useState(false)
  return (
    &lt;div&gt;
      &lt;button onClick={() =&gt; setshow(!show)}&gt;Show Code&lt;/button&gt;
      {show ? (
        &lt;div&gt;
          &lt;CopyToClipboard text={codeString}&gt;
            &lt;button className={styles.btn}&gt;Copy&lt;/button&gt;
          &lt;/CopyToClipboard&gt;
          &lt;SyntaxHighlighter language="javascript" style={atomDark}&gt;
            {codeString}
          &lt;/SyntaxHighlighter&gt;
        &lt;/div&gt;
      ) : null}
    &lt;/div&gt;
  )
}
export default Code
</code></pre>
<p>Here, we created a component to display code with syntax highlighting. We&#8217;ve also added copy and toggle-show functionality. Now in the <code>styles</code> file:</p>
<pre><code class="css language-css">.btn{
  left: 80%;
  position: relative;
}
</code></pre>
<h2 id="testingthecodeblocks">Testing the Code Blocks</h2>
<p>To view this change, you can run <code>npm run dev</code> in the command line and view it in your browser. We have the string &#8220;npm install import react from &#8216;react'&#8221; displayed with syntax highlighting as a code block. There&#8217;s also a button to hide and display the code snippet, and a button that allows us to copy the code from the code block.</p>
<h2 id="faunadbinitialization">FaunaDB Initialization</h2>
<p>In this section, we&#8217;ll fetch data from our FaunaDB database to our app. Create a file called <code>Fauna.js</code> in your project directory:</p>
<pre><code class="javascript language-javascript">const faunadb = require("faunadb")
const faunaClient = new faunadb.Client({
  secret: process.env.FAUNA_SECRET
})
const q = faunadb.query
const getResponse = async () =&gt; {
  const { data } = await faunaClient.query(
    q.Map(
      q.Paginate(q.Documents(q.Collection("codesnippet"))),
      q.Lambda("doc", q.Get(q.Var("doc")))
    )
  )
  const snippets = data.map((snippet) =&gt; {
    snippet.id = snippet.ref.id
    delete snippet.ref
    return snippet
  })
  return snippets
}

module.exports = {
  getResponse,
}
</code></pre>
<p>Here, we&#8217;ve initialized FaunaDB with our secret key. We&#8217;ve also set up an <code>async</code> request to query our collection and return the data. We&#8217;ve stored the returned data in a variable named <code>snippets</code>, and deleted the ref to better structure the data. Other functionalities for creating, updating and deleting snippets will be added later in this tutorial.</p>
<p>Note that, if you&#8217;re getting an unauthorized error in the console, you may need to specify the domain name of the target endpoint. The default is <code>db.fauna.com</code>, but since the introduction of <a href="https://docs.fauna.com/fauna/current/learn/understanding/region_groups">Region Groups</a>, three cloud domains are available. Use the correct domain for your database’s Region Group:</p>
<ul>
<li>Classic (US and EU): <code>db.fauna.com</code></li>
<li>United States (US): <code>db.us.fauna.com</code></li>
<li>Europe (EU): <code>db.eu.fauna.com</code></li>
</ul>
<p>Example code:</p>
<pre><code class="javascript language-javascript">const faunaClient = new faunadb.Client({
  secret: process.env.FAUNA_SECRET,
  domain: "db.eu.fauna.com"
})
</code></pre>
<h3 id="handlingourapirequests">Handling our API requests</h3>
<p>We&#8217;ll also create a file to handle our API request for our database. Within the <code>api</code> folder in <code>pages</code>, create a file called <code>snippets.js</code> with the following code:</p>
<pre><code class="javascript language-javascript">import { getResponse } from "../../Fauna.js"
export default async function handler(req, res) {
  console.log(req)
  if (req.method !== "GET") {
    return res.status(405)
  }
  try {
    const snippets = await getResponse()
    return res.status(200).json(snippets)
  } catch (err) {
    console.log(err)
      res.status(500).json({ msg: "Something went wrong." })
  }
}
</code></pre>
<p>Above, we&#8217;ve simply set up a function to handle requests from our database. The snippets are returned as <code>Json</code> and will log errors if any occur. In Next.js, any file stored in the <code>api</code> folder is treated as API endpoints rather than a page and is rendered server-side.</p>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/nextjs-faunadb-build-code-snippet-app/?utm_source=rss">Build a Code Snippet Web App with Next.js and FaunaDB</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/nextjs-faunadb-build-code-snippet-app/?utm_source=rss</link><guid isPermaLink="false">/?p=213199</guid><category><![CDATA[JavaScript]]></category><dc:creator><![CDATA[Victory Tuduo]]></dc:creator><pubDate>Sun, 21 Nov 2021 15:00:12 GMT</pubDate><metaDesc>Learn how to build a CRUD app with Next.js and FaunaDB, and how to perform CRUD operations based on user authentication.</metaDesc></item><item><title><![CDATA[The 5 Best Design Handoff Tools in 2022]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/best-design-handoff-tools/?utm_source=rss"
              title="The 5 Best Design Handoff Tools in 2022"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2019/07/1637034391design-handoff.jpg"
        alt="The 5 Best Design Handoff Tools"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2019/07/1637034391design-handoff-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2019/07/1637034391design-handoff-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2019/07/1637034391design-handoff-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2019/07/1637034391design-handoff.jpg 1200w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong>In this article, we&#8217;ll explore the current state of design handoff tools and the design process overall, and offer our pick of the five best design handoff tools on the market now.</strong></p>
<p>Design handoff involves handing over a UI design to a developer who will code it up. Before “design handoff” was even a term, handing over designs was a complicated, frustrating, and often disastrous task. Way back when, Adobe Photoshop was the only tool available for designing user interfaces, and design handoff tools and/or features didn’t exist. Converting a design to code was referred to as “slicing a PSD”. Oh, the days.</p>
<p>Slicing a PSD (a Photoshop document) was the developer’s responsibility, which was very frustrating, because developers understandably didn’t want to work with design tools. Designers would manually document design specs to make things clearer, but this still resulted in visual/functional inconsistencies and heated discussions with developers. I’m still having nightmares. (If you&#8217;d like to share in my nightmares, <em><a href="https://invisionapp.com/inside-design/6-design-dev-memes/">here&#8217;s a nice collection of memes for you to explore</a>.</em>)</p>
<h3 id="designhandofftoday">Design handoff today</h3>
<p>Nowadays, there’s an abundance of UI tools sporting design handoff features and even tools that are wholly dedicated to handoff, and which help designers and developers translate design to code, house design files, maintain consistency between design elements, and facilitate good designer-developer collaboration.</p>
<p>Modernized designers and developers recognize the design handoff process as a key development process, whether building a design system or a product from scratch. In fact, UI design tools such as Figma offer handoff and design system features side by side.</p>
<h2 id="whatdodesignhandofftoolsactuallydo">What Do Design Handoff Tools Actually Do?</h2>
<p>Handoff tools help:</p>
<ul>
<li>designers to ready their designs for inspection</li>
<li>developers to inspect and translate designs to code</li>
<li>designers and developers to collaborate and communicate</li>
</ul>
<p>Without design handoff, developers are left with only one alternative: <em>guessing</em>. Guessing often results in visual and functional inaccuracies — such as the wrong colors being used or interactions behaving oddly. In turn, this impacts the user’s experience and sends designers into a nuclear meltdown.</p>
<p>Let’s take a look at five of the best design handoff tools.</p>
<h2 id="figmahttpsfigmacommostused"><a href="https://figma.com/">Figma</a> (most used)</h2>
<ul>
<li>Platforms: Web, macOS, Linux, Windows</li>
<li><a href="https://figma.com/pricing/">Pricing</a>: $0/user/month, $12/user/month, $45/user/month</li>
</ul>
<p>While not as advanced as Zeplin in terms of how many code languages are supported, Figma translates design styles to CSS (for web), Swift (for iOS/macOS/iPadOS), and XML (for Android). However, this should cover the majority of design handoffs anyway.</p>
<p>Alternative design handoff tools can be installed as Figma Plugins for when designs need to be translated to Sass, Less, Stylus, React Native code, and more.</p>
<p>Image assets can be exported or copied to the clipboard in SVG or PNG format, all at once or singularly, in any resolution.</p>
<p>If collaborators have something to say (or ask) about the design, they can communicate clearly and openly using contextual comments, which aids collaboration and ensures that everybody is on board with how the design should look, feel, and function.</p>
<p>Figma is not only the most used tool for design handoff, but also for user flows, user interfaces, interactive prototypes, design systems, <em>and</em> version control (according to the <a href="https://uxtools.co/survey-2020/#toolkit">2020 Design Tools Survey</a>). While Zeplin is the highest-rated handoff tool due to the fact that it supports more code languages, Figma isn’t too far behind, as it&#8217;s multi-functional and facilitates a lot more than handoff.</p>
<p>All in all, I would choose Figma (as most teams do) until I needed to hand off designs using an unsupported code language, in which case Zeplin makes a more-than-ideal secondary option.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2019/07/1637031238figma.jpg" alt="A screenshot of the Figma home page" /></p>
<h2 id="zeplinhttpszepliniohighestrated"><a href="https://zeplin.io/">Zeplin</a> (highest rated)</h2>
<ul>
<li>Platforms: Web, macOS, Windows</li>
<li>Import from: Sketch, Figma, Adobe XD, Photoshop</li>
<li><a href="https://zeplin.io/pricing">Pricing</a>: $0/user/month, $6/user/month, $12/user/month</li>
</ul>
<p>Zeplin supports more code languages than Figma does (React Native, Sass, Less, Stylus, etc., in addition to the standard Swift, XML, and CSS). It’s also cheaper than Figma-like tools, though this is because Figma-like tools are multi-functional and cover much more of the UI design workflow. Zeplin is the highest-rated design handoff tool (according to the 2020 Design Tools Survey), so some designers tend to overlook this downside.</p>
<p>In order to use Zeplin, you’ll need to create designs using Photoshop, Adobe XD, Sketch, or Figma first, so it’s totally understandable that some designers would rather keep their UI design workflow contained to a single tool, and this is likely why Figma is used more often than Zeplin for handoff.</p>
<p>Functionality-wise, Zeplin does everything you’d expect a handoff tool to do (and does it fairly well). It exports image assets as a variety of formats and in various resolutions, translates design styles to code, and facilitates communication.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2019/07/1637031897zeplin.jpg" alt="Screenshot of the Zeplin home page" /></p>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/best-design-handoff-tools/?utm_source=rss">The 5 Best Design Handoff Tools in 2022</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/best-design-handoff-tools/?utm_source=rss</link><guid isPermaLink="false">https://www.sitepoint.com/?p=172412</guid><category><![CDATA[Design]]></category><category><![CDATA[Design & UX]]></category><category><![CDATA[Illustration]]></category><dc:creator><![CDATA[Daniel Schwarz]]></dc:creator><pubDate>Wed, 17 Nov 2021 15:00:24 GMT</pubDate><metaDesc>Handing off designs to developers has a troubled history. Learn about 5 excellent apps that have revolutionized the design handoff process.</metaDesc></item><item><title><![CDATA[How to Create Reusable Components with the Vue 3 Composition API]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/vue-composition-api-reusable-components/?utm_source=rss"
              title="How to Create Reusable Components with the Vue 3 Composition API"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636951555vue-composition-api.jpg"
        alt="How to Create Reusable Components with the Vue 3 Composition API"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636951555vue-composition-api-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636951555vue-composition-api-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636951555vue-composition-api-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636951555vue-composition-api.jpg 1200w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong>In this tutorial, we&rsquo;ll explore how to use the Vue 3 Composition <a href="https://v3.vuejs.org/guide/composition-api-introduction.html">API</a> and its latest code reusability capabilities.</strong></p>
<p>Code sharing and reusability are one of the cornerstones of software development. Since the earliest days of programming, the problem of code repetition has made programmers invent strategies for keeping their code <a href="https://en.wikipedia.org/wiki/Don%27t_repeat_yourself">DRY</a>, reusable and portable. As time has passed, these strategies have been constantly polished and improved, and new ones are constantly developed. </p>
<p>This applies equally to <a href="https://v3.vuejs.org/">Vue</a> as to other programming languages and frameworks. As the Vue framework has evolved, it it has continued to offer much better reusability approaches. </p>
<h2 id="toc_0">What Is Composition API and Why It Was Created</h2>
<p>Let&rsquo;s consider what makes a piece of code reusable. For me, there are three main principles of reusability:</p>
<ul>
<li><strong>Code abstraction</strong>. A piece of code is abstract when it can suit multiple different use cases (like classes in many programming languages).</li>
<li><strong>Code portability</strong>. A piece of code is portable when it can be used not only in different places in one project but also in different projects. </li>
<li><strong>Code decoupling (or loose coupling)</strong>. A piece of code is decoupled from another one when changing one doesn&rsquo;t require changing the other. They&rsquo;re as independent of each other as possible. Of course, complete decoupling is impossible — which is why the more accurate term used by developers is “loosely coupled”.</li>
</ul>
<p>The Composition API is a new strategy for building and structuring Vue 3 components. It incorporates all of the three principles described above and allows for creating abstract, portable, and loosely coupled components that can be reused and shared between different projects.</p>
<h3 id="toc_1">Motivation to Add the Vue Composition API to the Framework</h3>
<p>The motivation for the Composition API to be added to Vue 3 is clear and simple: producing more compact and defragmented code. Let&rsquo;s explore this a bit more.</p>
<p>When I found Vue for the first time, I was hooked by its Options (object-based) API. It seemed to me way more clear and elegant in contrast to the Angular and React equivalents. Everything has its own place and I can just put it in there. When I have some data, I put it in a <code>data</code> option; when I have some functions, I put them in a <code>methods</code> option, and so on:</p>
<div>
<pre><code class="language-javascript">// Options API example
export default {
  props: [&#39;title&#39;, &#39;message&#39;],

  data() {
    return {
      width: 30,
      height: 40
    }
  },

  computed: {
    rectArea() {
      return this.width * this.height
    },
  },

  methods: {
    displayMessage () {
      console.log(`${this.title}: ${this.message}`)
    }
  }
}</code></pre>
</div>
<p>All this seems quite ordered, clean, and easy to read and understand. It turns out, however, that this is valid only while an app is relatively small and simple. As the app and its components grow more and more, the code fragmentation and disorder increase. </p>
<p>When the Options API is used in large projects, the code base soon starts to become like a fragmented hard disk. Different parts of the code in a component, which logically belong together, are spread in different places. This makes the code hard to read, understand and maintain. </p>
<p>This is where the Composition API comes into play. It offers a way to structure the code in order, where all logical parts are grouped together as a unit. To some extent, you can imagine the Composition API as a disk defragmentation tool. It helps you to keep the code compact and clean.</p>
<p>Here&rsquo;s a simplified visual example:</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/10/1635527518options-vs-composition-api.png" alt="Options vs the Composition API"/></p>
<p>As you can see, a component&rsquo;s code built with Options API could be quite fragmented, while a component&rsquo;s code built with the Composition API is grouped by features and looks much easier to read and maintain. </p>
<h3 id="toc_2">Vue Composition API Advantages</h3>
<p>Here&rsquo;s a summary of the main advantages the Composition API offers:</p>
<ul>
<li>Better code composition.</li>
<li>Logically related blocks are kept together.</li>
<li><a href="https://antfu.github.io/vue-composition-api-benchmark-results/">Better overall performance compared to Vue 2</a>.</li>
<li>Cleaner code. The code is logically better ordered, which makes it much more meaningful and easy to read and understand.</li>
<li>Easy to extract and import functionality.</li>
<li>TypeScript support, which improves IDE integrations and code assistance, and code debugging. (This is not a feature of the Composition API, but it&rsquo;s worth mentioning it as a feature of Vue 3.)</li>
</ul>
<h2 id="toc_3">Composition API Basics</h2>
<p>Despite its power and flexibility the Composition API is quite simple. To use it in a component, we need to add a <code>setup()</code> function, which in fact is just another option added to the Options API: </p>
<div>
<pre><code class="language-javascript">export default {
  setup() {
    // Composition API
  }
}</code></pre>
</div>
<p>Inside the <code>setup()</code> function, we can create reactive variables, and functions to manipulate them. Then we can return those variables and/or functions, which we want to be available in the rest of the component. To make reactive variables, you&rsquo;ll need to use the <a href="https://v3.vuejs.org/guide/reactivity-fundamentals.html">Reactivity API</a> functions (<code>ref()</code>, <code>reactive()</code>, <code>computed()</code>, and so on). To learn more about their usage, you can explore this <a href="https://www.sitepoint.com/vue-3-reactivity-system/">comprehensive tutorial about the Vue 3 Reacivity system</a>.</p>
<p>The <code>setup()</code> function accepts two arguments: <code>props</code> and <code>context</code>. </p>
<p><em>Props</em> are reactive and will be updated when new props are passed in:</p>
<div>
<pre><code class="language-javascript">export default {
  props: [&quot;message&quot;],
  setup(props) {
    console.log(props.message)
  }
}</code></pre>
</div>
<p>If you want to destructure your props, you can do this by using <code>toRefs()</code> inside the <code>setup()</code> function. If you use ES6 destructuring instead, it <em>will remove</em> props reactivity:</p>
<div>
<pre><code class="language-javascript">import { toRefs } from &#39;vue&#39;

export default {
  props: [&quot;message&quot;],
  setup(props) {
//  const { message } = props   &lt;-- ES6 destructuring. The &#39;message&#39; is NOT reactive now.
    const { message } = toRefs(props) // Using &#39;toRefs()&#39; keeps reactivity.
    console.log(message.value)
  }
}</code></pre>
</div>
<p><em>Context</em> is a normal JavaScript object (not reactive) that exposes other useful values like <code>attrs</code>, <code>slots</code>, <code>emit</code>. These are equivalents to <code>$attrs</code>, <code>$slots</code>, and <code>$emit</code> from the Options API.</p>
<p>The <code>setup()</code> function is executed before the component instance creation. So you won&rsquo;t have access to the following component options: <code>data</code>, <code>computed</code>, <code>methods</code>, and template refs.</p>
<p>In the <code>setup()</code> function, you can access a component&rsquo;s lifecycle hook by using the <code>on</code> prefix. For example, <code>mounted</code> will become <code>onMounted</code>. The lifecycle functions accept a callback that will be executed when the hook is called by the component:</p>
<div>
<pre><code class="language-javascript">export default {
  props: [&quot;message&quot;],
  setup(props) {
    onMounted(() =&gt; {
      console.log(`Message: ${props.message}`)
    })
  }
}</code></pre>
</div>
<p><em>Note: you don&rsquo;t need to call the <code>beforeCreate</code> and <code>created</code> hooks explicitly, because the <code>setup()</code> function does a similar job by itself. In a <code>setup()</code> function, <code>this</code> isn&rsquo;t a reference to the current active instance, because <code>setup()</code> is called before other component options are resolved.</em></p>
<h3 id="toc_4">Comparing the Options API with the Composition API</h3>
<p>Let&rsquo;s make a quick comparison between the Options and Composition APIs.</p>
<p>First, here&rsquo;s a simple to-do app component, built with the Options API, with abilities to add and remove tasks:</p>
<div>
<pre><code class="language-markup">&lt;template&gt;
  &lt;div id=&quot;app&quot;&gt;
    &lt;h4&gt; {{ name }}&#39;s To Do List &lt;/h4&gt;
    &lt;div&gt;
      &lt;input v-model=&quot;newItemText&quot; v-on:keyup.enter=&quot;addNewTodo&quot; /&gt;
      &lt;button v-on:click=&quot;addNewTodo&quot;&gt;Add&lt;/button&gt;
      &lt;button v-on:click=&quot;removeTodo&quot;&gt;Remove&lt;/button&gt;
        &lt;transition-group name=&quot;list&quot; tag=&quot;ol&quot;&gt;
          &lt;li v-for=&quot;task in tasks&quot; v-bind:key=&quot;task&quot; &gt;{{ task }}&lt;/li&gt;
        &lt;/transition-group&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/template&gt;</code></pre>
</div>
<div>
<pre><code class="language-javascript">&lt;script&gt;
  export default {
    data() { 
      return {
        name: &quot;Ivaylo&quot;,
        tasks: [&quot;Write my posts&quot;, &quot;Go for a walk&quot;, &quot;Meet my friends&quot;, &quot;Buy fruit&quot;],
        newItemText: &quot;&quot;
    }},
    methods: {
      addNewTodo() {
        if (this.newItemText != &quot;&quot;) {
          this.tasks.unshift(this.newItemText);
        }
        this.newItemText = &quot;&quot;;
      },
      removeTodo() {
        this.tasks.shift();
      },
    }
  }; 
&lt;/script&gt; </code></pre>
</div>
<p>I&rsquo;ve omitted the CSS code here for brevity and because it&rsquo;s not relevant. You can see the full code in the <a href="https://codepen.io/SitePoint/pen/jOLeJJb">Vue 2 Options API example</a>. <!--https://codepen.io/codeknack/pen/BadKOKy--></p>
<p>As you can see, this is quite a simple example. We have three data variables and two methods. Let&rsquo;s see  how to rewrite them with the Composition API in mind:</p>
<div>
<pre><code class="language-javascript">&lt;script&gt;
  import { ref, readonly } from &quot;vue&quot;

  export default {
    setup () {
      const name = ref(&quot;Ivaylo&quot;)
      const tasks = ref([&quot;Write my posts&quot;, &quot;Go for a walk&quot;, &quot;Meet my friends&quot;, &quot;Buy fruit&quot;])
      const newItemText = ref(&quot;&quot;) 

      const addNewTodo = () =&gt; {
        if (newItemText.value != &quot;&quot;) {
          tasks.value.unshift(newItemText.value);
        }
        newItemText.value = &quot;&quot;;
      }
      const removeTodo = () =&gt; {
        tasks.value.shift();
      }
      
      return {
        name: readonly(name),
        tasks: readonly(tasks),
        newItemText,
        addNewTodo,
        removeTodo
      }
    }
  }; 
&lt;/script&gt; </code></pre>
</div>
<p>As you can see in <a href="https://codepen.io/SitePoint/pen/KKvGEYz">this Vue 3 Composition API example</a><!-- https://codepen.io/codeknack/pen/oNBbGom -->, the functionality is the same but all data variables and methods are moved inside a <code>setup()</code> function.</p>
<p>To recreate the three data reactive variables, we use the <code>ref()</code> function. Then, we recreate the <code>addNewTodo()</code> and <code>removeTodo()</code> functions. Note that all uses of <code>this</code> are removed and instead variable names are used directly followed by the <code>value</code> property. So instead of <code>this.newItemText</code> we write <code>newItemText.value</code>, and so on. Finally, we return the variables and functions so they can be used in the component&rsquo;s template. Note that, when we use them in the template, we don&rsquo;t need to use the <code>value</code> property, because all returned values are <a href="https://v3.vuejs.org/guide/reactivity-fundamentals.html#ref-unwrapping">automatically shallow unwrapped</a>. So we don&rsquo;t need to change anything in the template.</p>
<p>We make the <code>name</code> and <code>tasks</code> read-only to prevent them from any changes outside of the component. In this case, the <code>tasks</code> property can be changed only by <code>addNewTodo()</code> and <code>removeTodo()</code>.</p>
<h3 id="toc_5">When the Composition API is a good fit for a component and when it isn&rsquo;t</h3>
<p>Just because some new technology is created doesn&rsquo;t mean you need it or must use it. Before deciding whether to use a new technology, you should think about whether you really need it. Although the Composition API offers some great benefits, using it in small and simple projects can lead to unnecessary complexity. The principle is the same as with <a href="https://vuex.vuejs.org/">Vuex</a> usage: it can be too complicated for small projects. </p>
<p>For example, if your components are mostly single-feature — that is, they do only one thing — you don&rsquo;t need to add unnecessary cognitive load by using the Composition API. But if you notice that your components are getting complex and multi-featured — they handle more than one single task and/or their functionality is needed in many places in you app — then you should consider using the Composition API. In medium to large projects with lots of complex, multi-featured components, the Composition API will help you produce highly reusable and maintainable code without unnecessary hacks or workarounds.</p>
<p>So you can take the following rules as a general advice:</p>
<ul>
<li><strong>The Options API</strong> is best for building small, simple, single-feature components whose functionality requires low reusability.</li>
<li><strong>The Composition API</strong> is best for building larger and more complex, multi-featured components whose functionality requires higher reusability. </li>
</ul>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/vue-composition-api-reusable-components/?utm_source=rss">How to Create Reusable Components with the Vue 3 Composition API</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/vue-composition-api-reusable-components/?utm_source=rss</link><guid isPermaLink="false">/?p=209359</guid><category><![CDATA[JavaScript]]></category><dc:creator><![CDATA[Ivaylo Gerchev]]></dc:creator><pubDate>Tue, 16 Nov 2021 15:00:03 GMT</pubDate><metaDesc>Learn how to make Vue code more reusable, compact, and clean, by harnessing the Composition API, along with the Reactivity API and slots.</metaDesc></item><item><title><![CDATA[Build Interactive Gantt Charts with Airtable, Gatsby and React]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/build-interactive-gantt-charts-with-airtable-gatsby-and-react/?utm_source=rss"
              title="Build Interactive Gantt Charts with Airtable, Gatsby and React"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636869530task-management-gantt-react-gatsby.jpg"
        alt="Build Interactive Gantt Charts with Airtable, Gatsby and React"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636869530task-management-gantt-react-gatsby-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636869530task-management-gantt-react-gatsby-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636869530task-management-gantt-react-gatsby-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636869530task-management-gantt-react-gatsby.jpg 1200w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong>With Gatsby, it&#8217;s very easy to integrate different data sources into one application. In this article, we&#8217;ll develop a task management tool whose data is fetched from Airtable. We&#8217;ll use React for the front end, with a hybrid rendering strategy.</strong></p>
<p>It&#8217;s a common scenario: you want to develop an app that connects to data from a spreadsheet application or some other data source. In this article, I&#8217;ll show you how to implement an application of this type with the Gatsby framework. In our example application, tasks will be imported from an Airtable workspace and visualized as a <a href="https://en.wikipedia.org/wiki/Gantt_chart">Gantt chart</a>. The user can move the tasks by drag and drop, after which all changes will be synchronized with Airtable. You can use the project as a template for all kinds of scheduling apps.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636866638task-table.png" alt="A simple task table" /></p>
<p>You can try the result live on my <a href="https://ganttchartgatsbymain.gatsbyjs.io/">Gatsby Cloud site</a>. The src files of the project can be found in my <a href="https://github.com/aprenzel/gantt-chart-gatsby-public">GitHub repository</a>. </p>
<h2 id="settinguptheproject">Setting Up the Project</h2>
<p>Gatsby is a static site generator. This means you write your application with React, and Gatsby translates your code into HTML files that are understandable to the browser. This build process is carried out at regular intervals on the <strong>server side</strong>, in contrast to conventional web applications where the HTML code is first assembled on the client side in the user&#8217;s browser. The HTML files are therefore statically available on the server (hence the name static site generator) and can be sent directly to the client when requested. This reduces the loading time of the application for the user.</p>
<p>SitePoint&#8217;s <a href="https://www.sitepoint.com/gatsby-guide/">Gatsby tutorial</a> provides all the information you need to develop an application with this framework. If you want to develop my example application step by step, you should start as outlines below.</p>
<p>First, you should download and install <a href="https://nodejs.org/en/download/">Node.js</a>. You can check if it&#8217;s installed correctly by typing <code>node -v</code> on the console. The current version of Node should be displayed:</p>
<pre><code class="bash language-bash">node -v
&gt; v14.16.0
</code></pre>
<p>With Node we also get npm, the Node package manager. With this tool, we can now install the Gatsby CLI:</p>
<pre><code class="bash language-bash">npm install -g gatsby-cli
</code></pre>
<p>We&#8217;re ready to create a new project using the Gatsby CLI. I name it &#8220;gantt-chart-gatsby&#8221;:</p>
<pre><code class="bash language-bash">gatsby new gantt-chart-gatsby
</code></pre>
<p>Then move into the project folder with the command <code>cd gantt-chart-gatsby</code> and build the project with the command <code>gatsby develop</code>. Now you can open the index page of the project in the browser on <a href="http://localhost:8000">http://localhost:8000</a>. At first, you should only see the welcome page that Gatsby has prepared for us.</p>
<p>In the next step, you should examine the <code>src</code> folder of the project. The subfolder <code>src/pages</code> contains the React components of the individual pages of the project. For now, it&#8217;s sufficient for you to keep the <code>index.js</code> file for the index page, because, in our example application, we only need one page. You can delete the other files in this folder, except for <code>404.js</code> (which can be useful if someone enters a wrong address).</p>
<p>It&#8217;s a good starting point if you overwrite the existing code in <code>index.js</code> with this code:</p>
<pre><code class="javascript language-javascript">import * as React from 'react'

const IndexPage = () =&gt; {
  return (
   &lt;main&gt;
      &lt;title&gt;Gantt Chart&lt;/title&gt;
      &lt;h1&gt;Welcome to my Gatsby Gantt Chart&lt;/h1&gt; 

    &lt;/main&gt;
  )
}

export default IndexPage;
</code></pre>
<p>You can build the project again with the command <code>gatsby develop</code> on the command line and open the index page in the browser. Now you should see an empty page with the heading &#8220;Welcome to my Gatsby Gantt Chart&#8221;.</p>
<h2 id="buildingthefrontendwithreact">Building the Front End with React</h2>
<h3 id="thefirstversionoftheindexpage">The first version of the index page</h3>
<p>We will implement the Gantt chart as a reusable React component. Before I explain the implementation of the component in detail in the following sections, I&#8217;d first like to show how it&#8217;s initialized and embedded in the index page. So I&#8217;d recommend you to hold off using the <code>gatsby develop</code> command until we&#8217;ve finished the first version of the component. (I&#8217;ll let you know when we&#8217;re ready!)</p>
<p>In this example project, I use the concept of &#8220;jobs&#8221; and &#8220;resources&#8221;. <strong>Jobs</strong> are the tasks that are drawn into the chart cells and that can be moved by drag and drop. <strong>Resources</strong> contain the labels for the rows in which the jobs can be moved. These can be names for the tasks, but in other use cases also the names of people, vehicles or machines carrying out the tasks. </p>
<p>Jobs and resources are passed to the Gantt chart component as properties. Before connecting the task management tool to Airtable, we fill the lists with some hard-coded test data in JSON format: </p>
<pre><code class="javascript language-javascript">import * as React from "react";
import {GanttChart} from "../GanttChart";
import "../styles/index.css";

let j = [
  {id: "j1", start: new Date("2021/6/1"), end: new Date("2021/6/4"), resource: "r1"},
  {id: "j2", start: new Date("2021/6/4"), end: new Date("2021/6/13"), resource: "r2"},
  {id: "j3", start: new Date("2021/6/13"), end: new Date("2021/6/21"), resource: "r3"},
];

let r = [{id:"r1", name: "Task 1"}, {id:"r2", name: "Task 2"}, {id:"r3", name: "Task 3"}, {id:"r4", name: "Task 4"}];

const IndexPage = () =&gt; {
  return (
    &lt;main&gt;
      &lt;title&gt;Gantt Chart&lt;/title&gt;
      &lt;h1&gt;Welcome to my Gatsby Gantt Chart&lt;/h1&gt; 
      &lt;GanttChart jobs={j} resources={r}/&gt;
    &lt;/main&gt;
  )
};

export default IndexPage;
</code></pre>
<h3 id="cssstylesfortheganttchart">CSS styles for the Gantt chart</h3>
<p>In the next step, we create a new <code>index.css</code> file in the <code>styles</code> folder. (If the folder doesn&#8217;t exist, create a new folder <code>styles</code> in the folder <code>src</code> of the project.) The following CSS settings control the layout and appearance of the Gantt chart:</p>
<pre><code class="css language-css">body{
  font-family: Arial, Helvetica, sans-serif;
}

#gantt-container{
  display: grid;     
}

.gantt-row-resource{
  background-color:whitesmoke;
  color:rgba(0, 0, 0, 0.726);
  border:1px solid rgb(133, 129, 129);
  text-align: center;
  padding: 15px;
}

.gantt-row-period{
  background-color:whitesmoke;
  color:rgba(0, 0, 0, 0.726);
  border:1px solid rgb(133, 129, 129);
  text-align: center;

  display:grid;
  grid-auto-flow: column;
  grid-auto-columns: minmax(40px, 1fr);
}

.period{
  padding: 10px 0 10px 0;
}

.gantt-row-item{
  border: 1px solid rgb(214, 214, 214);
  padding: 10px 0 10px 0;
  position: relative;
  background-color:white;
}

.job{
  position: absolute;
  height:38px;
  top:5px;
  z-index: 100;
  background-color:rgb(167, 171, 245);
  cursor: pointer;
}
</code></pre>
<h3 id="implementingtheganttchartcomponent">Implementing the <code>GanttChart</code> component</h3>
<p>Now I&#8217;ll explain the implementation of the <code>GanttChart</code> component in more detail. First, we need a file named <code>GanttChart.js</code> in the <code>src</code> folder. In this tutorial, I use a simplified version of the <code>GanttChart</code> for only one month (June 2021). An extended version with select fields for starting month and end month can be found at GitHub under the name <a href="https://github.com/aprenzel/gantt-chart-gatsby-public/blob/main/src/GanttChart_extended.js">GanttChart_extended.js</a>.</p>
<p>The chart table is built up in three steps, represented by the functions <code>initFirstRow</code>, <code>initSecondRow</code> and <code>initGanttRows</code>:</p>
<pre><code class="javascript language-javascript">import React from 'react';

export class GanttChart extends React.Component {

    names = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];

    constructor(props) {

        super(props);       

        this.state = {
            dateFrom: new Date(2021,5,1),
            dateTo: new Date(2021,5,30),
        };
    }

    render(){

        let month = new Date(this.state.dateFrom.getFullYear(), this.state.dateFrom.getMonth(), 1);

        let grid_style = "100px 1fr";

        let firstRow = this.initFirstRow(month);
        let secondRow = this.initSecondRow(month);
        let ganttRows = this.initGanttRows(month);

        return (

            &lt;div className="gantt-chart"&gt;
                &lt;div id="gantt-container" style={{gridTemplateColumns : grid_style}}&gt;
                    {firstRow}
                    {secondRow}
                    {ganttRows}
                &lt;/div&gt;
            &lt;/div&gt;
        );
     }


    initFirstRow(month){...}

    initSecondRow(month){...}

    initGanttRows(month){...}


    //helper functions:

    formatDate(d){ 
        return d.getFullYear()+"-"+this.zeroPad(d.getMonth()+1)+"-"+this.zeroPad(d.getDate());  
    }

    zeroPad(n){
        return n&lt;10 ? "0"+n : n;
    }

    monthDiff(d1, d2) {
        let months;
        months = (d2.getFullYear() - d1.getFullYear()) * 12;
        months -= d1.getMonth();
        months += d2.getMonth();
        return months &lt;= 0 ? 0 : months;
    }

    dayDiff(d1, d2){   
        let diffTime = Math.abs(d2 - d1);
        let diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24)); 
        return diffDays;
    }

}
</code></pre>
<p>In the <code>initFirstRow</code> function, the first row of the chart table is generated. As you can see from the picture above, the first row consists of two grid cells. These are generated as divs, which in turn are inserted as children into the &#8220;gantt-container&#8221; (see the listing above). The second div also contains the label for the current month. </p>
<p>React requires a unique &#8220;key&#8221; property for all elements that are part of an enumeration. This helps to optimize the rendering performance:</p>
<pre><code class="javascript language-javascript"> initFirstRow(month){

    let elements = []; let i = 0;

    elements.push(&lt;div key={"fr"+(i++)} className="gantt-row-resource"&gt;&lt;/div&gt;);

    elements.push(&lt;div key={"fr"+(i++)} className="gantt-row-period"&gt;&lt;div className="period"&gt;{this.names[month.getMonth()] + " " + month.getFullYear()}&lt;/div&gt;&lt;/div&gt;);

    return elements;
 }
</code></pre>
<p>The next row of the chart table is generated in the <code>initSecondRow</code> function. We use the same principle again: for each table cell, a div is created. You have to make sure that the divs are nested correctly (the second div in the row contains individual divs for each day of the month) so that the CSS Grid settings (see the <code>index.css</code> file) will produce the desired layout:</p>
<pre><code class="javascript language-javascript">initSecondRow(month){

    let elements = []; let i=0;

    //first div
    elements.push(&lt;div key={"sr"+(i++)} style={{borderTop : 'none'}} className="gantt-row-resource"&gt;&lt;/div&gt;);

    let days = [];

    let f_om = new Date(month); //first day of month
    let l_om = new Date(month.getFullYear(), month.getMonth()+1, 0); //last day of month

    let date = new Date(f_om);

    for(date; date &lt;= l_om; date.setDate(date.getDate()+1)){

        days.push(&lt;div key={"sr"+(i++)} style={{borderTop: 'none'}} className="gantt-row-period period"&gt;{date.getDate()}&lt;/div&gt;);
    }

    //second div in the row with child divs for the individual days
    elements.push(&lt;div key={"sr"+(i++)} style={{border: 'none'}} className="gantt-row-period"&gt;{days}&lt;/div&gt;);

    return elements;

}
</code></pre>
<p>The remaining rows of the chart table are generated in the <code>initGanttRows</code> function. They contain the grid cells into which the jobs are drawn. Again, the rendering is done row by row: for each row we first place the name of the resource, then we iterate over the individual days of the month. Each grid cell is initialized as a <code>ChartCell</code> component for a specific day and resource. With the <code>cell_jobs</code> list, the individual cell is assigned the jobs that need to be drawn into it (typically this is exactly one job):</p>
<pre><code class="javascript language-javascript">initGanttRows(month){

    let elements = []; let i=0;

    this.props.resources.forEach(resource =&gt; {

        elements.push(&lt;div key={"gr"+(i++)} style={{borderTop : 'none'}} className="gantt-row-resource"&gt;{resource.name}&lt;/div&gt;);

        let cells = [];

        let f_om = new Date(month);
        let l_om = new Date(month.getFullYear(), month.getMonth()+1, 0);

        let date = new Date(f_om);

        for(date; date &lt;= l_om; date.setDate(date.getDate()+1)){

            let cell_jobs = this.props.jobs.filter((job) =&gt; job.resource == resource.id &amp;&amp; job.start.getTime() == date.getTime());

            cells.push(&lt;ChartCell key={"gr"+(i++)} resource={resource} date={new Date(date)} jobs={cell_jobs}/&gt;);
        }

        elements.push(&lt;div key={"gr"+(i++)} style={{border: 'none'}} className="gantt-row-period"&gt;{cells}&lt;/div&gt;);

    });

    return elements;
}
</code></pre>
<p>Now add the following code for the <code>ChartCell</code> component at the end of <code>GanttChart.js</code>. The component renders a single table cell of the chart as a div containing one or more jobs as child elements. The HTML code for displaying a job is provided by the <code>getJobElement</code> function:</p>
<pre><code class="javascript language-javascript">class ChartCell extends React.Component {

    constructor(props) {

      super(props);

      this.state = {
        jobs: props.jobs
      }
    }

    render(){

      let jobElements = this.props.jobs.map((job) =&gt; this.getJobElement(job));

      return (
        &lt;div 
            style={{borderTop: 'none', borderRight: 'none', backgroundColor: (this.props.date.getDay()==0 || this.props.date.getDay()==6) ? "whitesmoke" : "white" }} 
            className="gantt-row-item"&gt;
            {jobElements}
        &lt;/div&gt;
      );
    }

    getJobElement(job){

        let d = this.dayDiff(job.start, job.end);

        //Example: a job with a duration of 2 days covers exactly two grid cells, so the width is 2*100% and we have to add up 2px for the width of the grid lines
        return (
        &lt;div    style={{width: "calc("+(d*100)+"% + "+ d + "px)"}} 
                className="job" 
                id={job.id} 
                key={job.id}
        &gt;

        &lt;/div&gt;
        );
    }

    dayDiff(d1, d2){   
        let diffTime = Math.abs(d2 - d1);
        let diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24)); 
        return diffDays;
    }
}
</code></pre>
<p>At this point, you can build the project from the root folder using the <code>gatsby develop</code> command. The hard-coded jobs from the index page should be visible in the Gantt chart. They can&#8217;t be dragged and dropped yet, but we&#8217;ll take care of that later.</p>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/build-interactive-gantt-charts-with-airtable-gatsby-and-react/?utm_source=rss">Build Interactive Gantt Charts with Airtable, Gatsby and React</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/build-interactive-gantt-charts-with-airtable-gatsby-and-react/?utm_source=rss</link><guid isPermaLink="false">/?p=209321</guid><category><![CDATA[Computing]]></category><category><![CDATA[JavaScript]]></category><category><![CDATA[Low Code]]></category><dc:creator><![CDATA[Anna Prenzel]]></dc:creator><pubDate>Mon, 15 Nov 2021 15:00:00 GMT</pubDate><metaDesc>Learn how to develop an app that connects to data from a spreadsheet app or other data sources, using Gatsby, React and Airtable.</metaDesc></item><item><title><![CDATA[How to Fetch Data in Svelte]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/svelte-fetch-data/?utm_source=rss"
              title="How to Fetch Data in Svelte"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636688238rest-api-svelte.jpg"
        alt="How to Fetch Data in Svelte"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636688238rest-api-svelte-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636688238rest-api-svelte-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636688238rest-api-svelte-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636688238rest-api-svelte.jpg 1200w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong>This tutorial explores how you can consume and render data from an API in your Svelte application. You can interact with APIs in Svelte in the <code>onMount()</code> lifecycle hook using either Axios, Apisauce, JavaScript’s native Fetch API, or any HTTP client of your choice.</strong></p>
<p>We&#8217;ll build a sample application that interacts and displays data provided by a REST API server. This application will allow users to fetch lists of blog posts from a REST API and display them on the page.</p>
<h3 id="prerequisites">Prerequisites</h3>
<p>In order to follow this tutorial, you&#8217;ll need to have some prior knowledge of JavaScript and CSS, as well as some familiarity with <a href="https://www.sitepoint.com/svelte-javascript-framework-introduction/">Svelte</a>. </p>
<p>You&#8217;ll also need <a href="https://www.sitepoint.com/quick-tip-multiple-versions-node-nvm/">Node and npm</a> installed on your machine, as well as <a href="https://git-scm.com/downloads">Git</a>.</p>
<h2 id="whatisarestapi">What Is a REST API?</h2>
<p>The acronym API stands for “application programming interface”, and in simple terms, it&#8217;s a way for two applications to communicate — or share data with each other.  </p>
<p>A REST API is a type of API that implements the representational state transfer (REST) protocol. REST is an architectural style for building web services that interact via an HTTP protocol. The request structure of REST includes four essential parts, which are the HTTP method, an endpoint, headers, and the request body. </p>
<h3 id="httpmethods">HTTP Methods</h3>
<p>The HTTP method in an API request tells the server what kind of action the client expects it to perform. The most widely used HTTP methods today include GET, POST, PATCH, DELETE and are explained briefly below.</p>
<ul>
<li><code>GET</code>: used to fetch or read information from a server</li>
<li><code>POST</code>: used to create or store records in a server</li>
<li><code>PUT</code> / <code>PATCH</code>: used to update or patch records in a server</li>
<li><code>DELETE</code>: used to delete one or more records from a resource point</li>
</ul>
<h3 id="httpendpoints">HTTP Endpoints</h3>
<p>An HTTP endpoint in basic terms is an address or URL that specifies where one or more resources can be accessed by an API. </p>
<h3 id="httpheaders">HTTP Headers</h3>
<p>HTTP headers are key-value pairs that let the client pass information to the server in a request and vice-versa in a response. </p>
<h3 id="requestbody">Request Body</h3>
<p>The body of an API call is the payload (or data) sent from the client to the server. </p>
<h2 id="settingupoursvelteapp">Setting Up our Svelte App</h2>
<p>We&#8217;ll build a sample application that interacts with an external REST API to fetch a list of blog posts from a server. We&#8217;ll then display this list on the Svelte client.</p>
<p>We’re not going to dive too much into bundling and the infrastructure of Svelte apps in this tutorial, so we’ll follow the instructions on the <a href="https://svelte.dev/">official Svelte site</a> to get an application up and running.</p>
<p>In your preferred directory, run:</p>
<pre><code class="bash language-bash">npx degit sveltejs/template svelte-demo-app
</code></pre>
<p>Then, enter into the folder, install the required dependencies using npm and start a development server:</p>
<pre><code class="bash language-bash">cd svelte-demo-app
npm install
npm run dev --open
</code></pre>
<p>You should now see a &#8220;Hello, World!&#8221; message displayed in your browser at <a href="http://localhost:5000/">http://localhost:5000/</a>.</p>
<h2 id="usingthefetchapitoconsumearestapi">Using the Fetch API to Consume a REST API</h2>
<p>In this article, we&#8217;ll examine two methods of fetching data from an API. Firstly, we&#8217;ll look at using the Fetch API, which is native to JavaScript. Then in the next section we&#8217;ll look at using the Axios client, before briefly comparing and contrasting the two methods after that.</p>
<h3 id="whatisthefetchapi">What is the Fetch API?</h3>
<p>The Fetch API is a promise-based mechanism that allows you to make asynchronous API requests to endpoints in JavaScript. If you’re familiar with the <code>XMLHttpRequest()</code> method, you&#8217;ll probably agree that the Fetch API is an improvement — in the sense that it provides additional features such as data caching, the ability to read streaming responses, and <a href="https://www.sitepoint.com/introduction-to-the-fetch-api/">more</a>.</p>
<p>Using the Fetch API is as easy as calling the <code>fetch()</code> method with the path to the resource you’re fetching as a required parameter. For example:</p>
<pre><code class="javascript language-javascript">const response = fetch('your-api-url.com/endpoint');
</code></pre>
<h3 id="passingmoreparametersinarequest">Passing more parameters in a request</h3>
<p>The <code>fetch()</code> method also allows you to be more specific with the request you’re making by passing an <code>init</code> object as an optional second parameter. </p>
<p>The <code>init</code> object allows you pass extra details along with your request. The most common of these are listed below:</p>
<ul>
<li><code>method</code>: a string that specifies what HTTP method is being sent to the server and can be one of GET, POST, PUT, PATCH or DELETE. </li>
<li><code>cache</code>: a string that specifies if the request should be cached. Allowed options are <code>default</code>, <code>no-cache</code>, <code>reload</code>, <code>force-cache</code>, <code>only-if-cached</code>.</li>
<li><code>headers</code>: an object used to set headers to be passed along with the request example.</li>
<li><code>body</code>: an object most commonly used in <code>POST</code>, <code>PUT</code> or <code>PATCH</code> requests. It allows you pass a payload to the server.</li>
</ul>
<h3 id="buildingouttheappcomponent">Building out the <code>App</code> component</h3>
<p>Once your Svelte scaffolding has been completed, open up the <code>src</code> folder and locate the <code>App.svelte</code> component. This is what is rendered when you visit the project&#8217;s home page.</p>
<p>As you can see, the component contains a <code>&lt;script&gt;</code> block for our JavaScript, a <code>&lt;style&gt;</code> block for our styles, as well as a <code>&lt;main&gt;</code> tag with our markup. This is the basic anatomy of a Svelte component.</p>
<p>Let&#8217;s start by importing the <code>onMount</code> hook from Svelte, like so:</p>
<pre><code class="javascript language-javascript">import { onMount } from "svelte";
</code></pre>
<p>The <code>onMount</code> hook in Svelte is a lifecycle method used to define instructions that should be carried out once the component where it&#8217;s used is first rendered in the DOM tree. </p>
<p>If you’re coming from a React background, you should notice that <code>onMount</code> hook in Svelte works similarly to the <code>componentDidMount()</code> method in class-based React components or the <code>useEffect()</code> hook in React functional components. </p>
<p>Next, we’re going to define a variable to hold the URL of the endpoint we intend to use:</p>
<pre><code class="javascript language-javascript">const endpoint = "https://jsonplaceholder.typicode.com/posts";
</code></pre>
<p><em>Note: <a href="https://jsonplaceholder.typicode.com/">JSONPlaceholder</a> is a handy, free, online REST API that you can use whenever you need some fake data.</em></p>
<p>Next, create a <code>posts</code> variable and assign an empty array to it:</p>
<pre><code class="javascript language-javascript">let posts = [];
</code></pre>
<p>This empty <code>posts</code> array is going to be filled up with the data we receive from our API once we make the call. </p>
<p>Finally, we can now make use of the <code>onMount()</code> method to make a <code>GET</code> request to the endpoint using JavaScript’s Fetch API as shown below:</p>
<pre><code class="javascript language-javascript">onMount(async function () {
  const response = await fetch(endpoint);
  const data = await response.json();
  console.log(data);
});
</code></pre>
<p>When pieced together, your <code>App</code> component should contain the following:</p>
<pre><code class="javascript language-javascript">&lt;script&gt;
  import { onMount } from "svelte";
  const endpoint = "https://jsonplaceholder.typicode.com/posts";
  let posts = [];

  onMount(async function () {
    const response = await fetch(endpoint);
    const data = await response.json();
    console.log(data);
  });

  export let name;
&lt;/script&gt;

&lt;main&gt;
  &lt;h1&gt;Hello {name}!&lt;/h1&gt;
  &lt;p&gt;Visit the &lt;a href="https://svelte.dev/tutorial"&gt;Svelte tutorial&lt;/a&gt; to learn how to build Svelte apps.&lt;/p&gt;
&lt;/main&gt;

&lt;style&gt;
  /* ommitted for brevity */
&lt;/style&gt;
</code></pre>
<p>To check this is working, save the file, then visit <a href="http://localhost:3000/">http://localhost:3000/</a> and check the browser&#8217;s dev tools. You should see an array of objects logged to the console.</p>
<p><em>Note: if you&#8217;re wondering about that <code>export let name;</code> statement, this is how we define props in Svelte. The <code>export</code> keyword here declares that this value is a prop that will be provided by the component’s parent.</em></p>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/svelte-fetch-data/?utm_source=rss">How to Fetch Data in Svelte</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/svelte-fetch-data/?utm_source=rss</link><guid isPermaLink="false">/?p=209307</guid><category><![CDATA[JavaScript]]></category><dc:creator><![CDATA[David Adeneye]]></dc:creator><pubDate>Sun, 14 Nov 2021 15:00:00 GMT</pubDate><metaDesc>Need to consume and render data from an API in a Svelte application? Learn how to consume a REST API using the Fetch API vs the Axios client.</metaDesc></item><item><title><![CDATA[Six Ways to Remove Backgrounds in Photoshop in 2022]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/remove-background-photoshop/?utm_source=rss"
              title="Six Ways to Remove Backgrounds in Photoshop in 2022"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2018/08/1576625640remove-background-photoshop.jpg"
        alt="How to Quickly and Easily Remove a Background in Photoshop"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2018/08/1576625640remove-background-photoshop-300x157.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2018/08/1576625640remove-background-photoshop.jpg 600w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong>With many advances to Photoshop over the last several years, removing the background from an image has never been easier or quicker. Knowing the best method to use for the type of image you’re working with is key to getting the best results with the best technique available.</strong> </p>
<p>Here are six ways to remove backgrounds from your photos using Photoshop CC, along with when to use each technique to achieve the best results.</p>
<p><em>All images used in this article were found on Unsplash.</em></p>
<h2 id="1removeabackgroundinphotoshopwiththeobjectselectiontool">1. Remove a Background in Photoshop with the Object Selection Tool</h2>
<p>Perhaps one of the coolest features to have come to Photoshop is the new Object Selection tool, which is new to Photoshop 2022. The Object Selection tool utilizes Adobe Sensi AI technology to do basically all the work for you in selecting the subject in your photos. </p>
<p>Open your photo in Photoshop and select the <strong>Object Selection</strong> tool in the toolbar on the left (in the same menu as Quick Selection Tool). From here, simply hover your cursor over your subject and wait for it to turn blue. (Move your cursor in tiny circles if it doesn&#8217;t immediately turn blue.) In an instant, your subject is ready to be selected and worked with. </p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636587546photoshop-objectselect.png" alt="Remove a background in Photoshop using the new Object Selection tool" /></p>
<p>To remove the background from here, press the <kbd>shift</kbd> key while selecting all of the objects you&#8217;d like to keep in the photo. This will auto-select each object for you (showing you the marching ants around each object). Go to <strong>Select</strong> &gt; <strong>Inverse</strong> so that it inverts the selection (meaning that your background is now selected instead of your objects).</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636588155photoshop-objectselect2.png" alt="Remove a background in Photoshop: Object Selection tool selection" /></p>
<p>Depending on what you&#8217;re wanting the background to be (in my case, I just want it to be transparent), you&#8217;ll likely need to unlock your image so it&#8217;s no longer considered a background. Click the lock on the right side of the layer that has your image to unlock that layer. This should change the layer name to &#8220;Layer 0&#8221; if you have no other layers. To remove the background, click the <strong>Eraser Tool</strong> (making sure your brush is a large size) and start erasing the background.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636588478photoshop-objectselect3.png" alt="Remove a background in Photoshop: Object Selection tool eraser" /></p>
<p>You don&#8217;t have to worry about Photoshop losing the selections. If you ever need to reselect your objects, simply repeat the process of selecting the Object Selection tool and hover over your objects again.</p>
<p>If you want to learn how to edit the resulting mask from Photoshop&#8217;s Object Selection tool (in case it didn&#8217;t get everything in the initial selection) <a href="https://helpx.adobe.com/photoshop/using/making-quick-selections.html">click here</a> to read more about Object Selection tool.</p>
<p><em>Photo credit: <a href="https://unsplash.com/photos/_ViDPYQXrdY">Chris Hardy on Unsplash</a></em></p>
<h2 id="2removeabackgroundinphotoshopwithquickaction">2. Remove a Background in Photoshop with Quick Action</h2>
<p><em>Best to use when: you&#8217;re doing it for you, you need it fast, and you&#8217;re not necessarily looking for perfection. Best to use with high contrast between subject and background, and when the subject has fairly simplistic lines.</em></p>
<p>By far the quickest method discussed here is the built-in Photoshop <strong>Quick Action</strong> for removing backgrounds in Photoshop. This was introduced in Photoshop 2021 (in the Creative Cloud subscription) and provides a very fast way to remove backgrounds. </p>
<p>With speed, however, comes less accuracy. Using Photoshop Quick Action will do most of the work for you, but the results may fall short of your expectations, depending on your image. If that’s the case, you can use any of the methods described here to polish up the result.</p>
<h3 id="quickactionsteps">Quick Action Steps:</h3>
<ol>
<li>
<p>With your image open in Photoshop, right click your Background layer and click <strong>Duplicate Layer</strong>. In the dialog box that pops up, name your layer (calling it whatever you like) and click <strong>OK</strong>. Click the eye icon to the left of the original layer to turn that layer off.</p>
</li>
<li>
<p>Make sure your Properties panel is open by going to <strong>Window</strong> &gt; <strong>Properties</strong>. (If it was already checked, there&#8217;s no need to click it; if it isn’t checked, click it to open it up on the right-hand side by default.)</p>
</li>
<li>
<p>In your Layers panel, click your new layer. In the Properties panel (by default this should be above your Layers panel), click the <strong>Remove Background</strong> button under <strong>Quick Action</strong>.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/04/1618950189Remove-Background-Quick-Action-1-Cropped-01.png" alt="Remove Background in Photoshop using the Quick Action 1" /></p>
</li>
<li>
<p>The quick action has now removed the background, leaving your layer with a mask around the subject.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/04/1618950645Remove-Background-Quick-Action-2-Cropped-01.png" alt="Remove Background in Photoshop using the Quick Action 2" /></p>
</li>
</ol>
<p>From here, you can make refinements by going into the mask and adjusting as needed (such as around the dog&#8217;s feet at the bottom left of the image). While outside the scope of this article, if you need help with working with masks, <a href="https://helpx.adobe.com/photoshop/how-to/layer-mask.html">check out this Adobe tutorial</a>.</p>
<p><em>Photo credit: <a href="https://unsplash.com/photos/5PVXkqt2s9k">Karsten Wingert on Unsplash</a></em></p>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/remove-background-photoshop/?utm_source=rss">Six Ways to Remove Backgrounds in Photoshop in 2022</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/remove-background-photoshop/?utm_source=rss</link><guid isPermaLink="false">http://www.sitepoint.com/blogs/?p=15218</guid><category><![CDATA[Design]]></category><category><![CDATA[Design & UX]]></category><category><![CDATA[Photography & Imagery]]></category><category><![CDATA[Photoshop]]></category><dc:creator><![CDATA[Amber Leigh Turner]]></dc:creator><pubDate>Sun, 14 Nov 2021 13:01:28 GMT</pubDate><metaDesc>Need to remove an image background? Learn six ways to remove a background in Photoshop, depending on the kind of image you're working with.</metaDesc></item><item><title><![CDATA[Create a GitHub Tracker with Push Notifications in Svelte]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/create-a-github-tracker-with-push-notifications-in-svelte/?utm_source=rss"
              title="Create a GitHub Tracker with Push Notifications in Svelte"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636590666push-notification-github-tracker.jpg"
        alt="Create a GitHub Tracker with Push Notifications in Svelte"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636590666push-notification-github-tracker-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636590666push-notification-github-tracker-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636590666push-notification-github-tracker-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636590666push-notification-github-tracker.jpg 1200w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong>In this article, you&#8217;ll learn how to build a GitHub tracker that notifies users when there&#8217;s a new Issue/PR on a tracked repository by sending push notifications.</strong> </p>
<p>GitHub already sends notifications through emails if you&#8217;ve opted in, but many studies have shown that <strong>push notifications reach users better than emails do</strong>. After you&#8217;ve built the GitHub tracker by following this tutorial, you&#8217;ll have learned how to:</p>
<ul>
<li>add a service worker and convert the tracker to a <a href="https://web.dev/pwa">PWA</a></li>
<li>subscribe to push notifications</li>
<li>use the <a href="https://github.com">GitHub</a> API</li>
<li>send push events through <a href="https://vercel.com">Vercel</a> cloud functions</li>
<li>periodically fetch new issues using <a href="https://easycron.io">EasyCron</a></li>
</ul>
<h2 id="prerequisites">Prerequisites</h2>
<p>There are a few skills and services you&#8217;ll need to follow this article:</p>
<ul>
<li><a href="https://nodejs.org">Node.js</a> and npm installed</li>
<li>prior <a href="https://svelte.dev">Svelte</a> knowledge</li>
<li>a free <a href="https://github.com">GitHub</a> account, since we&#8217;re using the <a href="https://api.github.com">GitHub API</a></li>
<li>a free <a href="https://cloud.mongodb.com">MongoDB Atlas</a> account to use MongoDB in the cloud</li>
<li>a free <a href="https://vercel.com">Vercel</a> account to deploy the application and for cloud functions</li>
</ul>
<h2 id="whatarepushnotifications">What are Push Notifications?</h2>
<p>Let&#8217;s take a look at what these so called &#8220;push notifications&#8221; are.</p>
<p>You must be familiar with regular notifications. These are little bubbles of text that appear on your screen to <em>notify</em> you of something. Push notifications are similar, except that they <em>aren&#8217;t generated on-demand</em>, but they <em>are generated upon receiving push events</em>. Push notifications work <em>when an app is closed</em>, while regular notifications require you to have the app open.</p>
<p>Push notifications are supported in modern web browsers like Chrome by using something called service workers. Service workers are little pieces of JavaScript that run separately from the browser&#8217;s main thread, and as a result, can run offline if your app is installed as a PWA (progressive web application).</p>
<p>Push notifications are used in chat applications to notify users when they have unread messages, in games, to notify users of game events, in news sites, to notify users of breaking articles, and for many other purposes.</p>
<p>There are four steps to show push notifications in your app:</p>
<ol>
<li>request permission with <code>window.Notification.requestPermission()</code></li>
<li>convert your app to a PWA and install it</li>
<li>subscribe to push events</li>
<li>upon receiving a push event, send the notification</li>
</ol>
<h2 id="step1creatingthetracker">Step 1: Creating the Tracker</h2>
<p>Let&#8217;s use Svelte with <a href="https://vitejs.com">Vite.js</a> instead of Rollup in this article. Vite is, as its name suggests, faster than Rollup, and also provides built-in support for environment variables. To create a new project with Svelte and Vite, run this command:</p>
<pre><code class="shell language-shell">npm init vite
</code></pre>
<p>Select the framework to be <code>svelte</code>. You can use TypeScript if you want. I&#8217;ll be using regular JavaScript.</p>
<p>Next, <code>cd</code> into the project folder and you can add <a href="https://tailwindcss.com">TailwindCSS</a> to your application and install all dependencies with these commands:</p>
<pre><code class="shell language-shell">npx svelte-add tailwindcss

# Install packages
yarn install # or npm install
</code></pre>
<p>Finally, open the project in your favorite code editor and run <code>npm run dev</code> or <code>yarn dev</code> to start the application on <a href="http://localhost:3000">http://localhost:3000</a>.</p>
<h3 id="howthetrackerwillwork">How the tracker will work</h3>
<p>We&#8217;ll use the GitHub API to get a list of issues and pull requests for a repository that the user has tracked. A user&#8217;s tracked repositories and their username will be stored in the MongoDB database.</p>
<p>The first step would be to prompt the user for their username. Create <code>src/lib/UsernamePrompt.svelte</code>, which will be the component that will do so. Here&#8217;s my UI for the form, but you can design it however you want:</p>
<pre><code class="markup language-markup">&lt;script&gt;
  let username = "";
  async function submit() {
    // TODO
  }
&lt;/script&gt;

&lt;form
  on:submit|preventDefault="{submit}"
  class="mx-auto min-w-[350px] max-w-[1100px] w-[50%] border border-gray-500 rounded my-4 px-6 py-4"
&gt;
  &lt;h1 class="text-center text-3xl m-4"&gt;Enter a username&lt;/h1&gt;
  &lt;p class="text-center text-xl m-4"&gt;Enter a username to use this tracker&lt;/p&gt;

  &lt;input
    type="text"
    class="rounded px-4 py-2 border border-gray-300 w-full outline-none"
    placeholder="Username"
    aria-label="Username"
    bind:value="{username}"
  /&gt;

  &lt;button
    class="mt-4 border border-transparent bg-blue-500 text-white rounded px-4 py-2 w-full"
  &gt;
    Submit
  &lt;/button&gt;
&lt;/form&gt;
</code></pre>
<p>Add this component in <code>App.svelte</code> like so:</p>
<pre><code class="markup language-markup">&lt;script&gt;
  import UsernamePrompt from "./lib/UsernamePrompt.svelte";
&lt;/script&gt;

&lt;UsernamePrompt /&gt;
</code></pre>
<p>Next, let&#8217;s add the main tracker UI. Create file <code>src/lib/Tracker.svelte</code> and add the below code in it:</p>
<pre><code class="markup language-markup">&lt;script&gt;
  let repo = "";
  function track() {
    // TODO
  }

  function untrack(repo) {
    // TODO
  }
&lt;/script&gt;

&lt;form
  on:submit|preventDefault={track}
  class="mx-auto min-w-[350px] max-w-[1100px] w-[50%] border border-gray-500 rounded my-4 px-6 py-4"
&gt;
  &lt;h1 class="text-center text-3xl m-4"&gt;GitHub tracker&lt;/h1&gt;

  &lt;input
    type="text"
    class="rounded px-4 py-2 border border-gray-300 w-full outline-none"
    placeholder="Enter the repository's URL"
    aria-label="Repository URL"
    bind:value={repo}
  /&gt;
  &lt;button
    class="mt-2 border border-transparent bg-blue-500 text-white rounded px-4 py-2 w-full"
    &gt;Track repository&lt;/button
  &gt;

  &lt;h2 class="mt-4 text-2xl"&gt;Tracked repositories&lt;/h2&gt;
  &lt;ul class="m-2 list-decimal"&gt;
    &lt;!-- We'll use a loop to automatically add repositories here later on. --&gt;
    &lt;li class="py-1 flex items-center justify-between"&gt;
      &lt;a class="text-gray-500 hover:underline" href="https://github.com/test/test"
        &gt;https://github.com/test/test&lt;/a
      &gt;
      &lt;button class="text-red-500 cursor-pointer" on:click={() =&gt; untrack("")}
        &gt;Untrack&lt;/button
      &gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/form&gt;
</code></pre>
<p>To test out your component, <em>temporarily</em> swap out the <code>UsernamePrompt</code> component for the new <code>Tracker</code> component in <code>App.svelte</code>:</p>
<pre><code class="markup language-markup">&lt;script&gt;
  // import UsernamePrompt from "./lib/UsernamePrompt.svelte";
  import Tracker from "./lib/Tracker.svelte";
&lt;/script&gt;

&lt;!-- &lt;UsernamePrompt /&gt; --&gt;
&lt;Tracker /&gt;
</code></pre>
<p>Your screen should now look like this:</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636588960installed-app.png" alt="The new tracker component" /></p>
<p><em>Note: remember to restore <code>App.svelte</code> to its previous code!</em></p>
<h2 id="step2settingupcloudfunctions">Step 2: Setting up Cloud Functions</h2>
<p>We need to have a back-end server to send push events to our application. This means that you need to create a new (maybe) ExpressJS project, and then deploy that separately. This will all be a headache for someone just experimenting with push notifications.</p>
<p><a href="https://vercel.com/docs/concepts/functions/introduction">Vercel Cloud Functions</a> to the rescue! Cloud functions are like Express routes. They can run code and give you a response when you fetch its URL. Vercel has support for cloud functions; you just have to create files in the <code>api</code> folder. You&#8217;ll be using cloud functions to interact with MongoDB, since exposing secrets client-side is <strong>never</strong> a good thing.</p>
<p>First, make sure you have a Cluster in <a href="https://cloud.mongodb.com">MongoDB Atlas</a>. MongoDB has a free plan (<em>M0</em>), so be sure to create one if you haven&#8217;t already. Now, go to the <strong>Database Access</strong> tab in the sidebar of your Atlas dashboard. Add a new Database User by clicking the <strong>green</strong> button on the right side. Enter in the user&#8217;s details (don&#8217;t forget the password), and create the user.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636588523new-user.png" alt="Creating a new Atlas user" /></p>
<p>To connect to the database, you&#8217;ll need the connection string. Save the new user and password somewhere and head to your Cluster&#8217;s Overview. Click the <strong>Connect</strong> button on the right side and select <strong>Connect your Application</strong> as the method of connection. You should see a connection string similar to the one below.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636588547connect-cluster.png" alt="Connection string" /></p>
<p>Now that you have the connection string, you can connect to your database, but first, you need to deploy the current application to <a href="https://vercel.com">Vercel</a>. The easiest way to do this is using <a href="https://github.com">GitHub</a>.</p>
<p>Create a new <a href="https://github.com/new">GitHub repository</a> and push your code to it. Next, head to your <a href="https://vercel.com/dashboard">Vercel Dashboard</a> and click the <strong>New Project</strong> button. Import your GitHub Repository, make sure the framework is <strong>Vite</strong>, and add an environment variable called <code>MONGODB_URL</code>. Set its value to the connection string of the MongoDB database.</p>
<p>Once your website has been deployed, you need to change your local development command from <code>yarn dev</code> to <code>vercel dev</code>. Upon running the command, if you&#8217;re asked to link to an existing project, click <strong>yes</strong>.</p>
<p><em>Note: make sure to install the Vercel CLI with <code>npm i -g vercel</code> if you haven&#8217;t already.</em></p>
<p>Like me, if you run into a problem with using <code>vite</code> with <code>vercel dev</code>, be sure to change the <em>Development Command</em> of your project to <code>vite --port $PORT</code> from <code>vite</code> in the <a href="https://vercel.com/dashboard">Vercel Dashboard</a>.</p>
<p>This will allow us to use cloud functions with the correct environment variables locally.</p>
<p>Let&#8217;s add a helper file that will allow us to access MongoDB without opening up too many connections. Create file <code>api/_mongo.js</code> and put the following code in it. A file in the <code>api</code> directory that is prefixed with a <code>_</code> will <em>not</em> be treated as a cloud function. This allows us to add helpers and other logic in separate files:</p>
<pre><code class="javascript language-javascript">const { MongoClient } = require("mongodb");

const mongo = new MongoClient(process.env.MONGODB_URL);

// Export the connection promise
export default mongo.connect();
</code></pre>
<p>Exporting the connection promise instead of the main client itself will prevent us from having redundant connections, since we&#8217;re working in a serverless platform.</p>
<h3 id="usingcommonjsinsteadofesmodules">Using CommonJS instead of ESModules</h3>
<p>Notice how I am using <code>require</code> instead of <code>import</code>? This is because, as of the time of writing, Vercel Cloud Functions <em>doesn&#8217;t</em> support ESModule <code>import</code> statements in JavaScript files. Instead, you need to use CommonJS <code>require</code> statements.</p>
<p>There&#8217;s one problem here. If you see the <code>package.json</code> of our app, you&#8217;ll notice that it has a line <code>"type": "module"</code>. This means that each JavaScript file in the project is an EsModule. This is not what we want, so to mark all files in the <code>api</code> directory as CommonJS files, so we can use the <code>require</code> statement, create <code>api/package.json</code> and add this line in it:</p>
<pre><code class="javascript language-javascript">{
  "type": "commonjs"
}
</code></pre>
<p>This will now allow us to use <code>require</code> statements in the <code>api</code> directory. Install the MongoDB connection driver with this command:</p>
<pre><code class="shell language-shell"># Don't forget to CD!
cd api
npm i mongodb # or use yarn
</code></pre>
<h2 id="step3addingfunctionality">Step 3: Adding functionality</h2>
<p>The tracker, as of now, doesn&#8217;t really work, so let&#8217;s fix that.</p>
<h3 id="authentication">Authentication</h3>
<p>For authentication, we need to store the username that the user has input in the MongoDB database.</p>
<p>Create a file <code>/api/storeusername.js</code>. This will be a cloud function and will be mapped to <code>http://localhost:3000/api/storeusername</code>. Put the below code in it:</p>
<pre><code class="javascript language-javascript">const mongoPromise = require("../src/lib/mongo");
// All cloud functions must export a function that takes a req and res object.
// These objects are similar to their express counterparts.
module.exports = async (req, res) =&gt; {
  // TODO
};
</code></pre>
<p>Next, get the MongoDB client like so:</p>
<pre><code class="javascript language-javascript">module.exports = async (req, res) =&gt;
  // Wait for the client to connect
  const mongo = await mongoPromise;
}
</code></pre>
<p>Extract the <code>username</code> from the request&#8217;s body:</p>
<pre><code class="javascript language-javascript">// ...
const { username } = req.body;

// Check if the username is valid
if (typeof username !== "string" || !username.trim()) {
  res.status(400).json({ message: "Please send the username" });
  return;
}
</code></pre>
<p>Next, you need to store this username in the database:</p>
<pre><code class="javascript language-javascript">// Get the collection
const usersCol = mongo.db().collection("users");
// Check if the username already exists in the database
if (await usersCol.findOne({ _id: username })) {
  res.status(400).json({ message: "User already exists!" });
  return;
}
// We want the username to be the identifier of the user
await usersCol.insertOne({ _id: username });

// Everything went well :)
res.status(200).json({ message: "Username recorded" });
</code></pre>
<p>Finally, this is how the <code>api/storeusername.js</code> file should look:</p>
<pre><code class="javascript language-javascript">const mongoPromise = require("./_mongo");

module.exports = async (req, res) =&gt; {
  const mongo = await mongoPromise;

  const { username } = req.body;
  if (typeof username !== "string" || !username.trim()) {
    res.status(400).json({ message: "Please send the username" });
    return;
  }

  // Get the collection
  const usersCol = mongo.db().collection("users");

  // Check if the username already exists in the database
  if (await usersCol.findOne({ _id: username })) {
    res.status(400).json({ message: "User already exists!" });
    return;
  }

  // We want the username to be the identifier of the user
  await usersCol.insertOne({ _id: username });

  // Everything went well :)
  res.status(200).json({ message: "Username recorded" });
};
</code></pre>
<p>Deploy your application to Vercel with <code>vercel .</code>, or by pushing to GitHub, and your serverless function should be live! You can test it using cURL with this command:</p>
<pre><code class="shell language-shell">curl -X POST -H "Content-Type: application/json" -d '{"username": "test"}' https://your-app.vercel.app/api/storeusername
</code></pre>
<p>This should create a new document in the <code>users</code> collection with the <code>_id</code> field being the username we just gave.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636588582users-collection.png" alt="The users collection in Atlas" /></p>
<p>Now all that&#8217;s left is to fetch this function on the front end. In <code>src/lib/UsernamePrompt.svelte</code>, in the <code>submit</code> function, first you need to send a request to the cloud function, and then put the username in <code>localStorage</code>, so we know that the user is authenticated. You can send requests with the <code>fetch</code> function:</p>
<pre><code class="javascript language-javascript">async function submit() {
  const res = await fetch("/api/storeusername", {
    body: JSON.stringify({ username }),
    headers: {
      "Content-Type": "application/json",
    },
    method: "POST",
  });
  const data = await res.json();
  if (!res.ok) alert(data.message);
  else {
    // Store the username in localStorage
    localStorage.setItem("username", username);
    // Reload the page
    window.location.reload();
  }
}
</code></pre>
<p>We&#8217;re reloading the page, because in <code>App.svelte</code>, when the page is loaded, we need to check if there is a username in <code>localStorage</code>. If there is, we can skip the <code>UsernamePrompt</code> screen. To do so, add this code in the <code>script</code> tag of <code>App.svelte</code>:</p>
<pre><code class="markup language-markup">&lt;script&gt;
  import { onMount } from "svelte";
  import UsernamePrompt from "./lib/UsernamePrompt.svelte";
  import Tracker from "./lib/Tracker.svelte";

  let isLoggedIn = false;
  onMount(() =&gt; {
    // If there is a username in the localStorage, set isLoggedIn to true
    isLoggedIn = !!localStorage.getItem("username");
  });
&lt;/script&gt;
</code></pre>
<p>The above code will check the <code>localStorage</code> for a username and set <code>isLoggedIn</code> to <code>true</code> if it exists. Next, all we have to do is update the DOM. Right under the <code>script</code> tag of <code>App.svelte</code>, add this:</p>
<pre><code class="markup language-markup">{#if !isLoggedIn}
&lt;UsernamePrompt /&gt;
{:else}
&lt;Tracker /&gt;
{/if}
</code></pre>
<h3 id="trackinganduntrackingrepositories">Tracking and untracking repositories</h3>
<p>Now let&#8217;s add the functionality for the actual tracking features of the tracker. If you open <code>Tracker.svelte</code>, you&#8217;ll notice there are two functions — <code>track()</code> and <code>untrack()</code>. These functions should track and untrack repositories respectively, by adding them to the database.</p>
<p>But before that, you need to add a few more cloud functions. One to track a repository, another to untrack, and one last to get a user&#8217;s tracked repositories.</p>
<p>Let&#8217;s work on them one by one.</p>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/create-a-github-tracker-with-push-notifications-in-svelte/?utm_source=rss">Create a GitHub Tracker with Push Notifications in Svelte</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/create-a-github-tracker-with-push-notifications-in-svelte/?utm_source=rss</link><guid isPermaLink="false">/?p=208635</guid><category><![CDATA[JavaScript]]></category><dc:creator><![CDATA[Aarnav Pai]]></dc:creator><pubDate>Wed, 10 Nov 2021 15:00:15 GMT</pubDate><metaDesc>Push notifications reach more users than emails do. Learn how to build a GitHub tracker that sends push notifications of new issues and PRs.</metaDesc></item><item><title><![CDATA[A Beginner’s Guide to Routing in Next.js, with Examples]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/routing-in-next-js-beginner-guide/?utm_source=rss"
              title="A Beginner’s Guide to Routing in Next.js, with Examples"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636511340routing-in-nextjs.jpg"
        alt="A Beginner's Guide to Routing in Next.js, with Examples"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636511340routing-in-nextjs-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636511340routing-in-nextjs-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636511340routing-in-nextjs-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636511340routing-in-nextjs.jpg 1200w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong>There are many benefits of using Next.js, but one very useful feature is its file routing system. This architecture has significantly simplified the process of creating routes within a website. In this tutorial, we&rsquo;ll learn how to set up a Next.js project and how the system of file routing in Next.js works.</strong></p>
<p>We&rsquo;ll also learn how to: </p>
<ul>
<li>create static and dynamic pages</li>
<li>implement page transition with <code>Link</code>, as well as some of its props</li>
<li>use the <code>useRouter()</code> hook to obtain query param from the URL</li>
<li>nest routes dynamically</li>
</ul>
<p>… and a lot more.</p>
<p>We&rsquo;ll learn all of this by building a portfolio page.</p>
<h2 id="toc_0">Next.js Features</h2>
<p>Next.js is a React-based web framework built on top on Node.js. Since it&rsquo;s based on React, it also follows the component architectural design.</p>
<p>Next.js can be used to build <strong>static sites</strong>. These are sites with pages that get pre-rendered and served to the user at build time. In simple terms, the page is available even before the user requests it.</p>
<p>It also allows for the use of server-side rendering to generate dynamic web pages (pages that change every time a user makes a fresh request). </p>
<p>The architecture of routing in Next.js makes it very easy to create and link pages together. We can dynamically pass query parameters, and create dynamic pages without having to leave the <code>pages</code> folder.</p>
<h3 id="toc_1">Why use Next.js</h3>
<p>The Next.js framework was first released on October 25, 2016. Since then, it&rsquo;s gone on to become one of the most popular web frameworks, for a couple of reasons.</p>
<p>For one, Next.js is fundamentally React. This is great news for the huge community of developers who come from a React background. Developers can still make use of some React features like the component architecture, JSX and more.</p>
<p>Second is the ability to <strong>pre-render</strong> pages using Next. By default, Next.js generates all pages in advance, which will then be reused on every user request. Since the site is pre-generated, search engine crawlers can properly index the site for SEO.</p>
<p>As said, one very useful feature is the system of file routing in Next.js, which has significantly simplified the process of creating routes within a website. So you can basically create a bunch of <code>.js</code> files inside a single folder named <code>pages</code>, which Next.js will use for all your routes. Not only is it useful, but it&rsquo;s very powerful as well. </p>
<h3 id="toc_2">The Project</h3>
<p>The site will have two simple routes and two dynamic routes (we&rsquo;ll get to the meaning of those later). </p>
<p>The <code>Projects</code> page will render a list of projects. Upon clicking on <strong>view more</strong>, we&rsquo;ll  be directed to a single project page. </p>
<p>The <code>blog</code> page will render a list of blog posts, and we can also view a single blog page by clicking <strong>Read more</strong>. The page will contain details about a specific post. </p>
<p>To demonstrate <strong>route nesting</strong> in Next, we&rsquo;ll also create a nested <code>/comments</code> route for each blog post. For example, we can view the comments for the first post by visiting <code>localhost:3000/blog/first-post/comments</code>.</p>
<p>Here&rsquo;s the live preview for the project:<!-- https://hy56m.sse.codesandbox.io/ --></p>
<p><iframe src="https://codesandbox.io/embed/next-portfolio-forked-ww4b9?fontsize=14&#038;hidenavigation=1&#038;theme=dark"
 style="width:100%; height:500px; border:0; border-radius: 4px; overflow:hidden;"
 title="next-portfolio (forked)"
 allow="accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking"
 sandbox="allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"></iframe> </p>
<p>You can get the code from its <a href="https://github.com/sitepoint-editors/next-portfolio">GitHub repository</a><!--https://github.com/KingsleyUbah/next-portfolio-->, run it on your machine and tweak it as you wish. You can delete my images and move yours to the <code>/public</code> folder. You only need to change the filenames in the markup.  </p>
<h2 id="toc_3">Getting Started</h2>
<p>To get started with Next, you need to have Node.js installed on your computer. The version of Node should not be lower than <code>12.x</code>. You can check for the version by typing <code>node -v</code> on the command terminal. </p>
<p>If you don&rsquo;t have Node.js installed, or have an older version, you can download the latest version from <a href="https://nodejs.org/">here</a>.</p>
<p>After it&rsquo;s downloaded, we&rsquo;ll need to initialize our project. We can do this either automatically or manually. In this tutorial, we&rsquo;ll be using the <code>create-next-app</code> code generator to automatically build a working framework for us.</p>
<p>Please navigate to the folder you want the project to live in and type in the following command:</p>
<div>
<pre><code class="language-bash">cd your/path
npx create-next-app next-portfolio</code></pre>
</div>
<p>Finally, run the following command:</p>
<div>
<pre><code class="language-bash">npm run dev</code></pre>
</div>
<p>You should see the following on your terminal window, if all went well.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633695424compilesuccess.png" alt="Project all set"/></p>
<p>We can view the page on the web browser at <a href="http://localhost:3000">http://localhost:3000</a>.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633695445nexthome.png" alt="Next project now live"/></p>
<h2 id="toc_4">The File-based Architecture of Routing in Next.js</h2>
<p>When we ran that command, we created a folder named <code>next-portfolio</code> inside the current directory. Inside <code>next-portfolio</code>, you&rsquo;ll find some important folders and files.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633695473understand-next-files.png" alt="App directory structure"/></p>
<p>The folder we&rsquo;ll be working in most frequently is <code>pages</code>. In Next, every <code>.js</code> file defined inside <code>pages</code> maps to a similarly named route:</p>
<ul>
<li><code>pages/about.js</code> will map to <code>/about</code></li>
<li><code>pages/contact.js</code> will map to <code>/contact</code></li>
<li><code>pages/blog.js</code> will map to <code>/blog</code></li>
</ul>
<p>Here&rsquo;s a high-level representation of the pages folder inside a typical Next project:</p>
<div>
<pre><code class="language-javascript">my-site

└── pages

    └── api // API routes

    ├── _app.js // custom route (will **not** be used as a route)

    ├── index.js // index route (will be rendered at my-site.com)

    ├── about.js // predefined route (will be rendered at my-site.com/about)

    ├── contact.js // predefined route (will be rendered at my-site.com/contact)

    └── blog

        ├── index.js // index route for blog (will be rendered at my-site.com/blog) 

        ├── author.js // predefined route (will be rendered at my-site.com/blog/author)

        ├── [blog-id].js // handles dynamic route (will render dynamcially, based on the url parameter)

        └── [...slug].js // handles catch all route (will be rendered at all routes following my-site.com/blog)</code></pre>
</div>
<p>Each React component will be bundled as a <code>.js</code> file, containing markup and logic for each page. </p>
<h3 id="toc_5">The public folder</h3>
<p>Next.js provides a public folder where you can store static assets like images, custom scripts and fonts, and refer to them from your components/code.</p>
<p>We&rsquo;ll be using the following images in various pages on our portfolio site:</p>
<ul>
<li>A personal photo. This will be used on the home page (<code>index.js</code>).</li>
<li>Four social media icons. This will be used on the contact page (<code>contact.js</code>).</li>
</ul>
<h3 id="toc_6">Custom pages</h3>
<p>You may have noticed the page <code>_app.js</code> in your pages folder. This page is a custom page. Custom pages are <em>not</em> used as routes by Next.js, and they&rsquo;re prefixed with an underscore (<code>_</code>).</p>
<p>Next.js uses the <code>_app.js</code> to initialize the web page. This component initializes the app and passes down the <code>pageProps</code> prop, which is the data needed by all nested components in our website.</p>
<p>Being the root component, we can define a layout that we want to persist across all pages. </p>
<p>We can also use a global stylesheet that applies to all elements, like in the following example:</p>
<div>
<pre><code class="language-javascript">//next-portfolio/pages/_app.js

import Layout from &#39;../components/Layout&#39;
import &#39;../styles/globals.css&#39;

function MyApp({ Component, pageProps }) {
  return (
    &lt;Layout&gt;
      &lt;Component {...pageProps} /&gt;
    &lt;/Layout&gt;
  ); 
}

export default MyApp</code></pre>
</div>
<h3 id="toc_7">Index routes</h3>
<p>Whenever we navigate to index routes (aka home pages) such as <code>my-site.com</code>, <code>my-site.com/blog</code>, or <code>my-site.com/projects</code>, Next.js will read any files from inside that directory named <code>index.js</code>.</p>
<p>So in essence, <code>pages/index.js</code> returns the markup for the home page, which is displayed at <code>localhost:3000</code>. <code>pages/blog/index.js</code> returns the markup for the blog home page, which is at <code>localhost:3000/blog</code>.</p>
<p>In your code editor, please go to the index page and delete all of the file content. The following markup is used for testing purpose:</p>
<div>
<pre><code class="language-javascript">// next-portfolio/pages/index.js

import Image from &#39;next/image&#39;
import Link from &#39;next/link&#39;

export default function Home() {
  return (
    &lt;div className=&quot;container&quot;&gt;
      &lt;h1&gt;Hello World&lt;/h1&gt;
    &lt;/div&gt;  
    )
}</code></pre>
</div>
<p><em>Note: move into <code>next-portfolio/styles</code> in your text editor, and delete <code>Home.module.css</code>, as we won&rsquo;t be needing it at all.</em></p>
<p>Now save the file changes and open <a href="http://localhost:3000">http://localhost:3000</a>. The changes in the index file will reflect on the index route.</p>
<p><img style="box-shadow: 3px 3px 7px #ddd7d7" src="https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633695429helloworld.png" alt="Hello world"/></p>
<p>So much more will go into the <code>index.js</code> file. The top section of the home page will hold navigation links. However, it is more intuitive to build other pages before the home page, so we can link to them properly.</p>
<p>For that reason, we&rsquo;ll need to first create some of the other pages before building our home page.</p>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/routing-in-next-js-beginner-guide/?utm_source=rss">A Beginner’s Guide to Routing in Next.js, with Examples</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/routing-in-next-js-beginner-guide/?utm_source=rss</link><guid isPermaLink="false">/?p=208498</guid><category><![CDATA[JavaScript]]></category><category><![CDATA[React]]></category><dc:creator><![CDATA[Kingsley Ubah]]></dc:creator><pubDate>Tue, 09 Nov 2021 15:00:43 GMT</pubDate><metaDesc>Next.js offers many benefits, one being file routing. Learn how to set up a Next.js project and how file routing in Next.js works.</metaDesc></item><item><title><![CDATA[A Beginner’s Guide to the Parse Platform on Back4App]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/parse-platform-back4app-beginner-guide/?utm_source=rss"
              title="A Beginner’s Guide to the Parse Platform on Back4App"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636417748parse-back4app.jpg"
        alt="A Beginner's Guide to the Parse Platform on Back4App"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636417748parse-back4app-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636417748parse-back4app-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636417748parse-back4app-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636417748parse-back4app.jpg 1200w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong>These days, it seems like the future of software developers is bleak with the rise of no-code platforms. Fortunately, there&#8217;s a way to make ourselves more efficient today by leveraging our existing skills to build new apps using low-code platforms. Unlike no-code, low-code platforms are more flexible and offer greater customizable features. You can write custom code snippets and install Node.js packages to give your app more advanced features.</strong></p>
<p>In this article, I&#8217;ll present a high-level overview of <a href="https://www.back4app.com/">Back4App</a>, a <strong>Backend-as-a-Service(BaaS)</strong> platform that hosts Parse applications for developers. BaaS platforms allow developers to quickly develop and launch new back-end apps with minimum effort. They also eliminate the need to set up hosting and configuring autoscaling, which can be a time-consuming task for developers.</p>
<h2 id="whatistheparseplatform">What is the Parse Platform</h2>
<p>The <a href="https://parseplatform.org/">Parse platform</a> is a popular, open-source framework for building application back ends. It runs on Node.js and is written to work with Express.js. Simply put, it&#8217;s like an open-source version of Firebase that you can run on your machine and host on your own server.</p>
<p>The origins of the project date back to 2011, when <strong>Parse Inc</strong> was founded to provide a back-end tool for mobile developers. The startup raised $5.5 million in venture capital funding, which allowed it to grow its user base to 20,000 developers within a year.</p>
<p>The company became so successful that it was acquired two years later by Facebook for $85 million. By 2014, the platform was hosting about 500,000 mobile apps. Unfortunately, Facebook <a href="https://venturebeat.com/2016/02/03/facebook-never-wanted-to-host-your-app-the-real-reasons-it-shut-down-parse/">failed to invest</a> in the development of the platform and decided to shut down the service by January 2017. In order to assist its customers, Facebook open-sourced the Parse platform so as to allow developers to migrate their apps to their own self-hosted Parse server.</p>
<p>Since then, the open-source community has continually worked on the project and has built a website, online documentation and community forum. Today, Parse provides a number of back-end features that include:</p>
<ul>
<li>database management</li>
<li>file object storage</li>
<li>REST and GraphQL APIs</li>
<li>authentication</li>
<li>user permissions</li>
<li>live queries (real-time data)</li>
<li>push notifications</li>
<li>cloud functions</li>
<li>cloud jobs</li>
</ul>
<p>The Parse platform is mainly made up of:</p>
<ul>
<li><a href="https://github.com/parse-community/parse-server">Parse Server</a>: a headless server for building back-end apps.</li>
<li><a href="https://github.com/parse-community/parse-dashboard">Parse Dashboard</a>: a front-end user interface built with React.</li>
<li><a href="https://github.com/parse-server-modules">Parse Server Modules</a>: a collection of modules and adapters that extends Parse Server&#8217;s features. For example, you can install an adapter to leverage Firebase&#8217;s authentication service.</li>
<li><a href="https://parseplatform.org/#sdks">Client SDKs</a>: language libraries for connecting front-end apps to Parse Server. These libraries include JavaScript, Android, Objective C, Flutter, Unity and many others.</li>
</ul>
<p>Note that there are several Parse projects that I haven&#8217;t mentioned here. For example, there are Android and IOS apps that provide front-end interfaces for Parse server.</p>
<h2 id="mongovspostgresql">Mongo vs PostgreSQL</h2>
<p>Parse server currently supports Mongo and PostgreSQL databases, which are the leading databases in the NoSQL and SQL spaces respectively. Both databases are quite capable, which makes it difficult to choose which one to go with.</p>
<p>This <a href="https://www.mongodb.com/compare/mongodb-postgresql">detailed guide</a> may be of assistance. In my opinion, if you&#8217;re a beginner, MongoDB is a better choice, as it&#8217;s more flexible and has a shallower learning curve. If you&#8217;re an experienced SQL developer, you&#8217;d be more productive with PostgreSQL. Below is a quick comparison for each database.</p>
<h3 id="mongo">Mongo</h3>
<p><strong>Pros</strong>:</p>
<ul>
<li>flexible schema: best for new projects whose requirements aren&#8217;t fully known</li>
<li>horizontal scalable: can easily server millions of users</li>
<li>supports realtime data updates and reads; great for analytical applications</li>
<li>sharding: can handle massive datasets easily</li>
</ul>
<p><strong>Cons</strong>:</p>
<ul>
<li>Lacks <a href="https://database.guide/what-is-referential-integrity/">referential integrity</a></li>
</ul>
<p>Previous issues like ACID compliance and JOINS are now officially supported in the latest versions of MongoDB.</p>
<h3 id="postgresql">PostgreSQL</h3>
<p><strong>Pros</strong>:</p>
<ul>
<li>rigid schema: best for projects with known requirements and strict data integrity</li>
<li>referential integrity/foreign key constraint support: requirement for defining table relations</li>
<li>out-of-the-box support for ACID transactions</li>
<li>uses SQL, the best query language for accessing and manipulating data</li>
</ul>
<p><strong>Cons</strong>:</p>
<ul>
<li>longer learning curve</li>
<li>can only scale vertically; horizontal scaling is possible but not easy</li>
</ul>
<p>If you&#8217;re still confused about which one to use, fortunately Back4App has an answer for you.</p>
<h2 id="back4app">Back4App</h2>
<p>Back4App is a cackend-as-a-service company that hosts Parse server apps for developers at an affordable rate. It greatly simplifies the development of Parse apps. All you need to do is to <a href="https://www.back4app.com/">sign up</a> for a free tier account (no credit card) to get started with 250MB of data storage and 25k requests.</p>
<p>Paid plans offer larger resource quotas and more features such as backups, data recovery, CDN, auto scaling and high request performance. The free plan only is only recommended for learning, while the paid plans are capable of handling thousands of requests per second. See the <a href="https://www.back4app.com/compare-all-plans">full pricing page</a> for more details.</p>
<h3 id="multitenantdashboard">Multi-tenant dashboard</h3>
<p>Back4App allows you to create and manage multiple Parse apps on the same dashboard. This is a huge time saver compared to manually installing, configuring and hosting each parse server yourself. The difference is minutes vs hours.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/10/163413194801-multitenant-dashboard.png" alt="multi tenant dashboard" /></p>
<h3 id="databasebrowser">Database browser</h3>
<p>Back4App uses Mongo for the database. However, it behaves as if it&#8217;s running PostgreSQL. This is great, since you get the advantages of SQL databases while using a non-SQL one — such as referential integrity, foreign key constraints and schema validation. This implementation is done in code and runs between the database and the dashboard.</p>
<p>The database browser organizes tables (collections) as classes and data is laid out in a spreadsheet format. You can add/edit/delete/reorder columns, specify data types, and import/export data in CSV or JSON formats.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/10/163413195302-database-browser.png" alt="database browser" /></p>
<p>The spreadsheet interface allows you to create and edit rows of data easily. You can also upload binary files such as images or PDFs into columns that have the File data type. This is another huge time saver, as you don&#8217;t need to configure a file storage service to handle binary data. With Parse, it&#8217;s already built-in and configurable to support external file storage services.</p>
<h3 id="authentication">Authentication</h3>
<p>Parse provides a built-in email/password authentication service. Users and roles are stored in the database and can be viewed and created via the database browser. Users can also be created programmatically via SDK, REST or GraphQL API endpoints.</p>
<p>Here&#8217;s an example of a sign-up function implemented on the front end using the Parse JavaScript SDK:</p>
<pre><code class="javascript language-javascript">function signUp() {
  let user = new Parse.User();
  user.set("username", "alex");
  user.set("password", "abc123");
  user.set("email", "a@abcd.com");
  try {
    user.signUp(); // Everything worked and the user signed in
  } catch (error) {
    alert("Error: " + error.code + " " + error.message); // Oops.. something wrong happened
  }
}
</code></pre>
<p>Back4App allows developers to enable <a href="https://www.back4app.com/docs/platform/parse-email-verification">email verification</a> and <a href="https://www.back4app.com/docs/react/working-with-users/react-password-reset">password recovery</a> features for their Parse apps. These are essential account management features that users expect when using any secure application.</p>
<p>In addition to the default authentication method, you can enable your Parse app to authenticate using any of the following sign in methods:</p>
<ul>
<li>Apple</li>
<li>Facebook</li>
<li>GitHub</li>
<li>Google</li>
<li>Twitter</li>
<li>LinkedIn</li>
<li>and many more</li>
</ul>
<h3 id="authorization">Authorization</h3>
<p>Authorization determines if an authenticated user has access to information stored on the database. Permissions are defined with the use of <strong>Roles</strong> and <strong>Access Controls</strong>. There are two levels of access controls:</p>
<ul>
<li><strong>Class-level permissions (CLP)</strong> : this type of permission protects all the data in a class(table). You can define different read and write policies for each role using CLP.</li>
<li><strong>Object-level access control</strong>: This type of permission protects individual rows. This allows one user&#8217;s data to remain separate from another user within the same class (table). Parse also supports separating data for anonymous users using sessions.</li>
</ul>
<p>Parse uses <strong>access control lists (ACL)</strong> to protect private data from being publicly accessible. However, if the user has some data that needs to be shared publicly, a second ACL needs to be created in order to grant public access. Do note that class-level permissions will always override ACL permissions.</p>
<h3 id="blockchaindatabase">Blockchain database</h3>
<p>This is a new feature that allows storing data in a private Ethereum blockchain network. Blockchain differs from a traditional database in that, once records are inserted and verified, they can&#8217;t be updated or deleted. This has many practical implementations where trust between parties is critical in a business transaction.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/10/163413195703-blockchain-database.png" alt="blockchain database" /></p>
<p>At the time of writing, this <a href="https://www.back4app.com/docs/get-started/blockchain-data-storage">feature</a> is still in the alpha stage.</p>
<h3 id="publicdatasets">Public Datasets</h3>
<p>Often when building user interfaces, you&#8217;ll need to populate certain input elements with data such as list of countries, cities, zip codes, vehicle models, colors, and so on. Back4App solves this problem by providing the <a href="https://www.back4app.com/database">Database Hub</a>, a list of public databases that you can freely access and use for your app.</p>
<p>A dataset example of all the cities of the world is pictured below:</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/10/163413196004-public-datasets.png" alt="public datasets" /></p>
<p>There are three ways of accessing a public database:</p>
<ul>
<li>You can <strong>connect</strong> a public database to your app. Once the connection is successful, you can query the database via REST or GraphQL via your app. This method allows your app to receive any new updates to the schema and data.</li>
<li>You can <strong>clone</strong> the public database to your dashboard in a new app.</li>
<li>You can <strong>export</strong> a public database into CSV or JSON format, and then import it into your app.</li>
</ul>
<p>The last two methods allow you to modify the public datasets as you like.</p>
<h3 id="livequery">Live query</h3>
<p>When building real-time applications, you may be forced to fetch new data every one or so seconds in order to check if there&#8217;s been any new update. This technique is known as <strong>polling</strong>, and it&#8217;s problematic, because it causes high network and server usage. Imagine if your app is being used by tens of thousands of users.</p>
<p>Parse has a built-in protocol known as <a href="https://github.com/parse-community/parse-server/wiki/Parse-LiveQuery-Protocol-Specification"><strong>LiveQuery</strong></a> that allows clients to subscribe/unsubscribe to a LiveQuery server. When the relevant data is updated, the LiveQuery server pushes the new data to all clients that have subscribed to it.</p>
<p>With Back4App, <a href="https://www.back4app.com/docs/platform/parse-server-live-query-example">activating</a> the LiveQuery server is as simple as going to your App&#8217;s <strong>Server settings</strong> &gt; <strong>Server URL and Live Query</strong> and activating it.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/10/163413196305-activate-live-query.png" alt="activate live query" /></p>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/parse-platform-back4app-beginner-guide/?utm_source=rss">A Beginner’s Guide to the Parse Platform on Back4App</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/parse-platform-back4app-beginner-guide/?utm_source=rss</link><guid isPermaLink="false">/?p=208020</guid><category><![CDATA[Computing]]></category><category><![CDATA[JavaScript]]></category><category><![CDATA[Low Code]]></category><category><![CDATA[Node.js]]></category><dc:creator><![CDATA[Michael Wanyoike]]></dc:creator><pubDate>Mon, 08 Nov 2021 15:00:24 GMT</pubDate><metaDesc>No-code and low-code platforms are limited and lock you in. Learn how Parse and Back4App provide all the customization experienced devs need.</metaDesc></item><item><title><![CDATA[SitePoint Origami Rhino NFT Drop #2 – Electric Boogaloo]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/update-sitepoint-nft-drop-2/?utm_source=rss"
              title="SitePoint Origami Rhino NFT Drop #2 – Electric Boogaloo"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636440162drop-2sm.png"
        alt="SitePoint NFT drop #2"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636440162drop-2sm-300x170.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636440162drop-2sm-1024x580.png 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636440162drop-2sm-768x435.png 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636440162drop-2sm.png 1200w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p>I thought I&#8217;d post a quick update on our NFT project. Firstly, to our delight (and somewhat surprise) our first block of 10 Origami Rhinos sold out in 4 days! We learned a lot a long the way and I&#8217;ll cover that below. Announcing Origami Rhino Drop #2 Our second release took place on Monday, [&hellip;]</p>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/update-sitepoint-nft-drop-2/?utm_source=rss">SitePoint Origami Rhino NFT Drop #2 – Electric Boogaloo</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/update-sitepoint-nft-drop-2/?utm_source=rss</link><guid isPermaLink="false">/?p=208429</guid><category><![CDATA[Blockchain]]></category><category><![CDATA[Ethereum]]></category><category><![CDATA[Web]]></category><dc:creator><![CDATA[Alex Walker]]></dc:creator><pubDate>Mon, 08 Nov 2021 11:00:44 GMT</pubDate><metaDesc>After our first SitePoint NFT release sold out in 4 days, our second drop landed on OpenSea on Monday. What have we learned so far?</metaDesc></item><item><title><![CDATA[How to Create Emails that Foster Customer Loyalty]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/create-emails-that-foster-customer-loyalty/?utm_source=rss"
              title="How to Create Emails that Foster Customer Loyalty"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636330665customer-loyalty4.jpg"
        alt="How to Create Emails that Foster Customer Loyalty"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636330665customer-loyalty4-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636330665customer-loyalty4-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636330665customer-loyalty4-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636330665customer-loyalty4.jpg 1200w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong>Each day, 4 billion email users receive 300 billion emails. No wonder most people experience email fatigue, which makes it harder for marketers to build customer loyalty and increase sales via email. Although the rivalry is fierce, email is still one of the most effective marketing channels. For example, in the first half of 2021, conversions for ecommerce automated emails <a href="https://www.omnisend.com/resources/reports/email-sms-push-marketing-statistics-h1-2021/">increased to 33.19%</a>.</strong></p>
<p>To create an email worth your subscribers’ attention, make sure that it either <strong>offers quality benefits or entertains the subscribers</strong>. Sounds easy, right? In practice, you’ll probably have to fine-tune your newsletter a dozen times to make it follow these two simple rules. </p>
<p>In this article, I’m going to make your <a href="https://www.sitepoint.com/automated-email-marketing-getting-started/">email marketing journey</a> a little less bumpy by sharing practical advice and illustrating it with examples. This article will be helpful for both newbies and experienced email specialists who are looking for inspiration.</p>
<p>We&#8217;ll start by looking at the elements of an email, showing both good and bad examples.</p>
<h2 id="thesubjectline">The Subject Line</h2>
<p>Let&#8217;s start with the all-important subject line in emails. The rule of thumb here is that <strong>the first impression is the last impression</strong>.</p>
<p>I won’t be able to teach you here any spells that will hypnotize readers and make them open your newsletter. But <em>can</em> show you good strategies that are likely to improve your subject lines and increase your email open rate.</p>
<h3 id="tipsandgoodexamplesofappealingsubjectlines">Tips and good examples of appealing subject lines</h3>
<ul>
<li>
<p><strong>Keep your subject lines succinct</strong>. Remember that most mobile device users won’t see the whole subject if it’s longer than 25–30 characters. Also, a short and catchy subject line is more likely to capture users’ attention without reminding them of a teaser ad.</p>
</li>
<li>
<p><strong>Personalize your subject lines</strong>. It’s a good idea to add a subscriber’s name to the subject line or congratulate them on a happy event (be it their birthday or the first purchase on your website).</p>
</li>
<li>
<p><strong>Use your imagination to engage subscribers</strong>. I love using creative techniques in subject lines. They&#8217;re not just fun, but also effective. You can make an allusion to a popular TV series, refer to a recent event, or create suspense to intrigue your subscribers.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636325879subject-line.jpg" alt="Subject line: Want to know what's keeping me up at night?" /></p>
</li>
<li>
<p><strong>Offer benefits</strong>. If creative strategies puzzle you, don’t worry: you still can make your subject line catchy by offering something beneficial.</p>
</li>
</ul>
<h3 id="cringestrategiesyoudbetterneveruseinyouremails">Cringe strategies you’d better never use in your emails</h3>
<ul>
<li>
<p><strong>Avoid caps lock and don’t use a dozen exclamation marks in one subject line</strong>. Subjects that offer “90% LAST CHANCE SALES ONLY TODAY!!!!” not only make subscribers feel uncomfortable but are also likely to end up in the spam folder.</p>
</li>
<li>
<p><strong>Emojis aren&#8217;t a magic pill that guarantees your emails will be opened</strong>. In fact, it’s quite the opposite: in some cases, they might harm user experience by making a subject line look impersonal and annoying.</p>
</li>
<li>
<p>Yes, I know I’ve recommended personalizing your subject lines, but <strong>don’t take personalization too far</strong>. Perhaps the “don’t overdo it” rule works for all marketing strategies.</p>
</li>
</ul>
<p>Last thought: you can’t rely on a single metric (like open rate) to estimate the success of email campaigns, and the recent updates on <a href="https://emailsoldiers.com/blog/apple-mail-privacy-protection">Apple Mail Privacy Protection</a> have demonstrated this clearly.</p>
<h2 id="imagesinemails">Images in Emails</h2>
<p>The golden rule when using images in emails is <strong>keep the quality of visual information</strong>.</p>
<p>Did you know that about <a href="https://blog.hubspot.com/blog/tabid/6307/bid/33423/19-Reasons-You-Should-Include-Visual-Content-in-Your-Marketing-Data.aspx">40% of people</a> perceive visual information better than plain text? That’s why maintaining the quality of your visual email content is a must. Let’s briefly discuss the basic rules and then dive into common issues connected with images in emails.</p>
<h3 id="rulesofuserfriendlyimagesinemails">Rules of user-friendly images in emails</h3>
<ul>
<li>
<p>Keep the size of images in your emails small (not larger than 500 Kb, but preferably much lower). Otherwise, some of the users might fail to see the images because they’re loading too slowly. Use services like TinyPNG or iLoveIMG to compress your images.</p>
</li>
<li>
<p>Remember to adjust the size of your email banner to the width of the template for better user experience.</p>
</li>
<li>
<p>Consider image accessibility: make the text placed over images easy to read, and don’t forget to add alternative text (we’ll touch upon it later).</p>
</li>
</ul>
<h3 id="howtoreducethechancethatyourimagegetsblocked">How to reduce the chance that your image gets blocked</h3>
<ul>
<li>
<p>Take care of your email domain reputation, as some email clients (such as Outlook) block images sent by “suspicious” addresses.</p>
</li>
<li>
<p>I’ll repeat myself: you don&#8217;t need high-quality pictures. Always compress your images to ensure your emails won’t get trimmed or blocked.</p>
</li>
<li>
<p>Test your emails before sending them to the whole email list. You can use EmailOnAcid or Litmus to check them faster. However, some businesses may need specialists to perform tests on real devices.</p>
</li>
</ul>
<h3 id="whatifyourimagesstillgetblockedbysomeemailclients">What if your images still get blocked by some email clients?</h3>
<p>Sometimes your images may still get blocked regardless of your efforts (or they can simply fail to be displayed because of a poor connection). You need to be prepared for images not loading. Here are some tips to follow:</p>
<ul>
<li>
<p>Don’t send the whole email in one or several pictures with no text.</p>
</li>
<li>
<p>Write ALT-text (alternative text) that describes the images. It’s not only about you playing safe, but also about your email being disability-friendly.</p>
</li>
<li>
<p>Add a link to a web version of your email in case the images won’t display for some reason.</p>
</li>
</ul>
<h2 id="emailcopy">Email Copy</h2>
<p>The goal with your email content is to achieve <strong>unity of form and content</strong>. Let&#8217;s look at what that means.</p>
<h3 id="howyoushouldalignyouremailcopy">How you should align your email copy</h3>
<ul>
<li>
<p>Never justify your email copy. Although some people find justified text more pleasant to look at, justification <a href="http://tug.org/TUGboat/tb38-2/tb119veytsman-justify.pdf">decreases reading speed</a>. Also, justified text isn&#8217;t dyslexia-friendly.</p>
</li>
<li>
<p>You can right-align your contact details in the header or footer.</p>
</li>
<li>
<p>You can center the lines you want to emphasize.</p>
</li>
<li>
<p>I recommend using flush left alignment in all the other cases. Studies prove that left-aligned text is <a href="https://eric.ed.gov/?id=ED337749">easier to read and remember</a>.</p>
</li>
</ul>
<h3 id="toneofvoice">Tone of voice</h3>
<p>Your content&#8217;s tone of voice should be an integral part of your brand identity. If your style is generally light and friendly, you may confuse your subscribers by suddenly going all official. And vice versa: if you’ve chosen a formal communication style for your website, you shouldn’t switch to sending memes.</p>
<p>Note that the same style has different performances for various businesses. Sometimes you have to study your audience before you understand what communication strategy will build customer loyalty in your case.</p>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/create-emails-that-foster-customer-loyalty/?utm_source=rss">How to Create Emails that Foster Customer Loyalty</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/create-emails-that-foster-customer-loyalty/?utm_source=rss</link><guid isPermaLink="false">/?p=207793</guid><category><![CDATA[Email Marketing]]></category><category><![CDATA[Entrepreneur]]></category><category><![CDATA[Web]]></category><dc:creator><![CDATA[Anna Senkina]]></dc:creator><pubDate>Sun, 07 Nov 2021 15:00:00 GMT</pubDate><metaDesc>Email is a powerful marketing tool, but getting it right is an art. Learn practical tips for sending emails that foster customer loyalty.</metaDesc></item><item><title><![CDATA[How to Implement Memoization in React to Improve Performance]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/implement-memoization-in-react-to-improve-performance/?utm_source=rss"
              title="How to Implement Memoization in React to Improve Performance"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1635996790memoization-in-react.jpg"
        alt="How to Implement Memoization in React to Improve Performance"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1635996790memoization-in-react-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1635996790memoization-in-react-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1635996790memoization-in-react-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1635996790memoization-in-react.jpg 1200w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong>In this tutorial, we’ll learn how to implement memoization in React. Memoization improves performance by storing the results of expensive function calls and returning those cached results when they&#8217;re needed again.</strong></p>
<p>We’ll cover the following:</p>
<ul>
<li>how React renders the UI</li>
<li>why there’s a need for React memoization</li>
<li>how we can implement memoization for functional and class components</li>
<li>things to keep in mind regarding memoization</li>
</ul>
<p>This article assumes you have a basic understanding of class and functional components in React. If you&#8217;d like to brush up on those topics, check out the official React docs on <a href="https://reactjs.org/docs/components-and-props.html">components and props</a>.</p>
<h2 id="howreactrenderstheui">How React Renders the UI</h2>
<p>Before going into the details of memoization in React, let&#8217;s first have a look at how React renders the UI using a virtual DOM. </p>
<p>The regular DOM basically contains a set of nodes represented as a tree. Each node in the DOM is a representation of a UI element. Whenever there&#8217;s a state change in your application, the respective node for that UI element and all its children get updated in the DOM and then the UI is re-painted to reflect the updated changes.</p>
<p>Updating the nodes is faster with the help of efficient tree algorithms, but the re-painting is slow and can have a performance impact when that DOM has a large number of UI elements. Therefore, the virtual DOM was introduced in React. </p>
<p>This is a virtual representation of the real DOM. Now, whenever there&#8217;s any change in the application&#8217;s state, instead of directly updating the real DOM, React creates a new virtual DOM. React then compares this new virtual DOM with the previously created virtual DOM to find the differences that need to be repainted. </p>
<p>Using these differences, the virtual DOM will update the real DOM efficiently with the changes. This improves performance, because instead of simply updating the UI element and all its children, the virtual DOM will efficiently update only the necessary and minimal changes in the real DOM.</p>
<h2 id="whyweneedmemoizationinreact">Why We Need Memoization in React</h2>
<p>In the previous section, we saw how React efficiently performs DOM updates using a virtual DOM to improve performance. In this section, we&#8217;ll look at a use case that explains the need for memoization for further performance boost.</p>
<p>We&#8217;ll create a parent class that contains a button to increment a state variable called <code>count</code>. The parent component also has a call to a child component, passing a prop to it. We&#8217;ve also added <code>console.log()</code> statements in render the method of both the classes:</p>
<pre><code class="jsx language-jsx">//Parent.js
class Parent extends React.Component {
  constructor(props) {
    super(props);
    this.state = { count: 0 };
  }

  handleClick = () =&gt; {
    this.setState((prevState) =&gt; {
      return { count: prevState.count + 1 };
    });
  };

  render() {
    console.log("Parent render");
    return (
      &lt;div className="App"&gt;
        &lt;button onClick={this.handleClick}&gt;Increment&lt;/button&gt;
        &lt;h2&gt;{this.state.count}&lt;/h2&gt;
        &lt;Child name={"joe"} /&gt;
      &lt;/div&gt;
    );
  }
}

export default Parent;
</code></pre>
<p>The complete code for this example is available on <a href="https://codesandbox.io/s/adoring-flower-c7zu0">CodeSandbox</a>. <!-- https://codesandbox.io/s/nostalgic-diffie-7fetc --></p>
<p>We&#8217;ll create a <code>Child</code> class that accepts a prop passed by the parent component and displays it in the UI:</p>
<pre><code class="jsx language-jsx">//Child.js
class Child extends React.Component {
  render() {
    console.log("Child render");
    return (
      &lt;div&gt;
        &lt;h2&gt;{this.props.name}&lt;/h2&gt;
      &lt;/div&gt;
    );
  }
}

export default Child;
</code></pre>
<p>Whenever we click the button in the parent component, the count value changes. Since this is a state change, the parent component’s render method is called. </p>
<p>The props passed to the child class remain the same for every parent re-render, so the child component should not re-render. Yet, when we run the above code and keep incrementing the count, we get the following output:</p>
<pre><code class="bash language-bash">Parent render
Child render
Parent render
Child render
Parent render
Child render
</code></pre>
<p>You can increment the count for the above example yourself in the following sandbox and see the console for the output:</p>
<p><iframe src="https://codesandbox.io/embed/patient-currying-j2x3z?fontsize=14&#038;hidenavigation=1&#038;theme=dark"
 style="width:100%; height:500px; border:0; border-radius: 4px; overflow:hidden;"
 title="patient-currying-j2x3z"
 allow="accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking"
 sandbox="allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"></iframe><br />
 <!-- https://codesandbox.io/embed/nostalgic-diffie-7fetc --></p>
<p>From this output, we can see that, when the parent component re-renders, it will also re-render the child component — even when the props passed to the child component are unchanged. This will cause the child’s virtual DOM to perform a difference check with the previous virtual DOM. Since we have no difference in the child component — as the props are the same for all re-renders — the real DOM isn&#8217;t updated. </p>
<p>We do have a performance benefit where the real DOM is not updated unnecessarily, but we can see here that, even when there was no actual change in the child component, the new virtual DOM was created and a difference check was performed. For small React components, this performance is negligible, but for large components, the performance impact is significant. To avoid this re-render and virtual DOM check, we use memoization.</p>
<h3 id="memoizationinreact">Memoization in React</h3>
<p>In the context of a React app, memoization is a technique where, whenever the parent component re-renders, the child component re-renders only if there&#8217;s a change in the props. If there&#8217;s no change in the props, it won&#8217;t execute the render method and will return the cached result. Since the render method isn&#8217;t executed, there won&#8217;t be a virtual DOM creation and difference checks — thus giving us a performance boost.</p>
<p>Now, let’s see how to implement memoization in class and functional React components to avoid this unnecessary re-render.</p>
<h2 id="implementingmemoizationinaclasscomponent">Implementing Memoization in a Class Component</h2>
<p>To implement memoization in a class component, we&#8217;ll use <a href="https://reactjs.org/docs/react-api.html#reactpurecomponent">React.PureComponent</a>. <code>React.PureComponent</code> implements <a href="https://reactjs.org/docs/react-component.html#shouldcomponentupdate">shouldComponentUpdate()</a>, which does a shallow comparison on state and props and renders the React component only if there&#8217;s a change in the props or state.</p>
<p>Change the child component to the code shown below:</p>
<pre><code class="jsx language-jsx">//Child.js
class Child extends React.PureComponent { // Here we change React.Component to React.PureComponent
  render() {
    console.log("Child render");
    return (
      &lt;div&gt;
        &lt;h2&gt;{this.props.name}&lt;/h2&gt;
      &lt;/div&gt;
    );
  }
}

export default Child;
</code></pre>
<p>The complete code for this example is shown in the following sandbox:</p>
<p><iframe src="https://codesandbox.io/embed/memoization-class-component-forked-jwt2q?fontsize=14&#038;hidenavigation=1&#038;theme=dark"
 style="width:100%; height:500px; border:0; border-radius: 4px; overflow:hidden;"
 title="memoization-class-component (forked)"
 allow="accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking"
 sandbox="allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"></iframe><br />
 <!-- https://codesandbox.io/embed/memoization-class-component-1c28o --></p>
<p>The parent component remains unchanged. Now, when we increment the count in parent component, the output in the console is as follows:</p>
<pre><code class="bash language-bash">Parent render
Child render
Parent render
Parent render
</code></pre>
<p>For the first render, it calls both parent and child component’s render method.</p>
<p>For subsequent re-render on every increment, only the parent component&#8217;s <code>render</code> function is called. The child component isn&#8217;t re-rendered.</p>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/implement-memoization-in-react-to-improve-performance/?utm_source=rss">How to Implement Memoization in React to Improve Performance</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/implement-memoization-in-react-to-improve-performance/?utm_source=rss</link><guid isPermaLink="false">/?p=207779</guid><category><![CDATA[JavaScript]]></category><dc:creator><![CDATA[Nida Khan]]></dc:creator><pubDate>Wed, 03 Nov 2021 15:00:57 GMT</pubDate><metaDesc>Learn how memoization in React helps to improve the performance of your web apps by identifying and eliminating unnecessary re-renders.</metaDesc></item><item><title><![CDATA[Magento 2 Translation: How Internationalization Works]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/magento-2-translation-how-internationalization-works/?utm_source=rss"
              title="Magento 2 Translation: How Internationalization Works"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1635910977magento-translation.jpg"
        alt="Magento 2 Translation: How Internationalization Works"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1635910977magento-translation-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1635910977magento-translation-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1635910977magento-translation-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1635910977magento-translation.jpg 1200w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong>One of the most important features of creating ecommerce websites with Magento 2 is the ability to add multiple languages to your store. In this tutorial, we&#8217;ll cover the following Magento 2 translation topics:</strong></p>
<ul>
<li>what internationalization is, and why it&#8217;s important</li>
<li>how we can add more languages in Magento 2</li>
<li>how to translate CMS content, including pages</li>
<li>how to internationalize modules and themes including adding translations, changing assets and making changes to the styles of the module or theme</li>
</ul>
<p>Magento 2 is one of the most popular ecommerce platforms currently available. It offers tons of out-of-the-box features and tight security. Other than the built-in modules, with Magento 2 you can create your own modules and themes to create custom functionalities and design that fits your or your client&#8217;s needs.</p>
<p><em>This tutorial assumes you already have Magento 2 installed and working. If not, please follow the guideline from <a href="https://devdocs.magento.com/guides/v2.4/install-gde/composer.html">Magento 2&#8217;s official documentation</a>.</em></p>
<h2 id="whyinternationalization">Why Internationalization</h2>
<p>Internationalization (often abbreviated as i18n) includes both translating your website and changing the design or style of the website based on the language chosen. Depending on your project and the programming language or framework you work with, it can be done in various ways, but there are always tools to make it easier.</p>
<p>Internationalization attracts more users to your website, as adding different languages caters to users of different nationalities or different parts of the world.</p>
<p>This is especially important with ecommerce. One way to make sure your store understands its users and is able to convert them to customers is to provide more languages, making the store available globally.</p>
<h2 id="magento2websitestructure">Magento 2 Website Structure</h2>
<p>Before we get into how we can add a language in Magento 2, let&#8217;s go over how a Magento 2 website is structured first.</p>
<p>In Magento 2, you need at least one website. In that website, you can create several stores but you also need at least one. Then, inside each store you need at least one store view.</p>
<p>By default, every Magento 2 installation will have a website, a store in the website, and a store view in that store.</p>
<p>The website is only used to organize multiple stores under the same website. Think of it as a group.</p>
<p>The store is used to specify which categories are sold in the store, which ultimately means which products are sold in the store. For example, you can have one website split into two stores — one for men&#8217;s clothes and one for women&#8217;s clothes.</p>
<p>And finally, we have the store view which belongs to a store. Store views are what a user actually sees. Store views can have their own theme, pages, products, and more.</p>
<p>With this structure, you are able to separate your ecommerce website into different sections or even different websites. For example, you can have all your products in the same Magento instance, but split these products into different websites, or different stores inside the website.</p>
<p>This separation also allows you to set different settings for different websites, stores or store views in your Magento instance. You can change settings for an entire website, which will affect all of the stores in it and subsequently all store views in these stores.</p>
<p>You can also change settings for a store inside a website, which will change the settings for only this store and its store views, without affecting other stores or the main website.</p>
<p>Alternatively, you can change settings for store views, which would not affect their parent store or parent website.</p>
<h2 id="addinglanguagesinmagento2">Adding Languages in Magento 2</h2>
<p>Languages are dependent on store views. Each store view can have its own language. So, when you want to add a new language, you actually need to add a new store view having a different language.</p>
<p>The store view can have the same settings as its parent store or website. So there&#8217;s no need for extra configuration unless you need to have different settings for that language.</p>
<h2 id="addingastoreview">Adding a Store View</h2>
<p>In this section, we&#8217;ll see how to add a new store view in Magento 2 using the Admin panel, and how we can choose the language of that store view.</p>
<h3 id="addanewstoreview">Add a New Store View</h3>
<p>First, go to your Magento 2 admin portal. The URL path should start with <code>/admin_</code>. However, it will probably have a different suffix which you&#8217;ve set during installation.</p>
<p>Once you&#8217;ve gone to the admin panel and logged in, choose <em>Stores</em> from the sidebar, then <em>All Stores</em>.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633635814Screen-Shot-2021-10-07-at-10.42.28-PM.png" alt="Store in Menu" /></p>
<p>In this page, click on <em>Create Store View</em>.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633635889Screen-Shot-2021-10-05-at-4.42.03-PM.png" alt="Stores Page" /></p>
<p>You&#8217;ll then see a form to fill in. You&#8217;ll first have to choose the store this store view belongs to if you have multiple stores.</p>
<p>Then, you need to enter the name of the store. Please note that the name is what the user will see on the front end of your website when choosing between stores. So, you can name it based on the language you&#8217;re adding.</p>
<p>You also need to add the code for the new store. You can choose any code you want, but it would be helpful to set the code based on the language. For example, <code>en</code> for English.</p>
<p>Finally, you&#8217;ll need to change the Status to <em>Enabled</em> to make sure the users see the store view.</p>
<p>You can also choose the sort order. This is helpful if you&#8217;re adding a new language, but you want that language to be the default language a user sees when they go to your website. If so, you can change the sort order here by setting a number, with the lowest (meaning the highest in order) being 0.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633635954Screen-Shot-2021-10-05-at-4.53.28-PM.png" alt="Store View Form" /></p>
<p>Once you&#8217;re done, click on <em>Save Store View</em>, and your store view will be added.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633635984Screen-Shot-2021-10-05-at-4.53.43-PM.png" alt="Saved Store View" /></p>
<p>You might need to clear the cache at this point. You can do that by clicking on <em>Stores</em> in the sidebar, then <em>Cache Management</em>.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633636069Screen-Shot-2021-10-07-at-10.46.54-PM.png" alt="Cache in Menu" /></p>
<p>Then, choose <em>Select All</em> from the dropdown and click on <em>Submit</em>. This will clear the cache.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633636108Screen-Shot-2021-10-05-at-4.56.43-PM.png" alt="Clear Cache" /></p>
<p>Now, go to your website. Depending on your theme, you should see a dropdown in the header of the website allowing you to switch between store views.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633636146Screen-Shot-2021-10-05-at-4.54.18-PM.png" alt="Languages Dropdown" /></p>
<p>Please note that this will look different based on your theme. The theme in the screenshot in Magento&#8217;s Luma theme, which comes installed by default in Magento 2.</p>
<h3 id="choosealanguageforthestoreview">Choose a language for the store view</h3>
<p>Next, we&#8217;ll choose the language of the store view. To do that, on the admin panel click on <em>Stores</em> in the sidebar, then <em>Configuration</em>.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633636214Screen-Shot-2021-10-05-at-4.54.54-PM.png" alt="Configuration in Menu" /></p>
<p>Please note that on the admin portal, you&#8217;ll see a dropdown at the top left of almost every page with the label <em>Scope</em> that allows you to change the website, store, or store view. You use this when you want to change settings to a specific website, store, or store view rather than the default settings that will apply to all websites, stores, and store views.</p>
<p>So, on the Configuration page, choose the store view you just created from the dropdown. You&#8217;ll be asked to confirm your action. Click <em>OK</em> in the pop up.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633636252Screen-Shot-2021-10-05-at-4.55.49-PM.png" alt="Store Views Dropdown" /></p>
<p>Then, choose <em>General</em> tab under the <em>General</em> section in the sidebar if it&#8217;s not already chosen. Open the collapsible with the title <em>Locale Options</em>. Under the collapsible, uncheck <em>Use Website</em> on the right of the first field, which should be <em>Locale</em>, then choose from the dropdown the language you&#8217;re adding.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633636307Screen-Shot-2021-10-05-at-4.56.04-PM.png" alt="Change Locale" /></p>
<p>In this tutorial, we&#8217;re adding the Arabic language.</p>
<p>Once you&#8217;re done, click <em>Save Config</em> at the top right. This will change your website&#8217;s language. However, you&#8217;ll notice that nothing has changed when you open the store you just added. This is because we still need to add translations to the language we added, as well as change styling if necessary.</p>
<h2 id="installmagento2languagepacks">Install Magento 2 Language Packs</h2>
<p>Other than the strings and text you might add yourself in your own module, because strings in Magento 2 are common, there are free and open-source Magento 2 language packs that allow you to easily add translations to your Magento 2 website.</p>
<p>You can find language packs on <a href="https://marketplace.magento.com/extensions/content-customizations/translations-localization.html?">Magento&#8217;s Marketplace</a>, although most of them are not free.</p>
<p><a href="https://www.mageplaza.com/magento-2-extensions/language-packs.html">Mageplaza</a> offers a wide set of language packs you can install that are free and open source. They have 55 Magento 2 language packs that you can use for free.</p>
<p>In this tutorial, we&#8217;ll install their <a href="https://www.mageplaza.com/magento-2-arabic-language-pack.html">Arabic Language pack</a>. You can choose any language pack; the process is the same for any language pack regardless of the language.</p>
<p>If you choose a Magento 2 language pack from a different provider, the steps should also be the same unless your provider states different steps.</p>
<p>Open your terminal and switch to the Magento project&#8217;s root directory. In that directory, run the following command:</p>
<pre><code class="bash language-bash">composer require mageplaza/magento-2-&lt;LANGUAGE&gt;-language-pack:dev-master mageplaza/module-smtp 
</code></pre>
<p>Please note that you should replace <code>&lt;LANGUAGE&gt;</code> with the language you&#8217;re installing. In our case, it will be <code>arabic</code>. You can also find the name of the package by going to the GitHub page of the language (if you are downloading from Mageplaza) and checking the name of the repository.</p>
<p>After that&#8217;s done, you can go on your website, choose your new language if it&#8217;s not already chosen, and you&#8217;ll see that the page is translated to that language.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633636419Screen-Shot-2021-10-05-at-5.45.28-PM.png" alt="Magento 2 translation example" /></p>
<p>If the page isn&#8217;t translated, or there&#8217;s a problem with the styles of the page, then do the following.</p>
<p>Run the following command to generate the static content for the new language added:</p>
<pre><code class="bash language-bash">php bin/magento setup:static-content:deploy ar_SA
</code></pre>
<p>Make sure to replace <code>ar_SA</code> with the language you&#8217;re adding. You&#8217;ll also need to add the option <code>-f</code> if your Magento 2 instance is set to developer mode.</p>
<p>After that, execute the following commands to trigger reindexing and clear the cache:</p>
<pre><code class="bash language-bash">php bin/magento indexer:reindex
php bin/magento cache:clean
php bin/magento cache:flush
</code></pre>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/magento-2-translation-how-internationalization-works/?utm_source=rss">Magento 2 Translation: How Internationalization Works</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/magento-2-translation-how-internationalization-works/?utm_source=rss</link><guid isPermaLink="false">/?p=207699</guid><category><![CDATA[Web]]></category><dc:creator><![CDATA[Shahed Nasser]]></dc:creator><pubDate>Tue, 02 Nov 2021 15:00:52 GMT</pubDate><metaDesc>Magento 2 translation is important for reaching a global audience. Learn the steps involved in adding languages to your online store.</metaDesc></item><item><title><![CDATA[Create Your Own Brag Document with Zapier and Google Sheets]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/create-your-own-brag-document-with-zapier-and-google-sheets/?utm_source=rss"
              title="Create Your Own Brag Document with Zapier and Google Sheets"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1635817369brag-document.jpg"
        alt="Create Your Own Brag Document with Zapier and Google Sheets"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/11/1635817369brag-document-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1635817369brag-document-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1635817369brag-document-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1635817369brag-document.jpg 1200w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong>In this article, we’ll set up a method where you can receive a daily email with questions for you to answer. These questions can be un ique to yourself or be set up with inspiration from a brag document and a daily review. These will help you remember the things that you’ve done throughout the day and to analyze how you’ve felt and what occurred to make you feel that way.</strong></p>
<h2 id="whatisabragdocument">What is a Brag Document?</h2>
<p>Our brain is not the best tool for remembering things unless you’re blessed with a photographic memory. You can find yourself not remembering things you’ve done in the last week or month.</p>
<p>A brag document is the ace up your sleeve when it comes to sitting in front of your manager for a review. Most of us work roughly about 2000 hours a year. How much of what you do, do you think your manager is aware of?</p>
<p>There could be things you’re working on that are making big changes in the business, but they never get brought up with your manager. It’s these little things that get skipped over and not considered when it comes to review time.</p>
<p>This is where a brag document comes in. To save you from having to use your not-so-good memory, why not receive an email every day that asks you what you’ve completed. This information is then stored in a Google sheet so you have complete records, from the smallest to the largest things you&#8217;ve managed to achieve at work.</p>
<p>Then, when it comes down to your yearly review, you can easily show all the things you&#8217;ve achieved, which can give you the leverage you need to get that well-deserved pay rise. 😃</p>
<h2 id="whatisselfreviewing">What Is Self Reviewing?</h2>
<p>You’re looking to upgrade your car. You’ve had a motor for many years but it’s on its last legs, spurting black smoke and making clunking noises when you drive.</p>
<p>You&#8217;ve spent some time doing research to make sure you&#8217;re buying the right car. After a long debate, you settle on a BMW. And as if out of nowhere, you see the same make and model everywhere, even though weeks ago <em>none</em> of them were on the road.</p>
<p>This is called the <strong>Baader-Meinhof Phenomenon</strong>. It’s when something has been brought to your awareness and it appears to be everywhere. This is the effect that we’ll be trying to take advantage of with your self reviewing.</p>
<p>If you ask yourself “What bad habit did I partake in today?”, it’ll make you think about anything you consider a bad habit, like eating a whole pack of cookies or doom-scrolling on social media. </p>
<p>If we now do this for over a week, the Baader-Meinhof Phenomenon starts to occur. You now become more conscious about these behaviors. Rather than this behavior happening without thinking, you’ll be able to spot when it happens because you’ve been writing about it every day. And then you can make an effort to stop that behavior.</p>
<p>Self reviewing can also help you to analyze how your day went. Again, we have some questions that prompt us, such as “What did I enjoy doing?” or “What sucked the energy out of me?”</p>
<p>These are questions that can help you spot patterns and then take action. If you find that you enjoy writing, then you can plan to do more. If you find that talking to a certain someone at work drains all your energy, you can try to speak to them as little as possible, or pick times of the day when you have enough energy to deal with them.</p>
<p>With very little effort each day, you can start to collect important information, from the awesome work  you&#8217;ve been doing, to the habits that are invisible to you, and then make plans each week to improve your life.</p>
<h2 id="howtosetupyourdailyemails">How to Set Up Your Daily Emails</h2>
<p>There are three things that we need to be able to set up daily emails:</p>
<ul>
<li>a Zapier account</li>
<li>a Google Drive account</li>
<li>a set of questions</li>
</ul>
<p>The Zapier account will handle the automation: the sending of the questions, and the parsing of the data from the email.</p>
<p>The Google Drive account is for setting up the Google Sheets where the data from email will be stored for reviewing our answers.</p>
<p>The set of questions will be the information we want to gather.</p>
<p>Before we begin, we need to set up an account on <a href="https://zapier.com/">Zapier</a> and make sure that we have a <a href="https://drive.google.com/drive/my-drive">Google Drive</a> account.</p>
<p>Once we&#8217;ve done that, we can get started. </p>
<h2 id="sendingdailyemails">Sending Daily Emails</h2>
<p>To get things started, we need to send ourselves an email so we have a prompt to answer the questions.</p>
<p>To do that, we need to set up a zap in Zapier.</p>
<p>From the Zapier home page, click on the menu navigation and select Zaps.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/10/163410582901.png" alt="Zaps" /></p>
<p>Click on <strong>Make A New Zap</strong>.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/10/163410583402.png" alt="making a new zap" /></p>
<p>The Zap we’re setting up is to send daily emails. We&#8217;ll set up another Zap to parse the data into the Google Sheets.</p>
<p>At the top of the screen, we can name our zap. Let’s name it <strong>Sending daily emails</strong>.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/10/163410584103.png" alt="Sending daily emails" /></p>
<p>First, we select a trigger. Search for <strong>Schedule by Zapier</strong>.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/10/163410584604.png" alt="setting a schedule" /></p>
<p>We then need to select the frequency of the trigger. We could make this daily, weekly, or monthly. On this occasion, we&#8217;re selecting daily.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/10/163410585105.png" alt="daily" /></p>
<p>Next, we can choose if we want the email to be sent at the weekends and what time of the day we want to receive the email.</p>
<p>If we&#8217;re setting this up with our work email, it may be worth turning it off for weekends if we don’t work then. It’s best if we set the time for the end of the day, so all the events of the day are over and we have enough time to answer the questions. Setting it an hour before we leave is a good option.<br />
It will ask us to test the trigger. Once done, continue.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/10/163410585506.png" alt="setting up the trigger" /></p>
<p>The action we want to happen with the above trigger is to send the email with our questions. We can do this by selecting <strong>Email by Zapier</strong>. </p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/10/163410586007.png" alt="action" /></p>
<p>Once selected, we want to choose the action type as outbound email.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/10/163410586408.png" alt="outbound" /></p>
<p>Next, we enter the email address we want to receive the questions at, the subject line, and the body of the email (which will be our questions). We&#8217;ll also need to enter an email address in the “Reply-To” field, but we&#8217;ll do that later. </p>
<p>Make sure that you leave space between each question so your answers can get parsed. You want three line breaks worth of space. At this point, we want a copy of the body of the email, so paste it to a Word doc or text note, as we&#8217;ll be using that later. The rest of the fields we can leave blank.</p>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/create-your-own-brag-document-with-zapier-and-google-sheets/?utm_source=rss">Create Your Own Brag Document with Zapier and Google Sheets</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/create-your-own-brag-document-with-zapier-and-google-sheets/?utm_source=rss</link><guid isPermaLink="false">/?p=207676</guid><category><![CDATA[Computing]]></category><category><![CDATA[Low Code]]></category><dc:creator><![CDATA[Craig Dennis]]></dc:creator><pubDate>Mon, 01 Nov 2021 15:00:17 GMT</pubDate><metaDesc>Learn how to use Google Drive and Zapier to create a brag document that tracks your work and helps to optimize your workflow and working life.</metaDesc></item><item><title><![CDATA[An Introduction to PostCSS]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/an-introduction-to-postcss/?utm_source=rss"
              title="An Introduction to PostCSS"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2016/02/1635738723postcss1.jpg"
        alt="An Introduction to PostCSS"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2016/02/1635738723postcss1-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2016/02/1635738723postcss1-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2016/02/1635738723postcss1-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2016/02/1635738723postcss1.jpg 1200w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong>CSS preprocessors are popular, but they have some drawbacks. In this introduction to PostCSS, we&#8217;ll explore the advantages of PostCSS, how it works, and what its extensive range of plugins can achieve.</strong></p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2016/02/1635738723postcss1.jpg" alt="Processing CSS with PostCSS" /></p>
<h2 id="thevalueandlimitationsofpreprocessors">The Value and Limitations of Preprocessors</h2>
<p>Most CSS developers are familiar with preprocessors. Tools including Sass, Less, and Stylus introduced concepts such as file partials, nesting, variables, and mixins. Some features are gradually appearing in native CSS, but a preprocessor is still useful for managing large codebases and maintaining style and coding consistency.</p>
<p>It may be difficult to imagine life without a CSS preprocessor, but there are downsides:</p>
<ul>
<li>
<p><strong>Preprocessors are not extendable or limitable</strong>. Most preprocessors are a black box which provide you a specific set of supported features. It may be possible to write custom functions, but functionality beyond the scope of that tool is remains impossible — such as inlining an SVG as a background image.</p>
<p>Similarly, you can&#8217;t stop developers using options you&#8217;d rather avoid such as <code>@extend</code> or deep nesting. Linting can help, but it won&#8217;t stop the preprocessor compiling a valid file.</p>
</li>
<li>
<p><strong>Preprocessors provide their own syntax</strong>. Preprocessor code may resemble CSS, but no browser can parse the file natively. The syntax is different and, if your tool changes or is unavailable, your code will require updates to make it usable.</p>
</li>
</ul>
<p>The benefits more than outweigh these risks, but there is an alternative &hellip;</p>
<h2 id="whatispostcss">What is PostCSS?</h2>
<p>PostCSS is <a href="https://github.com/postcss/postcss">not a preprocessor</a> (although it can behave like one). It&#8217;s a Node.js tool which takes valid CSS and enhances it. Even those using Sass, Less, or Stylus often run a PostCSS step after the initial CSS compilation. You may have encountered the PostCSS <a href="https://github.com/postcss/autoprefixer">Autoprefixer plugin</a> which automatically prepends <code>-webkit</code>, <code>-moz</code>, and <code>-ms</code> vendor prefixes to CSS properties which require them.</p>
<p>On its own, PostCSS does nothing. It&#8217;s a parser which tokenizes CSS code to create an abstract syntax tree. A plugin can process this tree and update properties accordingly. Once all plugins have completed their work, PostCSS reformats everything back into a string and outputs to a CSS file.</p>
<p>Around <a href="https://github.com/postcss/postcss/blob/main/docs/plugins.md">350 plugins are available</a>, and most perform a single task such as <a href="https://github.com/postcss/postcss-import">inlining <code>@import</code> declarations</a>, <a href="https://github.com/postcss/postcss-calc">simplifying <code>calc()</code> functions</a>, <a href="https://github.com/borodean/postcss-assets">handling image assets</a>, <a href="https://github.com/stylelint/stylelint">syntax linting</a>, <a href="https://cssnano.co/">minifying</a>, and more. A more user friendly plugin search is available at the PostCSS <a href="https://www.postcss.parts/">plugins catalogue</a>.</p>
<p>PostCSS benefits include:</p>
<ul>
<li>
<p><strong>You start with standard CSS</strong>. PostCSS is to CSS what <a href="http://babeljs.io/">Babel</a> is to JavaScript. It can take a standard stylesheet which works in recent browsers and output CSS which works everywhere — for example, transpiling the newer <a href="https://developer.mozilla.org/docs/Web/CSS/inset"><code>inset</code> property</a> back into <code>top</code>, <code>bottom</code>, <code>left</code>, and <code>right</code> properties. Over time, you could drop this process as more browsers support <code>inset</code>.</p>
<p>Admittedly, some plugins allow you to parse preprocessor-like syntax which isn&#8217;t standard CSS, but you don&#8217;t have to use them.</p>
</li>
<li>
<p><strong>Use the plugins and features you need</strong>. PostCSS is configurable, and you can adopt the plugins you require. For example, you could support <a href="https://github.com/postcss/postcss-import">partials</a> and <a href="https://github.com/postcss/postcss-nested">nesting</a> but not permit variables, loops, mixins, maps, and other features available in Sass.</p>
</li>
<li>
<p><strong>Provide a custom configuration for every project</strong>. A individual project configuration can enhance or reduce the set of plugins used elsewhere. The options are far more varied than any preprocessor.</p>
</li>
<li>
<p><strong>Write your own PostCSS plugins</strong>. A wide range of plugins is available for extending syntax, parsing future properties, adding fallbacks, optimizing code, processing colors, images, fonts, and even writing CSS in other languages such as <a href="https://github.com/ismamz/postcss-spanish-stylesheets">Spanish</a> and <a href="https://github.com/Semigradsky/postcss-russian-stylesheets">Russian</a>.</p>
<p>In the unlikely event you can&#8217;t find what you need, you can <a href="https://github.com/postcss/postcss/blob/main/docs/writing-a-plugin.md">write your own</a> PostCSS plugin in JavaScript.</p>
</li>
<li>
<p><strong>You&#8217;re possibly using PostCSS already</strong>. You may be able to remove your preprocessor dependencies if you&#8217;re already running a PostCSS plugin such as AutoPrefixer. PostCSS is not necessarily faster or more lightweight than using a preprocessor, but it can handle all CSS processing in a single step.</p>
</li>
</ul>
<h2 id="installingpostcss">Installing PostCSS</h2>
<p>PostCSS requires <a href="https://nodejs.org/">Node.js</a>, but this tutorial demonstrates how to install and run PostCSS from any folder — even those that aren&#8217;t Node.js projects. You can also use PostCSS from <a href="https://github.com/postcss/postcss#usage">webpack, Parcel, Gulp.js, and other tools</a>, but we&#8217;ll stick to the command line.</p>
<p>Install PostCSS globally on your system by running the following:</p>
<pre><code class="bash language-bash">npm install -g postcss-cli
</code></pre>
<p>Ensure it&#8217;s working by entering this:</p>
<pre><code class="bash language-bash">postcss --help
</code></pre>
<h2 id="installingyourfirstpostcssplugin">Installing Your First PostCSS Plugin</h2>
<p>You&#8217;ll require at least one plugin to do anything practical. The PostCSS <a href="https://github.com/postcss/postcss-import">import</a> plugin is a good option which inlines all <code>@import</code> declarations and merges your CSS into a single file. Install it globally like so:</p>
<pre><code class="bash language-bash">npm install -g postcss-import
</code></pre>
<p>To test this plugin, open or create a new project folder such as <code>cssproject</code>, then create a <code>src</code> subfolder for your source files. Create a <code>main.css</code> file to load all partials:</p>
<pre><code class="css language-css">/* src/main.css */
@import '_reset';
@import '_elements';
</code></pre>
<p>Then create a <code>_reset.css</code> file in the same folder:</p>
<pre><code class="css language-css">/* src/reset.css */
* {
  padding: 0;
  margin: 0;
}
</code></pre>
<p>Follow this with an <code>_elements.css</code> file:</p>
<pre><code class="css language-css">/* src/elements.css */
body {
  font-family: sans-serif;
}

label {
  user-select: none;
}
</code></pre>
<p>Run PostCSS from the project&#8217;s root folder by passing the input CSS file, a list of plugins to <code>--use</code>, and an <code>--output</code> filename:</p>
<pre><code class="bash language-bash">postcss ./src/main.css --use postcss-import --output ./styles.css
</code></pre>
<p>If you don&#8217;t have any errors, the following code will be output to a new <code>styles.css</code> file in the project root:</p>
<pre><code class="css language-css">/* src/main.css */
/* src/reset.css */
* {
  padding: 0;
  margin: 0;
}
/* src/elements.css */
body {
  font-family: sans-serif;
}
label {
  user-select: none;
}
/* sourceMappingURL=data:application/json;base64,...
</code></pre>
<p><em>Note that PostCSS can output CSS files anywhere, but the output folder must exist; it will not create the folder structure for you.</em></p>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/an-introduction-to-postcss/?utm_source=rss">An Introduction to PostCSS</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/an-introduction-to-postcss/?utm_source=rss</link><guid isPermaLink="false">http://www.sitepoint.com/?p=124370</guid><category><![CDATA[CSS]]></category><category><![CDATA[HTML & CSS]]></category><dc:creator><![CDATA[Craig Buckler]]></dc:creator><pubDate>Sun, 31 Oct 2021 15:00:49 GMT</pubDate><metaDesc>CSS preprocessors are popular, but they have some drawbacks. Learn the advantages of PostCSS and what its extensive range of plugins can do.</metaDesc></item><item><title><![CDATA[Add a Contact Form to a React App with Netlify Forms]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/react-app-contact-form-netlify-forms/?utm_source=rss"
              title="Add a Contact Form to a React App with Netlify Forms"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2021/10/1635315601react-form-netlify.jpg"
        alt="Add a Contact Form to a React App with Netlify Forms"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/10/1635315601react-form-netlify-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1635315601react-form-netlify-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1635315601react-form-netlify-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1635315601react-form-netlify.jpg 1200w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong>In this tutorial, you&#8217;ll learn how to add a contact form to a React application with Netlify Forms.</strong></p>
<p>Adding a contact form to a React application might require writing server-side code to handle form submissions, but with Netlify Forms you can take a break from the logic, because it does all that behind-the-scenes work for you when your site is deployed on <a href="https://www.netlify.com/products/forms/">Netlify</a>.</p>
<h2 id="prerequisites">Prerequisites</h2>
<p>To follow along with this tutorial, you should be familiar with React, Git and GitHub. You should also have a Netlify account and have Node installed on your machine. If you need any help getting set up, you can consult our guide on how to <a href="https://www.sitepoint.com/quick-tip-multiple-versions-node-nvm/">install Node using nvm</a>.</p>
<h2 id="whatyoulllearn">What You&#8217;ll Learn</h2>
<p>By the end of this tutorial, you&#8217;ll know how to do the following:</p>
<ul>
<li>deploy a React app to Netlify</li>
<li>integrate Netlify Forms with a stateless form component (a form component that doesn&#8217;t use the state)</li>
<li>integrate Netlify Forms with a stateful form component (a form component that uses the state to handle its data)</li>
</ul>
<p>The completed guide to this tutorial is available on <a href="https://github.com/sitepoint-editors/NetlifyForms">GitHub</a>. </p>
<h2 id="introductiontonetlifyforms">Introduction to Netlify Forms</h2>
<p>Netlify Forms is a feature of Netlify for managing and handling form submissions without having to write any server-side code. By adding a simple attribute to your HTML form tag, you can get up and running with Netlify Forms. Forms can also be submitted asynchronously with JavaScript, making it a great companion to sites powered by Vue, React, and other modern frameworks.</p>
<h2 id="netlifyformspricing">Netlify Forms Pricing</h2>
<p>Netlify Forms is free to get started with, but there&#8217;s a limit of 100 form submissions per website per month on the free plan, and also some features like background functions and role-based access control are excluded while using the free tier.</p>
<p>To exceed the form submission limit or make the excluded features available, you&#8217;ll have to upgrade to a different plan. You can do that on the <a href="https://www.netlify.com/pricing/">Netlify pricing page</a>.</p>
<h2 id="creatingaformfornetlifyforms">Creating a Form for Netlify Forms</h2>
<p>Netlify Forms can be integrated with both a stateless form (a form that doesn&#8217;t use the state to handle its data) and stateful one (a form that uses the state to handle its data). In this tutorial, we&#8217;ll firstly create a stateless form to demonstrate how we can integrate Netlify Forms with it. But later on, we&#8217;ll refactor the stateless form into a stateful one, in which we&#8217;ll also integrate with Neltify Forms.</p>
<p>Let’s start by creating and setting up a new React app.</p>
<h3 id="createandsetupreact">Create and set up React</h3>
<p>Type the following command in your terminal to create a new React app:</p>
<pre><code class="bash language-bash">$ npx create-react-app netlify_forms_app
</code></pre>
<p>Here our app’s name is <code>netlify_forms_app</code>, but you can give it any name you wish as long as it’s not a restricted npm name. After the installation is complete, change into the newly created directory, then start the app with the <code>npm start</code> command in your terminal.</p>
<p>Let&#8217;s clean up (optional) our app a little bit. In the <code>src</code> directory of the app, delete the following files:</p>
<ul>
<li><code>App.test.js</code></li>
<li><code>logo.svg</code></li>
<li><code>setupTests.js</code></li>
</ul>
<p>We deleted these files because they aren&#8217;t relevant to us in our build. We can also delete the <code>reportWebVitals</code> file. Doing that requires that we also remove the import statement and the function call of <code>reportWebVitals</code> from the <code>index.js</code> file for our React app to compile successfully. Again, this is all optional, so you can just skip this if you prefer.</p>
<p>Now, clean up the <code>App.js</code> file so that it looks like this:</p>
<pre><code class="javascript language-javascript">// src/App.js
import './App.css';

function App() {
  return (

  );
}

export default App;
</code></pre>
<h3 id="creatingacontactformcomponent">Creating a contact form component</h3>
<p>In the <code>src</code> directory of our React app, create a <code>Form.js</code> file and add the following lines of code to it:</p>
<pre><code class="javascript language-javascript">// src/Form.js
import './form.css'

export default function Form() {
  return (
    &lt;form 
      method='POST' 
      name='contactform' 
      className='contactForm'&gt;

      &lt;input 
        type='text' 
        name='name' 
        placeholder='Enter your name' /&gt;

      &lt;input 
        type='email' 
        name='email' 
        placeholder='Enter your email' /&gt;

      &lt;textarea 
        name='message' 
        placeholder='Messaage'&gt;&lt;/textarea&gt;

      &lt;button type='submit'&gt;Submit&lt;/button&gt;

    &lt;/form&gt;
  )
}
</code></pre>
<p>Here, we have a stateless React form. Now, go to the <code>App.js</code> file in the <code>src</code> directory and render the form. The <code>App.js</code> file should look like this:</p>
<pre><code class="javascript language-javascript">import './App.css';
import Form from './Form'

function App() {
  return (
    &lt;Form /&gt;
  );
}
export default App;
</code></pre>
<h3 id="stylingtheformcomponentwithplaincss">Styling the form component with plain CSS</h3>
<p>In the <code>src</code> directory, create a <code>form.css</code> file and add the following style:</p>
<pre><code class="css language-css">// src/form.css
.contactForm{
  padding: 10px;
  width: 90%;
  max-width: 400px;
  margin: 30px auto;
  border-radius: 10px;
  display: flex;
  flex-direction: column;
  gap: 20px;
}
.contactForm input, button, textarea{
  height: 50px;
  padding-left: 5px;
  font-size: 18px;
}
.contactForm textarea{
  height: 100px;
}
</code></pre>
<p>There&#8217;s no need to write any fancy CSS, but you can add some tweaks if you wish. With the styles we&#8217;ve added, our HTML form now looks like the image below.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632746546rRZ1v5gF.png" alt="A simple contact form made with React" /></p>
<p>To see the result, you&#8217;ll need to change into the <code>netlify_forms_app</code> folder and start the server:</p>
<pre><code class="bash language-bash">cd netlify_forms_app
npm start
</code></pre>
<p>A browser will open up and you can view the result at <a href="http://localhost:3000">http://localhost:3000</a>.</p>
<h2 id="formhandlingwithastatelessreactcontactform">Form Handling with a Stateless React Contact Form</h2>
<p>A perfect example of a stateless React form is the one we created earlier. In this form, our input values aren&#8217;t controlled by the state. In this section, we&#8217;ll learn how to add a contact form to a stateless React app with Netlify Forms.</p>
<h3 id="addingastatichtmlversionoftheform">Adding a static HTML version of the form</h3>
<p>The first step to enabling our form to work with Netlify Forms is to add a static HTML version of our form to the <code>index.html</code> file in the <code>public</code> directory of our React app. Why do we need to add this form? Adding this HTML form will help Netlify detect our JSX form, since the post-process bots can only parse HTML.</p>
<p>For this example, we’ll add this HTML form right after the opening the <code>&lt;body&gt;</code> tag in our <code>index.html</code> file:</p>
<pre><code class="markup language-markup">&lt;!-- public/index.html --&gt;
&lt;form name='contactForm' netlify hidden&gt;
  &lt;input type='text' name='name' /&gt;
  &lt;input type='email' name='email' /&gt;
  &lt;textarea name='message'&gt;&lt;/textarea&gt;
&lt;/form&gt;
</code></pre>
<p>There are two attributes to note in this form: <code>name</code> and <code>netlify</code>. The <code>name</code> attribute will enable Netlify to connect with our JSX form, while the <code>netlify</code> attribute will enable Nelify’s bot to be able to parse our form. We also used the <code>hidden</code> attribute to hide the form from our users. There&#8217;s no need to add labels or a submit button to this form, since it&#8217;s hidden from our site.</p>
<h3 id="addahiddeninputelementtothejsxform">Add a hidden input element to the JSX form</h3>
<p>In the <code>Form.js</code> file in the <code>src</code> directory, add a hidden input element with the <code>name</code> attribute set to <code>form-name</code> and the <code>value</code> attribute equal to the name of the HTML version of our form. These attributes are required to make our form work with Netlify Forms:</p>
<pre><code class="javascript language-javascript">// src/Form.js
&lt;input 
  type='hidden' 
  name='form-name'
  value='contactForm' /&gt;
</code></pre>
<p>The final version of our form now looks like this:</p>
<pre><code class="javascript language-javascript">// src/Form.js
&lt;form 
  method='POST' 
  name='contactform' 
  className='contactForm'&gt;

  &lt;input 
    type='hidden'
    name='form-name'
    value='contactForm' /&gt;

  &lt;input 
    type='text' 
    name='name' 
    placeholder='Enter your name' /&gt;

  &lt;input 
    type='email' 
    name='email' 
    placeholder='Enter your email' /&gt;

  &lt;textarea 
    name='message' 
    placeholder='Messaage'&gt;&lt;/textarea&gt;

  &lt;button type='submit'&gt;Submit&lt;/button&gt;
&lt;/form&gt;
</code></pre>
<p>There&#8217;s one more step required for this form to start working: deploying our React app to Netlify. We&#8217;ll cover this in the next section.</p>
<h2 id="deployingtonetlify">Deploying to Netlify</h2>
<p>We can deploy our site to Netlify using a version control system like <a href="http://github.com/">GitHub</a>, or we can use the drag-and-drop method, which requires us to transfer the <code>build</code> file created from running the <code>npm run build</code> command to Netlify <a href="https://app.netlify.com/drop">drag and drop page</a>. Both methods of deployment will be covered in the following sections, but for this tutorial, we&#8217;re going to use GitHub for deployment.</p>
<h3 id="deploywithgithub">Deploy with GitHub</h3>
<p>Deploying our React app from GitHub will set us up for continuous deployment, meaning changes made to our repository will automatically trigger re-deployment of our site, which is an advantage over using the drag-and-drop method.</p>
<p>To be able to deploy from GitHub, we have to first make our React app available on it. Go over to GitHub and <a href="https://github.com/new">create a new repository</a>.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633593071CxggM-bL.png" alt="Create a new repository page on GitHub" /></p>
<p>For this tutorial, we&#8217;ll name the repository “NelifyForms”. Now at the bottom of the page, click the <strong>Create Repository</strong> button and we&#8217;ll be redirected to the newly created repository page.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633593091WIOFuF-L.png" alt="Created new repository" /></p>
<p>Right now, this repository is empty. That’s because we haven&#8217;t pushed our React app to it. To do that, enter the following commands in the terminal:</p>
<pre><code class="bash language-bash">$ git add *
$ git commit -m 'netlify forms with stateless form'
$ git remote add origin &lt;Your_repoistory's_url&gt;
$ git push -u origin master
</code></pre>
<p>These commands will create a new commit, connect us to our GitHub repository, and finally push our React app over to it. </p>
<p>Make sure to replace <strong><Your_repository’s_url></strong> with the URL of the newly created GitHub repository. Here&#8217;s an image that shows where to find the URL of the newly created repository.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633593085pvH5dTWJ.png" alt="Repositories URL" /></p>
<p>After running the above <code>git</code> commands, refresh the browser. You&#8217;ll find that our React app has been pushed to GitHub.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633593083h0Xkn0q.png" alt="NetlifyForms repository" /></p>
<p>Now that our React app is available on GitHub, it&#8217;s time that we deployed it on Netlify. <a href="https://app.netlify.com/">Log in</a> to your Netlify account, go over to the dashboard, and click on the <strong>New site from Git</strong> button. We&#8217;ll be taken to the <a href="https://app.netlify.com/start">Create a new site</a> page.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633593056B9AGtwdg.png" alt="Create a new site page" /></p>
<p>Click on the <strong>GitHub</strong> button under the <strong>Continuous Deployment</strong> section. We&#8217;re then redirected to an authorization page where Netlify will ask for access to GitHub. After giving Netlify access, we&#8217;ll see a page like the one shown below.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633593052Aj-6heBR.png" alt="Create a new site page" /></p>
<p>Right now, the <strong>NetlifyForms</strong> repository we created earlier is not displaying among the list of repositories, because we haven&#8217;t configured Netlify to access it yet.</p>
<p>To do that, click on the <strong>Configure the Netlify app on GitHub</strong> link at the bottom of the page. We&#8217;ll see a page like the one shown below.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633593094WRQnfJ4u.png" alt="Configuration page for Netlify on GitHub" /></p>
<p>Scroll to the bottom of the page under the <strong>Repositories access</strong> section and click on the <strong>Select repositories</strong> button. We&#8217;ll see a list of our GitHub repositories.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633593088r2fCb5BE.png" alt="Configuration page for Netlify on GitHub" /></p>
<p>Select the <strong>NelifyForms</strong> repository and then click on <strong>save</strong> to give Netlify access to this repository. After saving it, we&#8217;ll be redirected to the Create a new site page on Netlify.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633593076EfXnE8jG-1.png" alt="Create a new site page on Nelify" /></p>
<p>Our <strong>NetlifyForms</strong> repository is now displayed in the list. Click on it and we&#8217;ll see a page like this.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/10/16335930484hVcCRR6.png" alt="Site build and deployment page" /></p>
<p>On this page, we can set the build and deployment options for our site, like changing the Git branch to deploy from, or the command to be used to deploy our site. But there will be no need for that, because everything looks good by default.</p>
<p>Finally, to deploy our site to Netlify, scroll to the bottom of the page and click on the <strong>Deploy site</strong> button. The deployment might take a while, but once it’s done we&#8217;ll see a link to our site at the top right corner of the site dashboard page.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633598323LEoAvLp.png" alt="Sites URL" /></p>
<p>With this, our React app has been successfully deployed to Netlify from GitHub. When we click on the link, we&#8217;ll see the React form we built. </p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632746546rRZ1v5gF.png" alt="React form" /></p>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/react-app-contact-form-netlify-forms/?utm_source=rss">Add a Contact Form to a React App with Netlify Forms</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/react-app-contact-form-netlify-forms/?utm_source=rss</link><guid isPermaLink="false">/?p=207591</guid><category><![CDATA[JavaScript]]></category><dc:creator><![CDATA[Taminoturoko Briggs]]></dc:creator><pubDate>Wed, 27 Oct 2021 23:00:22 GMT</pubDate><metaDesc>With Netlify Forms, you can set up a contact form in React without writing your own server-side code to handle form submissions.</metaDesc></item><item><title><![CDATA[A Step-by-Step TypeScript Tutorial for Beginners]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/typescript-tutorial-for-beginners/?utm_source=rss"
              title="A Step-by-Step TypeScript Tutorial for Beginners"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2021/10/1635316165typescript-tutorial.jpg"
        alt="A Step by Step TypeScript Tutorial for Beginners"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/10/1635316165typescript-tutorial-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1635316165typescript-tutorial-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1635316165typescript-tutorial-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1635316165typescript-tutorial.jpg 1200w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong>You&#8217;ve probably heard of TypeScript — the language created and maintained by Microsoft that&#8217;s had a huge impact on the Web, with many prominent projects embracing and migrating their code to TypeScript. TypeScript is a typed superset of JavaScript. In other words, it adds <em>types</em> to JavaScript — and hence the name. But why would you want these types? What benefits do they bring? And do you need to rewrite your entire codebase to take advantage of them? Those questions, and more, will be answered in this TypeScript tutorial for beginners.</strong></p>
<p><em>We assume a basic knowledge of JavaScript and its tooling, but zero prior knowledge of TypeScript is required to follow along.</em></p>
<h2 id="someerroneousjavascriptcode">Some Erroneous JavaScript Code</h2>
<p>To start with, let&#8217;s look at some fairly standard plain JavaScript code that you might come across in any given codebase. It fetches some images from the <a href="https://www.pexels.com/api/">Pexels API</a> and inserts them to the DOM.</p>
<p>However, this code has a few typos in it that are going to cause problems. See if you can spot them:</p>
<pre><code class="javascript language-javascript">const PEXELS_API_KEY = '...';

async function fetchImages(searchTerm, perPage) {
  const result = await fetch(`https://api.pexels.com/v1/search?query=${searchTerm}&amp;per_page=${perPage}`, {
    headers: {
      Authorization: PEXELS_API_KEY,
    }
  });
  const data = await result.json();

  const imagesContainer = document.qerySelector('#images-container');
  for (const photo of data.photos) {
    const img = document.createElement('image');
    img.src = photo.src.medium;
    imagesContainer.append(img);
  }
}

fetchImages('dogs', 5);
fetchImages(5, 'cats');
fetchImages('puppies');
</code></pre>
<p>Can you spot the issues in the above example? Of course, if you ran this code in a browser you&#8217;d immediately get errors, but by taking advantage of TypeScript we can get the errors quicker by having TypeScript spot those issues in our editor.</p>
<p>Shortening this feedback loop is valuable — and it gets more valuable as the size of your project grows. It&#8217;s easy to spot errors in these 30 lines of code, but what if you&#8217;re working in a codebase with thousands of lines? Would you spot any potential issues easily then?</p>
<p><em>Note: there&#8217;s no need to obtain an API key from Pexels to follow along with this TypeScript tutorial. However, if you&#8217;d like to run the code, an API key is entirely free: you just need to <a href="https://www.pexels.com/onboarding/">sign up for an account</a> and then generate one.</em></p>
<h2 id="runningtypescriptfromtheeditor">Running TypeScript from the Editor</h2>
<p>Once upon a time, TypeScript required that all files be written as <code>.ts</code> files. But these days, the onboarding ramp is smoother. You don&#8217;t need a TypeScript file to write TypeScript code: instead, we can run TypeScript on any JavaScript file we fancy!</p>
<p>If you&#8217;re a VS Code user (don&#8217;t panic if you aren&#8217;t — we&#8217;ll get to you!), this will work out the box with no extra requirements. We can enable TypeScript&#8217;s checking by adding this to the very top of our JavaScript file (it&#8217;s important that it&#8217;s the first line):</p>
<pre><code class="javascript language-javascript">// @ts-check
</code></pre>
<p>You should then get some squiggly red errors in your editor that highlight our mistakes, as pictured below.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/08/1630058335js-code-with-errors.png" alt="TypeScript showing errors in VS Code" /></p>
<p>You should also see a cross in the bottom left-hand corner with a two by it. Clicking on this will reveal the problems that have been spotted.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/08/1630061099errors-in-console.jpg" alt="Errors displayed in the VS Code console" /></p>
<p>And just because you&#8217;re not on VS Code doesn&#8217;t mean you can&#8217;t get the same experience with TypeScript highlighting errors. Most editors these days support the Language Server Protocol (commonly referred to as LSP), which is what VS Code uses to power its TypeScript integration.</p>
<p>It&#8217;s well worth searching online to find your editor and the recommended plugins to have it set up.</p>
<h2 id="installingandrunningtypescriptlocally">Installing and Running TypeScript Locally</h2>
<p>If you&#8217;re not on VS Code, or you&#8217;d like a general solution, you can also run TypeScript on the command line. In this section, I&#8217;ll show you how.</p>
<p>First, let&#8217;s generate a new project. This step assumes you have <a href="https://www.sitepoint.com/quick-tip-multiple-versions-node-nvm/">Node and npm installed upon your machine</a>:</p>
<pre><code class="bash language-bash">mkdir typescript-demo
cd typescript demo
npm init -y
</code></pre>
<p>Next, add TypeScript to your project:</p>
<pre><code class="bash language-bash">npm install --save-dev typescript
</code></pre>
<p><em>Note: you could install TypeScript globally on your machine, but I like to install it per-project. That way, I ensure I have control over exactly which version of TypeScript each project uses. This is useful if you have a project you&#8217;ve not touched for a while; you can keep using an older TS version on that project, whilst having a newer project using a newer version.</em></p>
<p>Once it&#8217;s installed, you can run the TypeScript compiler (<code>tsc</code>) to get the same errors (don&#8217;t worry about these extra flags, as we&#8217;ll talk more about them shortly):</p>
<pre><code class="bash language-bash">npx tsc index.js --allowJs --noEmit --target es2015
index.js:13:36 - error TS2551: Property 'qerySelector' does not exist on type 'Document'. Did you mean 'querySelector'?

13   const imagesContainer = document.qerySelector('#images-container');
                                      ~~~~~~~~~~~~

  node_modules/typescript/lib/lib.dom.d.ts:11261:5
    11261     querySelector&lt;K extends keyof HTMLElementTagNameMap&gt;(selectors: K): HTMLElementTagNameMap[K] | null;
              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    'querySelector' is declared here.

index.js:16:9 - error TS2339: Property 'src' does not exist on type 'HTMLElement'.

16     img.src = photo.src.medium;
           ~~~

Found 2 errors.
</code></pre>
<p>You can see that TypeScript on the command line highlights the same JavaScript code errors that VS Code highlighted in the screenshot above.</p>
<h2 id="fixingtheerrorsinourjavascriptcode">Fixing the Errors in Our JavaScript Code</h2>
<p>Now that we have TypeScript up and running, let&#8217;s look at how we can understand and then rectify the errors that TypeScript is flagging.</p>
<p>Let&#8217;s take a look at our first error.</p>
<h3 id="propertyqeryselectordoesnotexistontypedocument">Property <code>qerySelector</code> does not exist on type <code>Document</code></h3>
<pre><code class="bash language-bash">index.js:13:36 - error TS2551: Property 'qerySelector' does not exist on type 'Document'. Did you mean 'querySelector'?

13   const imagesContainer = document.qerySelector('#images-container');

  node_modules/typescript/lib/lib.dom.d.ts:11261:5
    11261     querySelector&lt;K extends keyof HTMLElementTagNameMap&gt;(selectors: K): HTMLElementTagNameMap[K] | null;
              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    'querySelector' is declared here.
</code></pre>
<p>This can look quite overwhelming if you&#8217;re not used to reading TypeScript errors, so don&#8217;t panic if it looks a bit odd! TypeScript has spotted that, on line <code>13</code>, we&#8217;ve called a method <code>document.qerySelector</code>. We meant <code>document.querySelector</code> but made a mistake when typing. We would have found this out when we tried to run our code in the browser, but TypeScript is able to make us aware of it sooner.</p>
<p>The next part where it highlights <code>lib.dom.d.ts</code> and the <code>querySelector&lt;K...&gt;</code> function is diving into more advanced TypeScript code, so don&#8217;t worry about that yet, but at a high level it&#8217;s TypeScript showing us that it understands that there&#8217;s a method called <code>querySelector</code>, and it suspects we might have wanted that.</p>
<p>Let&#8217;s now zoom in on the last part of the error message above:</p>
<pre><code class="bash language-bash">index.js:13:36 - error TS2551: Property 'qerySelector' does not exist on type 'Document'. Did you mean 'querySelector'?
</code></pre>
<p>Specifically, I want to look at the text <code>did not exist on type 'Document'</code>. In TypeScript (and broadly in every typed language), items have what&#8217;s called a <code>type</code>.</p>
<p>In TypeScript, numbers like <code>1</code> or <code>2.5</code> have the type <code>number</code>, strings like <code>"hello world"</code> have the type <code>string</code>, and an instance of an HTML Element has the type <code>HTMLElement</code>. This is what enables TypeScript&#8217;s compiler to check that our code is sound. Once it knows the type of something, it knows what functions you can call that take that something, or what methods exist on it.</p>
<p><em>Note: if you&#8217;d like to learn more about data types, please consult “<a href="https://www.sitepoint.com/typing-versus-dynamic-typing/">Introduction to Data Types: Static, Dynamic, Strong &#038; Weak</a>”.</em></p>
<p>In our code, TypeScript has seen that we&#8217;ve referred to <code>document</code>. This is a global variable in the browser, and TypeScript knows that and knows that it has the type of <code>Document</code>. This type documents (if you pardon the pun!) all of the methods we can call. This is why TypeScript knows that <code>querySelector</code> is a method, and that the misspelled <code>qerySelector</code> is not.</p>
<p>We&#8217;ll see more of these types as we go through further TypeScript tutorials<!-- link opportunity-->, but this is where all of TypeScript&#8217;s power comes from. Soon we&#8217;ll define our own types, meaning really we can extend the type system to have knowledge about all of our code and what we can and can&#8217;t do with any particular object in our codebase.</p>
<p>Now let&#8217;s turn our attention to our next error, which is slightly less clear.</p>
<h3 id="propertysrcdoesnotexistontypehtmlelement">Property <code>src</code> does not exist on type <code>HTMLElement</code></h3>
<pre><code class="bash language-bash">index.js:16:9 - error TS2339: Property 'src' does not exist on type 'HTMLElement'.

16     img.src = photo.src.medium;
</code></pre>
<p>This is one of those errors where sometimes you have to look slightly above the error to find the problem. We know that an HTML image element does have a <code>src</code> attribute, so why doesn&#8217;t TypeScript?</p>
<pre><code class="javascript language-javascript">const img = document.createElement('image');
img.src = photo.src.medium;
</code></pre>
<p>The mistake here is on the first line: when you create a new image element, you have to call <code>document.createElement('img')</code> (because the HTML tag is <code>&lt;img&gt;</code>, not <code>&lt;image&gt;</code>). Once we do that, the error goes away, because TypeScript knows that, when you call <code>document.createElement('img')</code>, you get back an element that has a <code>src</code> property. And this is all down to the <em>types</em>.</p>
<p>When you call <code>document.createElement('div')</code>, the object returned is of the type <code>HTMLDivElement</code>. When you call <code>document.createElement('img')</code>, the object returned is of type <code>HTMLImageElement</code>. <code>HTMLImageElement</code> has a <code>src</code> property declared on it, so TypeScript knows you can call <code>img.src</code>. But <code>HTMLDivElement</code> doesn&#8217;t, so TypeScript will error.</p>
<p>In the case of <code>document.createElement('image')</code>, because TypeScript doesn&#8217;t know about any HTML element with the tag <code>image</code>, it will return an object of type <code>HTMLElement</code> (a generic HTML element, not specific to one tag), which also lacks the <code>src</code> property.</p>
<p>Once we fix those two mistakes and re-run TypeScript, you&#8217;ll see we get back nothing, which shows that there were no errors. If you&#8217;ve configured your editor to show errors, hopefully there are now none showing.</p>
<h2 id="howtoconfiguretypescript">How to Configure TypeScript</h2>
<p>It&#8217;s a bit of a pain to have to add <code>// @ts-check</code> to each file, and when we run the command in the terminal having to add those extra flags. TypeScript lets you instead enable it on a JavaScript project by creating a <code>jsconfig.json</code> file.</p>
<p>Create <code>jsconfig.json</code> in the root directory of our project and place this inside it:</p>
<pre><code class="javascript language-javascript">{
  "compilerOptions": {
    "checkJs": true,
    "noEmit": true,
    "target": "es2015"
  },
  "include": ["*.js"]
}
</code></pre>
<p>This configures the TypeScript compiler (and your editor&#8217;s TS integration) to:</p>
<ol>
<li>Check JavaScript files (the <code>checkJs</code> option).</li>
<li>Assume we&#8217;re building in an ES2015 environment (the <code>target</code> option). Defaulting to ES2015 means we can use things like promises without TypeScript giving us errors.</li>
<li>Not output any compiled files (the <code>noEmit</code> option). When you&#8217;re writing TypeScript code in TypeScript source files, you need the compiler to generate JavaScript code for you to run in the browser. As we&#8217;re writing JavaScript code that&#8217;s running in the browser, we don&#8217;t need the compiler to generate any files for us.</li>
<li>Finally, <code>include: ["*.js"]</code> instructs TypeScript to look at any JavaScript file in the root directory.</li>
</ol>
<p>Now that we have this file, you can update your command-line instruction to this:</p>
<pre><code class="bash language-bash">npx tsc -p jsconfig.json
</code></pre>
<p>This will run the compiler with our configuration file (the <code>-p</code> here is short for &#8220;project&#8221;), so you no longer need to pass all those flags through when running TypeScript.</p>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/typescript-tutorial-for-beginners/?utm_source=rss">A Step-by-Step TypeScript Tutorial for Beginners</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/typescript-tutorial-for-beginners/?utm_source=rss</link><guid isPermaLink="false">/?p=207577</guid><category><![CDATA[JavaScript]]></category><dc:creator><![CDATA[Jack Franklin]]></dc:creator><pubDate>Tue, 26 Oct 2021 15:00:21 GMT</pubDate><metaDesc>In this beginner-friendly TypeScript tutorial, you'll learn why it's useful to add types to JavaScript, and how to take advantage of them.</metaDesc></item><item><title><![CDATA[Use the Notion API to Create a Quiz with JavaScript]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/notion-api-javascript-quiz/?utm_source=rss"
              title="Use the Notion API to Create a Quiz with JavaScript"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634971069notion-quiz-javascript.jpg"
        alt="Use the Notion API to create a Quiz with JavaScript"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634971069notion-quiz-javascript-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634971069notion-quiz-javascript-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634971069notion-quiz-javascript-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634971069notion-quiz-javascript.jpg 1200w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong>Notion is a <a href="https://www.notion.so/personal">multi-featured app</a> for organizing all sorts of content, from notes to calendars and reminders. In our last article, “<a href="https://www.sitepoint.com/notion-api-javascript-sdk/">Getting Started with the Notion API and Its JavaScript SDK</a>”, we delved into how to use Notion’s API and created a small interface to interact with it. This article now will explore another use case for the Notion API: creating a JavaScript quiz.</strong></p>
<p><em>While no previous knowledge is needed to follow along with this article (I&#8217;ll provide all the required steps), we&#8217;ll be dealing with front-end and back-end code, as there&#8217;s a bit of Node.js and Express setup involved, so some JavaScript skills are assumed.</em></p>
<h2 id="javascriptquizprojectsetup">JavaScript Quiz Project Setup</h2>
<p>We&#8217;re going to split our setup into two sections. In the first one, we&#8217;ll walk through the required setup on the Notion side, and one the second part we&#8217;ll work with our code.</p>
<p>To follow along, you&#8217;ll need a Notion account (more on that below), as well as a recent copy of <a href="https://www.sitepoint.com/quick-tip-multiple-versions-node-nvm/">Node installed on your machine</a>. As ever, the <a href="https://github.com/sitepoint-editors/notion-api-javascript-quiz">final code for the tutorial can be found on GitHub</a>.</p>
<h2 id="thenotionsetup">The Notion Setup</h2>
<p>If you don&#8217;t already have a Notion account, please create one by following <a href="https://www.notion.so/login">this link</a>. After creating your account and logging in, create a new page by choosing <strong>Add a page</strong> and give it a name. For this tutorial, we&#8217;ll use a <code>Table</code> database. Although it&#8217;s not the ideal database to build a quiz, it&#8217;s the closest we can achieve with Notion!</p>
<h3 id="insertinginformationintothetable">Inserting information into the table</h3>
<p>Now that we have our empty <code>Table</code>, we need to figure out how to properly insert our information into it.<br />
Our intended schema for our quiz is the following:</p>
<pre><code class="javascript language-javascript">{
  "1": {
    "Question": "Which is the purpose of JavaScript?",
    "Answers": {
      "1": "To style HTML Pages",
      "2": "To add interactivity to HTML pages",
      "3": "To perform server side scripting operations"
    },
    "Correct": "To add interactivy to HTML pages"
  },
  "2": {
    "Question": "To insert a JavaScript into an HTML page, which tag is used?",
    "Answers": {
      "1": "&lt;script='java'&gt;",
      "2": "&lt;javascript&gt;",
      "3": "&lt;script&gt;"
    },
    "Correct": "&lt;script&gt;"
  },
  "3": {
    "Question": "Which of the following is correct to write “Hello World” on the web page?",
    "Answers": {
      "1": "print('Hello World')",
      "2": "document.write('Hello World')",
      "3": "response.write('Hello World')"
    },
    "Correct": "document.write('Hello World')"
  }
}
</code></pre>
<p>Notion isn&#8217;t really built for this type of database, so we need to get creative with it! 💡 So our <code>Question</code> column will be just a <code>Title</code> (which works great) and our <code>Correct</code> column will be of type <code>Text</code> (which also works as intended). For our multiple options, though, we need to do something different! My approach to it is to use the <code>Multi-select</code> field type so I can write multiple results into the same cell (we&#8217;ll see down the path what the data retrieved from this looks like). So our <code>Table</code> should look like the following image as the end result.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633429075RuiSousaNotionDatabaseJavaScriptQuiz.jpeg" alt="Our Notion Table filled in with our questions, answers and correct choice" /></p>
<h3 id="creatingournotionapiintegration">Creating our Notion API integration</h3>
<p>Now we need to go to the Notion API <a href="https://developers.notion.com/">website</a> to create our integration. Press the <strong>My Integrations</strong> button on the top right corner and then click on <strong>Create new integration</strong>. We need to fill in our title and be sure to choose our Associated workspace (it will be chosen by default but make sure of this). If we press <strong>Submit</strong>, we&#8217;ll be directed to a new page with an Internal Integration Token (we&#8217;ll use this in our code) and with two option boxes for where we want to use our integration. We don&#8217;t need to do anything on this page other than copy our token and press <strong>Save changes</strong>.</p>
<p>Now we go back to our Notion workspace. In our newly created Notion database, we want to press <strong>Share</strong>, then <strong>Invite</strong>. We&#8217;ll then be able to choose our newly created integration. If we choose it and press <strong>Invite</strong>, our Notion setup is done. Well done! 🙌</p>
<h2 id="thecodesetup">The Code Setup</h2>
<p>For our code setup, we&#8217;ll use a Notion template repository (which we can then use on any of our Notion API projects!) that already has the initial code required to work with Notion&#8217;s API. This repo can be found <a href="https://github.com/sitepoint-editors/notion-api-javascript-starter">here</a>, so be sure to fork it and clone it to accompany our project! If you&#8217;re interested in what all the bits of code do, please refer to “<a href="https://www.sitepoint.com/notion-api-javascript-sdk/">Getting Started with the Notion API and Its JavaScript SDK</a>”, since we go into a lot of detail for every bit of code (the repo also has a <code>README</code> that should explain what it does!).</p>
<h3 id="installingdependencies">Installing dependencies</h3>
<p>After forking and cloning our Notion template repo, our first step is to install our dependencies, so make sure to run <code>yarn</code> or <code>npm install</code> on our terminal inside the folder. In this project we have three dependencies: the <a href="https://github.com/makenotion/notion-sdk-js">@notionhq/client</a>, <a href="https://github.com/motdotla/dotenv">dotenv</a> and <a href="https://expressjs.com/">Express</a>. We&#8217;ll use dotenv to manage our variables and keep them safe (such as the one we saw on our integration) and Express to create our back end and server for our application.</p>
<p>To manage our variables with dotenv, create a <code>.env</code> file at the root of our project and paste the following there:</p>
<pre><code class="bash language-bash">NOTION_API_KEY = YOUR_TOKEN_HERE
NOTION_API_DATABASE = YOUR_DATABASE_ID_HERE
</code></pre>
<p>Our <code>NOTION_API_KEY</code> is the key that we can find in our <strong>Integrations</strong>, and our <code>NOTION_API_DATABASE</code> can be found by going to the created Notion page and looking at the browser&#8217;s URL bar. It comes after your workspace name (if we have one) and the slash (<code>myworkspace/</code>) and before the question mark (<code>?</code>). The ID is 32 characters long, containing numbers and letters:</p>
<pre><code class="bash language-bash">https://www.notion.so/myworkspace/a8aec43384f447ed84390e8e42c2e089?v=...
                                  |--------- Database ID --------|
</code></pre>
<p>If we&#8217;re worried about having Notion&#8217;s API keys on a file inside our repo, notice that on our <code>.gitignore</code> we have the <code>.env</code> file there; the <code>.gitignore</code> allows us to put different file/folder names inside, and that means that these files/folders won’t be added to our repo when we push our code.</p>
<p>Now that we have our initial repository and we have the required credentials from Notion, we can start working on our quiz!</p>
<h2 id="grabbingthejavascriptquizdata">Grabbing the JavaScript Quiz Data</h2>
<p>We should first check if we&#8217;re successfully connected to our Notion database, so we&#8217;ll navigate to our <code>.index.js</code> file and log our <code>reponse</code> variable (see how we&#8217;re grabbing our <code>databaseId</code> from our <code>.env</code> file and using it on our <em>database query</em>?).</p>
<p>If we then run <code>yarn start</code>, we should see something like the following screenshot on our terminal.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633429265RuiSousaWhatResponseQueryRetrieves.jpeg" alt="What logging the response query retrieves" /></p>
<p>Seeing this on our terminal means that we&#8217;re properly connected to our Notion database and that we can now get our required data. Our <code>getDatabase</code> function will look like this:</p>
<pre><code class="javascript language-javascript">exports.getDatabase = async function () {
  const response = await notion.databases.query({ database_id: databaseId });

  const responseResults = response.results.map((page) =&gt; {
    return {
      id: page.id,
      question: page.properties.Question.title[0].plain_text,
      answers: page.properties.Answers.multi_select,
      correct: page.properties.Correct.rich_text[0].plain_text,
    };
  });

  return responseResults;
};
</code></pre>
<p>With <code>responseResults</code>, we&#8217;re mapping over our <code>results</code> (matching the entries in our database) and we&#8217;re mapping the paths for different properties to names that we&#8217;re choosing (in this case, <code>id</code>, <code>question</code>, <code>answers</code> and <code>correct</code>). Notice how specific the object path is. This is by design, which means that, when developing and working with your own database, you should continuously investigate the returned properties until you find the information you&#8217;re looking for (it&#8217;s really a matter of trial and error).</p>
<p>With this new code, we&#8217;re pretty much making a call to our API and picking the properties that we want to use in our code, which means that we&#8217;re ready to work with them on our interface!</p>
<h2 id="showingourdatainthebrowser">Showing Our Data in the Browser</h2>
<p>Let&#8217;s start by dealing with our HTML and CSS, since they&#8217;re pretty direct! We won&#8217;t do any changes on our HTML from the template, and on our <code>style.css</code> we can paste the following code beneath the existing one:</p>
<pre><code class="css language-css">.questionContainer {
  padding: 30px;

  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;

  box-shadow: rgba(149, 157, 165, 0.2) 0px 8px 24px;
  border-radius: 10px;
}

.numberElement {
  margin: 0px auto 10px;

  font-size: 12px;
  font-weight: 700;
  text-transform: uppercase;
}

.question {
  margin: 0px auto 40px;
}

.answersDiv {
  width: 100%;

  display: flex;
  flex-direction: column;
  gap: 20px;
}

.answerOption {
  padding: 20px;
  margin: 0px;

  font-size: 18px;
  text-align: center;

  cursor: pointer;

  border: 1px solid rgb(42, 43, 44);
  border-radius: 40px;
}
</code></pre>
<p>We won&#8217;t see these styling changes yet, but we can now focus on the functionality, which is the more important part of this tutorial.</p>
<p>If we now go to the <code>main.js</code> file inside the <code>public</code> folder, we&#8217;ll see that we&#8217;re already grabbing our data from our back end with the <code>getDataFromBackend</code> function. If you&#8217;re confused by this, “<a href="https://www.sitepoint.com/notion-api-javascript-sdk/">Getting Started with the Notion API and Its JavaScript SDK</a>” has a lengthier explanation for it, but basically on our <code>server.js</code> we created a route that gets our database, and here on <code>getDataFromBackend</code> we&#8217;re making a <code>fetch</code> to that same route, which will grab our data for us.</p>
<p>Notice how inside <code>addData</code> we already have <code>const data = await getDataFromBackend();</code>. This means that we&#8217;re ready to start working with our data, and we can actually check this! <code>log</code> this <code>data</code> variable and we should see, on our console, an array of our database entries.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633429330RuiSousaLoggingOurData.jpeg" alt="Logging our data" /></p>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/notion-api-javascript-quiz/?utm_source=rss">Use the Notion API to Create a Quiz with JavaScript</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/notion-api-javascript-quiz/?utm_source=rss</link><guid isPermaLink="false">/?p=207562</guid><category><![CDATA[Computing]]></category><category><![CDATA[JavaScript]]></category><category><![CDATA[Low Code]]></category><dc:creator><![CDATA[Rui Sousa]]></dc:creator><pubDate>Mon, 25 Oct 2021 15:00:31 GMT</pubDate><metaDesc>You can extend Notion in all sorts of ways with the Notion API. Learn how to create an interactive quiz with a Notion table and JavaScript.</metaDesc></item><item><title><![CDATA[How to Get Started with Social Media Automation]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/social-media-automation-getting-started/?utm_source=rss"
              title="How to Get Started with Social Media Automation"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634863009social-media-automation.jpg"
        alt="How To Get Started with Social Media Automation"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634863009social-media-automation-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634863009social-media-automation-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634863009social-media-automation-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634863009social-media-automation.jpg 1200w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong>Social media automation tools enable seamless management of social accounts across a range of different platforms. These automation tools let you dedicate more time to building an audience and implementing social media campaign strategies that work.</strong></p>
<p>To start off, we&#8217;ll discuss the following in this article:</p>
<ul>
<li>what social media marketing automation is</li>
<li>tips on how to automate social media posts</li>
<li>top social media automation tools</li>
</ul>
<p>After reading this article, you&#8217;ll have learned more ways to leverage social media automation to improve your content strategy.&nbsp;</p>
<h2 id="whatissocialmediaautomation">What Is Social Media Automation?</h2>
<p>Social media automation involves using tools to bolster your social presence. It lets a social team schedule posts ahead of time, engage with prospects, and streamline results all in one place.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634689770social-media-automation-tool.jpg" alt="Social posts automation tool" /></p>
<p><small><a href="https://www.freepik.com/free-vector/developer-laptop-computer-with-open-robotic-soft-open-automation-architecture-open-source-robotics-soft-free-development-concept_11667733.htm">Source</a></small></p>
<h3 id="schedulingcontentisntaboutlosingcontrol">Scheduling content isn&#8217;t about losing control</h3>
<p>Having social media automation doesn&#8217;t mean letting AI, chatbots, and automation tools take over your social media accounts.</p>
<p>Social media automation tools are meant to help you manage your social accounts efficiently. They can uncover ways to widen your social networks, monitor brand mentions, and offer content ideas. However, you&#8217;ll still need the human touch when it comes to writing posts, communicating with your audience, and interpreting results from analytical tools.</p>
<h2 id="tipsforsocialmediaautomation">Tips for Social Media Automation</h2>
<p>Social media automation enables brands to save time and build an active online presence on social media networks. To maximize its potential, let&#8217;s take a look at some of the best practices you should follow.&nbsp;</p>
<h3 id="1setgoalsforsocialmediaautomation">1. Set goals for social media automation</h3>
<p>When you&#8217;re starting out, you don&#8217;t have to purchase multiple automation tools in an instant and automate everything.&nbsp;</p>
<p>Start by identifying your social media goals. What do you want to achieve? And what should you automate in the process?&nbsp;</p>
<p>Here are some goals to consider:</p>
<ul>
<li>posting social content consistently</li>
<li>responding immediately to customer support requests</li>
<li>speeding up content curation</li>
<li>improving the efficiency of social media marketers</li>
</ul>
<p>You can set any goal you want. However, your objective will determine the type of social media automation tools you get first.</p>
<p>For example, if you want to improve customer service, then integrate chatbots into your social media pages. Alternatively, teams that want to focus on consistency may find that a social media scheduler is an absolute game changer.</p>
<h3 id="2beawareoftimezonesforsocialmediamarketing">2. Be aware of time zones for social media marketing</h3>
<p>Social media lets brands engage with consumers from across the globe.</p>
<p>So, where are your consumers located? What time zones are they in? Knowing the best time to post based on your target audience&#8217;s location will help you get more eyeballs for your content.&nbsp;</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634689936social-media-timezone.jpg" alt="social media posts time zone" /></p>
<p><small><a href="https://www.pexels.com/photo/london-new-york-tokyo-and-moscow-clocks-48770/">Source</a></small></p>
<p>The social media algorithm favors posts that rack up a lot of engagement immediately after they&#8217;ve posted. Because they get more likes and shares, they&#8217;re perceived to be relevant content. Thus, this increases the likelihood that more people will see your post on their feed.&nbsp;</p>
<p>There&#8217;s no one-size-fits-all approach for posting times.&nbsp;Results may vary depending on your industry and the social media habits of consumers in a specific location or country. As an experiment, try to post at different times and see which times generate the most impressions, before committing to a specific pattern.&nbsp;</p>
<h3 id="3automatesocialmediaposts">3. Automate social media posts</h3>
<p>Posting frequency matters a lot in social media. If you don&#8217;t post often, followers will easily forget your brand. But if you post too frequently, followers may be bombarded with too many marketing messages on their feed. So, how do you find the sweet spot?&nbsp;</p>
<p>For most social media platforms, it&#8217;s best to consistently maintain the rate of your posts. As long as your engagement rate is consistent, you&#8217;ll be able to grow your audience.&nbsp;</p>
<p>A good tip is to build a social media calendar with a posting schedule for every piece of content you plan to publish. The calendar serves as a visual representation of your posting frequency. That way, you can ensure that your marketing efforts are consistent for every platform.&nbsp;</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634690354social-media-calendar.jpg" alt="Social media posts calendar for scheduling content" /></p>
<p><small><a href="https://www.freepik.com/free-vector/creative-hand-drawn-social-media-calendar-template_15629077.htm">Source</a></small></p>
<p>There&#8217;s no need to create a social media calendar from scratch. Social media automation tools let marketers schedule posts at a specific time. This can save you from the tedious process of posting content across different platforms, especially for ambitious social media marketing campaigns.&nbsp;</p>
<h3 id="4usesociallisteningtools">4. Use social listening tools</h3>
<p>Social listening lets marketers know what people say about their brand on social platforms.&nbsp;</p>
<p>A social listening tool lets marketers monitor brand mentions from multiple sources all in one place. On top of that, you can follow a specific topic, hashtag, or keyword to uncover valuable insights about your small business or your competitors. What&#8217;s new in your industry? Why are your competitors getting more social media engagement? </p>
<p>Using social listening tools will help uncover gaps in your strategy and even spark content ideas for your upcoming campaigns.</p>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/social-media-automation-getting-started/?utm_source=rss">How to Get Started with Social Media Automation</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/social-media-automation-getting-started/?utm_source=rss</link><guid isPermaLink="false">/?p=207482</guid><category><![CDATA[Computing]]></category><category><![CDATA[Low Code]]></category><category><![CDATA[Web]]></category><dc:creator><![CDATA[Monique Danao]]></dc:creator><pubDate>Sun, 24 Oct 2021 15:00:41 GMT</pubDate><metaDesc>Automation tools can enhance your social media management. Learn how to leverage social media automation to improve your content strategy.</metaDesc></item><item><title><![CDATA[SitePoint NFTs – or how we floated rhinos on the OpenSea]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/nfts-rhinos-on-the-oceansea/?utm_source=rss"
              title="SitePoint NFTs – or how we floated rhinos on the OpenSea"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634858073291_-_The_Rackley_Rhino.jpg"
        alt="Origami Rhinos"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634858073291_-_The_Rackley_Rhino-300x209.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634858073291_-_The_Rackley_Rhino-768x536.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634858073291_-_The_Rackley_Rhino.jpg 1024w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p>After 20+ years and over 100 book cover designs, we’re releasing a strictly limited run of our latest design work as purchasable NFT artwork. From 12:00 midday on Thursday, October 21 (PDT) there will be 10 Origami Rhinos available for bids.</p>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/nfts-rhinos-on-the-oceansea/?utm_source=rss">SitePoint NFTs – or how we floated rhinos on the OpenSea</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/nfts-rhinos-on-the-oceansea/?utm_source=rss</link><guid isPermaLink="false">/?p=207534</guid><category><![CDATA[Blockchain]]></category><category><![CDATA[Blogs]]></category><category><![CDATA[Design & UX]]></category><category><![CDATA[Ethereum]]></category><category><![CDATA[Web]]></category><dc:creator><![CDATA[Alex Walker]]></dc:creator><pubDate>Thu, 21 Oct 2021 05:58:49 GMT</pubDate><metaDesc>After 20+ years and over 100 book cover designs, we’re releasing a strictly limited run of our latest design work as purchasable digital art.</metaDesc></item><item><title><![CDATA[Is Magento 2 Migration Worth It? The Process Explained]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/magento-2-migration-process-explained/?utm_source=rss"
              title="Is Magento 2 Migration Worth It? The Process Explained"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634620880magento-2-migration.jpg"
        alt="Is Magento 2 Migration Worth It? The Process Explained"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634620880magento-2-migration-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634620880magento-2-migration-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634620880magento-2-migration-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634620880magento-2-migration.jpg 1200w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong>This article will explain the ins and outs of Magento 2 migration, and why it&#8217;s a good idea to consider Magento 1 to Magento 2 migration now. We’ll try to help you understand if the move makes sense for your specific business. We’ll also describe the standard migration process by breaking it down into the tasks involved and the likely amount of time the migration process will take.</strong></p>
<p>The Magento team terminated official support of the platform’s first version in June 2020. Yet the number of stores that are still up and running on Magento 1 is quite high. So should these business owners be thinking about Magento 2 migration?</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634612835magento-1-magento-2.jpg" alt="Magento 1 to Magento 2 migration" /></p>
<h2 id="thebenefitsofmagento">The Benefits of Magento</h2>
<p>Magento is a platform used for building highly customized and large ecommerce stores.</p>
<p>Although it has a rather complex architecture (which explains its tricky development and maintenance), the platform offers practically no limits when it comes to building something custom and unique. As a result, it offers a lot more than other ecommerce platforms such as Shopify.</p>
<p>Magento is an extremely versatile platform, where you can implement any functionality you like. Yes, it requires a team of experienced developers. But whether it&#8217;s boosting site speed, enhancing the search, reworking the design, or <a href="https://onilab.com/blog/how-to-build-a-pwa-storefront-magento-2-a-detailed-guide">building a Magento 2 PWA</a>, site improvements using progressive technology can certainly make a change for the better — even if we’re talking about “heavy” stores with non-standard design and non-typical storefronts.</p>
<h2 id="issuessurroundingmagento2migration">Issues Surrounding Magento 2 Migration</h2>
<p>The major point of contention surrounding Magento 1 to Magento 2 migration is that <strong>Magento 1 and Magento 2 have very little in common</strong>. And if a store is up on Magento 1 (usually a big one that’s been operating online for years), it will take a lot of effort and time to migrate it to Magento 2.</p>
<p>Whether you like it or not, most of the code will need to be rewritten. And you&#8217;ll have to deal with Magento extensions, plugins, compatibility issues, data migration, and so forth — all which is very challenging.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634613236magento-migration-frustration.jpg" alt="Challenges of Magento 2 migration" /></p>
<p>Intimidated by the complex, lengthy process and the possible costs involved, it&#8217;s no wonder numerous store owners have decided to postpone their Magento 1 to Magento 2 migration. Many have even started to look for other, less complex platforms to move to instead. Others are choosing to leave things as they are.</p>
<p>But sticking with Magento 1 isn&#8217;t recommended. Investing in Magento 2 migration makes sense for one reason in particular, which was mentioned above: <strong>the official Magento team has decided to terminate support for Magento 1</strong>. This means that, from June 2020, there will be no more security patches, no more updates — nothing. As a result, Magento 1.x is becoming more and more out of date by the month.</p>
<h2 id="theadvantagesofmagento2migration">The Advantages of Magento 2 Migration</h2>
<p>There&#8217;s no reason an online store can&#8217;t function perfectly well on Magento 1. But there are increasing disadvantages and risks in relying on outdated software. Security is becoming more and more of an issue, so it&#8217;s important to keep a site up to date for that reason alone — especially when you&#8217;re handling credit cards. And outdated software is less and less compatible with the modern code environments in which online stores live.</p>
<p>By migrating from Magento 1 to Magento 2, site owners can mitigate large data leaks and credit card fines with a timely upgrade from an outdated platform.</p>
<p>Moreover, the migration can mean that it’s time for: </p>
<ul>
<li>a redesign according to <a href="https://www.sitepoint.com/web-design-trends/">recent design trends</a> and a new store look (since moving the old theme will take almost as long as creating a fresher one from scratch)</li>
<li>getting rid of loads of unnecessary data and unused logs</li>
<li>enhancing the store with new advanced features and Magento extensions</li>
<li>rebuilding the storefront to a progressive web application to reach utmost site optimization and a better user experience</li>
</ul>
<p>As you can see, Magento 2 migration can be an opportunity to change things for the better — especially keeping in mind how sweepingly m-commerce is picking up steam.</p>
<h2 id="shouldiupgradetomagento2now">Should I Upgrade to Magento 2 Now?</h2>
<p>If you’re a Magento 1 store owner who’s in two minds whether it’s worth it or not, you have to understand how Magento 2 migration will affect your business and how much it will cost. So take some time to give answers to the following six questions.</p>
<h3 id="1doyoulackanyfeaturesthatmagento1doesnthave">1. Do you lack any features that Magento 1 doesn’t have?</h3>
<p>Magento 1 is a long-established platform with plenty of extensions, themes, and ready-to-use solutions that you can implement right away. Unfortunately, core Magento is no longer receiving new features.</p>
<p>In addition to that, Magento 1 extension developers won&#8217;t be updating their products to add new features. Your only alternative is developing the required functionality yourself.</p>
<h3 id="2willyoumigratetomagento2eventually">2. Will you migrate to Magento 2 eventually?</h3>
<p>Most businesses will move to Magento 2 eventually. They just want to delay this move for one reason or another. But you have to understand that staying with Magento 1 will cost you a lot of money in terms of support and development. And the longer you wait, the more you might eventually end up spending.</p>
<h3 id="3doesyourstoresdesignlookuptodate">3. Does your store’s design look up to date?</h3>
<p>If your design patterns are outdated and don’t meet online retail requirements anymore, it&#8217;s reasonable to update your website design along with Magento 2 migration, eliminating a vast amount of work. Maybe currently your website has many <a href="https://www.sitepoint.com/worst-ux-mistakes">UX\UI mistakes</a> you want to fix? It&#8217;s counter-productive to spend money on a Magento 1 store if you&#8217;re going to spend more money on a Magento 2 migration sooner or later.</p>
<p>And if your store’s mobile version is far from perfect (such as being slow, not user-friendly, hard to navigate, and so on), you’re already losing sales.</p>
<p>With Magento 2, it’s possible to build progressive web applications that optimize your store’s mobile and desktop versions. PWAs work fast and can have UX and UI that look a lot like a native application. For example, check out the series of screenshots below, illustrating mobile-friendly layouts.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632826697IMG_03.jpg" alt="Pet City progressive web application on a mobile device" /></p>
<p><small>Screenshots taken on the official <a href="https://www.petcity.gr">Pet City</a> website</small></p>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/magento-2-migration-process-explained/?utm_source=rss">Is Magento 2 Migration Worth It? The Process Explained</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/magento-2-migration-process-explained/?utm_source=rss</link><guid isPermaLink="false">/?p=207464</guid><category><![CDATA[Web]]></category><dc:creator><![CDATA[Alex Husar]]></dc:creator><pubDate>Wed, 20 Oct 2021 15:00:13 GMT</pubDate><metaDesc>Magento 1 is out of date. Are you ready for Magento 2 migration? Learn why it's important, the steps involved, and how long it will take.</metaDesc></item><item><title><![CDATA[Back to Basics: Understanding the for…in Loop in JavaScript]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/javascript-for-in-loop-basics/?utm_source=rss"
              title="Back to Basics: Understanding the for…in Loop in JavaScript"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634532628for-in-loops.jpg"
        alt="Back to Basics: for...in Loops in JavaScript"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634532628for-in-loops-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634532628for-in-loops-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634532628for-in-loops-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634532628for-in-loops.jpg 1200w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong>Loops allow us to cycle through items in arrays or objects and do things like print them, modify them, or perform other kinds of tasks or actions. There are different kinds of loops in JavaScript, and one of them is the for&#8230;in loop.</strong></p>
<p>In this article, we&#8217;ll learn about the <code>for...in</code> loop JavaScript provides. We&#8217;ll look at how the <code>for...in</code> loop is used in JavaScript, its syntax, examples of how it works, when to use it, when not to use it, and what other types of loops we can use instead.</p>
<h2 id="whyuseloops">Why Use Loops</h2>
<p>In JavaScript, just as in other programming languages, we use loops to read or access the items of a collection. The collection can be an array or an object. Every pass through the items of a collection is called an <strong>iteration</strong>.</p>
<p>There are two ways to access an item in a collection. The first way is via its key in the collection, which is an index in an array or a property in an object. The second way is via the item itself, without needing the key.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634532628for-in-loops.jpg" alt="A loop iterates property values and array values" /></p>
<h2 id="definitionoftheforinloop">Definition of the for…in Loop</h2>
<p>The JavaScript <code>for...in</code> loop goes through or iterates keys of a collection. Using these keys, you can then access the item it represents in the collection.</p>
<p>The collection of items can be either arrays, objects, or even strings.</p>
<h2 id="syntaxoftheforinloop">Syntax of the for…in Loop</h2>
<p>The <code>for...in</code> loop has the following syntax or structure:</p>
<pre><code class="javascript language-javascript">for (let key in value) {
  //do something here
}
</code></pre>
<p>In this code block, <code>value</code> is the collection of items we&#8217;re iterating over. It can be an object, array, string, and so on. <code>key</code> will be the key of each item in <code>value</code>, changing on each iteration to the next key in the list.</p>
<p>Note that we use <code>let</code> or <code>const</code> to declare <code>key</code>.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634538136for-in-loop-diagram.jpg" alt="For in loop iterating object properties" /></p>
<h2 id="usingtheforinloopwithobjects">Using the for…in Loop with Objects</h2>
<p>When using <code>for...in</code> loop to iterate an object in JavaScript, the iterated keys or properties — which, in the snippet above, are represented by the <code>key</code> variable — are the object&#8217;s own properties.</p>
<p>As objects might inherit items through the prototype chain, which includes the default methods and properties of Objects as well as Object prototypes we might define, we should then use <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty">hasOwnProperty</a>.</p>
<h3 id="aforinloopobjectexample">A for…in loop object example</h3>
<p>In the following example, we&#8217;re looping over the following variable <code>obj</code>:</p>
<pre><code class="javascript language-javascript">const obj = {
  1: "JavaScript",
  3: "PHP",
  2: "Python",
  4: "Java"
};
</code></pre>
<p>In the loop, we&#8217;re rendering the property and value in a <code>&lt;div&gt;</code> element.</p>
<p class="codepen" data-height="300" data-default-tab="js,result" data-slug-hash="ZEJWOML" data-user="SitePoint" style="height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;">
<span>See the Pen <a href="https://codepen.io/SitePoint/pen/ZEJWOML"><br />
Looping Objects</a> by SitePoint (<a href="https://codepen.io/SitePoint">@SitePoint</a>)<br />
on <a href="https://codepen.io">CodePen</a>.</span>
</p>
<p><script async src="https://cpwebassets.codepen.io/assets/embed/ei.js"></script></p>
<p>Notice that the order of the iteration is ascending for the keys (that is, starting with digits in numerical order and then letters in alphabetical order). However, this outputted order is different from the index order of the items as created when initializing the object.</p>
<h2 id="usingaforinloopwitharrays">Using a for…in Loop with Arrays</h2>
<p>When using the <code>for...in</code> loop to iterate arrays in JavaScript, <code>key</code> in this case will be the indices of the elements. However, the indices might be iterated in a random order.</p>
<p>So, if the <code>value</code> variable in the <code>for...in</code> loop syntax structure we showed above was an array of five items, <code>key</code> would not be guaranteed to be 0 to 4. Some indices might precede others. Details on when this might happen is explained later in this article.</p>
<h3 id="forinlooparrayexample">For…in loop array example</h3>
<p>In the example below, we&#8217;re looping over the following variable <code>arr</code>:</p>
<pre><code class="javascript language-javascript">const arr = ["Javascript", "PHP", "Python", "Java"];
</code></pre>
<p>And in the loop, we&#8217;re rendering the index and the value of each array element.</p>
<p class="codepen" data-height="300" data-default-tab="js,result" data-slug-hash="RwZaRBq" data-user="SitePoint" style="height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;">
<span>See the Pen <a href="https://codepen.io/SitePoint/pen/RwZaRBq"><br />
Looping Arrays</a> by SitePoint (<a href="https://codepen.io/SitePoint">@SitePoint</a>)<br />
on <a href="https://codepen.io">CodePen</a>.</span>
</p>
<p><script async src="https://cpwebassets.codepen.io/assets/embed/ei.js"></script></p>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/javascript-for-in-loop-basics/?utm_source=rss">Back to Basics: Understanding the for…in Loop in JavaScript</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/javascript-for-in-loop-basics/?utm_source=rss</link><guid isPermaLink="false">/?p=207439</guid><category><![CDATA[Web]]></category><dc:creator><![CDATA[Shahed Nasser]]></dc:creator><pubDate>Tue, 19 Oct 2021 15:00:53 GMT</pubDate><metaDesc>Learn about for...in loops in JavaScript: their syntax, how they work, when to use them, when not to use them, and what you can use instead.</metaDesc></item><item><title><![CDATA[How to Create a Linear Gauge Chart in JavaScript]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/create-linear-gauge-chart-javascript/?utm_source=rss"
              title="How to Create a Linear Gauge Chart in JavaScript"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634340565linear-gauge-chart.jpg"
        alt="How to Create a Linear Gauge Chart in JavaScript"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634340565linear-gauge-chart-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634340565linear-gauge-chart-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634340565linear-gauge-chart-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634340565linear-gauge-chart.jpg 1200w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong>This article presents an easy-to-follow guide for building an interactive linear gauge chart in JavaScript.</strong> </p>
<p>We&#8217;ll show to quickly create a cool and interactive linear gauge chart that highlights Covid-19 vaccination data around the world. Our chart will allow us to visualize the status of Covid-19 vaccination at the time of writing, and will display two types of data — showing how far away we are from the halfway target of both partially and fully vaccinating the global population. </p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634256218linear-gauge-cover-image.png" alt="linear gauge cover image" /></p>
<h2 id="whatalineargaugechartis">What Is a Linear Gauge Chart?</h2>
<p>Data visualization is an invaluable tool, given the vast amount of data being created and numerous possibilities for gleaning information from data. Data visualization is particularly useful for identifying trends, interpreting patterns, and communicating complex ideas to the target audience.</p>
<p>A linear gauge chart represents a vertical or horizontal linear scale that shows the required values, with a color scale along with single or multiple pointers. The minimum and maximum values of the data range can be set over the axes according to the data being represented. The pointer position indicates the current value of the metric. </p>
<p>A gauge chart can display a single value or multiple values using an individual pointer or a combination of markers. The pointer can be a needle or a line with a marker of any shape like a circle, square, rectangle or triangle.</p>
<p>The linear gauge chart type is an effective visual representation for displaying how close or far the values are from the desired data point. </p>
<h3 id="typesoflineargauges">Types of linear gauges</h3>
<p>The several types of linear gauges are thermometer chart, bullet chart, tank chart and LED chart. The mercury thermometer — consisting of minor ticks that displays the temperature with the pointer value — is a classic example of a linear gauge chart.  </p>
<h3 id="thelineargaugevisualizationwellbebuilding">The linear gauge visualization we&#8217;ll be building</h3>
<p>Here&#8217;s a sneak peek at the final linear gauge chart. Follow this tutorial to learn how we build this interesting and informative linear gauge chart with JavaScript.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634256124linear-gauge-final-with-tooltip.png" alt="linear gauge chart final version" /></p>
<h2 id="thefourstepstobuildingajavascriptlineargauge">The Four Steps to Building a JavaScript Linear Gauge</h2>
<p>It&#8217;s always useful to have some skills with technologies like HTML and JavaScript. But in this tutorial, we&#8217;re using a JS charting library that makes it easier to create compelling charts like the linear gauge even with minimal technical knowledge. </p>
<p>There are several <a href="https://en.wikipedia.org/wiki/Comparison_of_JavaScript_charting_libraries">JavaScript charting libraries</a> for visualizing data with ease, and here we&#8217;re creating the linear gauge chart with <a href="https://www.anychart.com/">AnyChart</a>. This library is flexible, with <a href="https://docs.anychart.com">extensive documentation</a>, and it consists some <a href="https://www.anychart.com/products/anychart/gallery/">great examples</a>. Moreover, it has a <a href="https://playground.anychart.com/">playground</a> for experimenting with code and is free for non-commercial use. If you want to buy a licensed version, you can check out the <a href="https://www.anychart.com/buy/">available options</a>, and if you&#8217;re an educational or not-for-profit organization, you can get in touch for a free license <a href="https://www.anychart.com/buy/non-commercial-license/">here</a>. </p>
<h2 id="thestepsformakingajavascriptlineargauge">The Steps for Making a JavaScript Linear Gauge</h2>
<p>These are the basic steps for creating a linear gauge chart:</p>
<ol>
<li>Create a basic HTML page.</li>
<li>Include the necessary JavaScript files.</li>
<li>Add the data.</li>
<li>Write the JavaScript code for the chart.</li>
</ol>
<p>Let&#8217;s look through each of these steps in detail below.</p>
<h3 id="1createabasichtmlpage">1. Create a basic HTML page</h3>
<p>The first thing we need to do is make an HTML page that will hold our visualization. We add a <code>&lt;div&gt;</code> block element and give it an ID so we can reference it later:</p>
<pre><code class="markup language-markup">&lt;html lang="en"&gt;
  &lt;head&gt;
    &lt;title&gt;JavaScript Linear Gauge&lt;/title&gt;
    &lt;style type="text/css"&gt;      
      html, body, #container { 
        width: 100%; height: 100%; margin: 0; padding: 0; 
      } 
    &lt;/style&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;div id="container"&gt;&lt;/div&gt;
  &lt;/body&gt;
&lt;/html&gt;
</code></pre>
<p>The width and height attributes of the <code>&lt;div&gt;</code> are set to 100% so that the chart is rendered across the entire screen. These attributes can be modified according to requirements. </p>
<h3 id="2includethenecessaryjavascriptfiles">2. Include the necessary JavaScript files</h3>
<p>The next step is to reference the JS links in the HTML page. We&#8217;ll use the AnyChart library for this tutorial, so let&#8217;s include the corresponding files from their <a href="https://cdn.anychart.com/">CDN</a>.</p>
<p>To create a linear gauge chart, we&#8217;ll need to add three scripts: the <a href="https://docs.anychart.com/Quick_Start/Modules#core">core module</a>, the <a href="https://docs.anychart.com/Quick_Start/Modules#linear_gauge">linear gauge module</a>, and the <a href="https://docs.anychart.com/Quick_Start/Modules#table_ui">table module</a>:</p>
<pre><code class="markup language-markup">&lt;html lang="en"&gt;
  &lt;head&gt;
    &lt;title&gt;JavaScript Linear Gauge&lt;/title&gt;
    &lt;style type="text/css"&gt;
      html, body, #container { 
        width: 100%; height: 100%; margin: 0; padding: 0; 
      } 
    &lt;/style&gt;
  &lt;/head&gt;
  &lt;body&gt;  
    &lt;div id="container"&gt;&lt;/div&gt;
    &lt;script&gt;
      // All the code for the JS linear gauge will come here
    &lt;/script&gt;
    &lt;script src="https://cdn.anychart.com/releases/8.10.0/js/anychart-core.min.js"&gt;&lt;/script&gt;
    &lt;script src="https://cdn.anychart.com/releases/8.10.0/js/anychart-linear-gauge.min.js"&gt;&lt;/script&gt;
    &lt;script src="https://cdn.anychart.com/releases/8.10.0/js/anychart-table.min.js"&gt;&lt;/script&gt;
  &lt;/body&gt;
&lt;/html&gt;
</code></pre>
<h3 id="3addthedatavalues">3. Add the data values</h3>
<p>The data for the linear gauge chart is collected from <a href="https://ourworldindata.org/">Our World in Data</a> and included in the code. On that site, we can see the percentage of the people having received one and two Covid <a href="https://ourworldindata.org/covid-vaccinations">vaccine doses</a> for each continent in the whole world.</p>
<p>Because (at the time of writing) none of the numbers is greater than 50%, we&#8217;ve kept the maximum limit of the axis of all the linear gauges as 50%, and we compare how far away from that mark each continent is, as well as the global figure. We indicate at least partially vaccinated figures with LED representation, and the fully vaccinated numbers with a bar pointer. We&#8217;ll see how the data is added in the last step.</p>
<p>So then, our initial steps are all done, and now let’s add the code to make a linear gauge chart with JavaScript!</p>
<h3 id="4writethejavascriptcodeforthechart">4. Write the JavaScript code for the chart</h3>
<p>Before adding any code, we enclose everything in a function that makes sure that the entire code inside it executes only once the page is loaded.</p>
<p>Creating a linear gauge chart involves a couple of steps and is a bit more complex than the other basic chart types. But that doesn’t mean it&#8217;s very difficult, and we&#8217;ll go through each step to understand how the chart is made. </p>
<h2 id="definingthelinearscaleandaxisforthegaugechart">Defining the Linear Scale and Axis for the Gauge Chart</h2>
<p>We have multiple pointers in our chart. So, let’s start with making a function that accepts two values: one for the bar pointer, and one for the LED gauge. We&#8217;ll then create a gauge, set the data, and specify the layout as horizontal. Next, we&#8217;ll set the range of the scales and the axes. We&#8217;ll make a linear scale with the minimum and maximum ranges. For the axis, we&#8217;ll define the attributes and set the orientation:</p>
<pre><code class="javascript language-javascript">function drawGauge(value, settings) {
  // Create gauge with settings
  const gauge = anychart.gauges.linear();
  gauge.data([value, settings.value]);
  gauge.layout('horizontal');

  // Set scale for gauge
  const scale = anychart.scales.linear();
  scale.minimum(0).maximum(settings.maximum).ticks({ interval: 2 });

  // Set axis for gauge
  const axis = gauge.axis(0);
  axis.width('1%').offset('43%').scale(scale).orientation('bottom');
}
</code></pre>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/create-linear-gauge-chart-javascript/?utm_source=rss">How to Create a Linear Gauge Chart in JavaScript</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/create-linear-gauge-chart-javascript/?utm_source=rss</link><guid isPermaLink="false">/?p=207398</guid><category><![CDATA[JavaScript]]></category><dc:creator><![CDATA[Shachee Swadia]]></dc:creator><pubDate>Mon, 18 Oct 2021 15:00:02 GMT</pubDate><metaDesc>Charts help us to understand data. Learn how to quickly create an interactive linear gauge chart that highlights Covid-19 vaccination data.</metaDesc></item><item><title><![CDATA[Build a Hacker News Clone using React and HarperDB]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/react-harperdb-build-hacker-news-clone/?utm_source=rss"
              title="Build a Hacker News Clone using React and HarperDB"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634252431react-hacker.jpg"
        alt="Build a Hacker News Clone using React and HarperDB"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634252431react-hacker-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634252431react-hacker-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634252431react-hacker-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634252431react-hacker.jpg 1200w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong>One of the most effective and fun ways to boost your web development skills is by cloning an existing web page or website. In this tutorial, we&#8217;ll be cloning the Hacker News <a href="https://news.ycombinator.com/">home page</a>, making use of React and HarperDB.</strong></p>
<p>By the time we&#8217;re done, our cloned version of the Hacker News home page should look like this:</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631796896hackernewsclone.png" alt="Our cloned version" /></p>
<p>The code for this project can be found in its <a href="https://github.com/KingsleyUbah/hacker-news-clone">GitHub repository</a>.</p>
<h2 id="thebenefitsofcloning">The Benefits of Cloning</h2>
<p>Building a clone of a web page has the following benefits:</p>
<ul>
<li>
<p>It helps you to give attention to design intricacies and nuances. This makes you a more comprehensive designer.</p>
</li>
<li>
<p>It helps you get familiar with color and typography. These are very important concepts that every front-end developer/designer should be proficient with.</p>
</li>
<li>
<p>It allows you learn about new technologies. You get to use new tech stacks and broaden the scope of your knowledge and skills.</p>
</li>
</ul>
<h2 id="aboutthereactuseharperdbtechstack">About the React/useHarperDB Tech Stack</h2>
<p>The stack we&#8217;ll be using for this project is primarily is the React/useHarperDB stack.</p>
<p>HarperDB is a data management software. It&#8217;s great for cases where you need NoSQL and SQL capabilities, rapid application development, integration, edge computing, distributed computing, and real-time operational analytics.</p>
<p>HarperDB is also flexible. It allows you do the following:</p>
<ul>
<li>make queries to a single endpoint</li>
<li>use both SQL and NoSQL to query your database</li>
<li>upload data in JSON and with SQL queries</li>
<li>upload bulk data in a single CSV file</li>
</ul>
<p>It&#8217;s very fast, simple to use and allows you to set up in a serverless way. The serverless architecture entails the abstraction of the back-end tasks to another service.</p>
<p>In simpler terms, as the developer you don&#8217;t have to implement a back end and a database for the web application on your local machine. Instead, a platform like HarperDB takes care of the back-end operations and provides you with a way to access and manage data from its infrastructure, through the cloud. That way, you can focus on front-end development.</p>
<p>Throughout the development process, we&#8217;ll be using the following tools.</p>
<h3 id="react">React</h3>
<p>We&#8217;ll be using the React library for our home page clone. React is a front-end JavaScript library for building reusable user interface components. For example, say you want to use a similar button in two or more places on your website. With HTML, you&#8217;d define the markup for that button in every section you want to use it. This isn&#8217;t consistent with the DRY (don&#8217;t repeat yourself) principle. With React, all you need to do is define a single button component and then register that component in every section you intend to use it within the app. This simplifies the entire building process and cleans up your code. </p>
<p>Instead of manually installing React and setting up the tedious configurations, we&#8217;ll use the <code>create-react-app</code> tool to instantly build out a working framework for us. This will help save time.</p>
<h3 id="nodeandnpm">Node and npm</h3>
<p>The React, React DOM and thousands of other packages all live inside of the npm registry. To be able to install these dependencies on our local machine, we&#8217;ll need to have Node and npm installed. You can install Node from <a href="https://nodejs.org/en/download/">here</a>. </p>
<p>If you&#8217;re not sure if Node is already installed on your computer, or you&#8217;re unsure of which version is currently installed, simply open a command terminal on your machine and type in <code>node -v</code>. If you have Node installed, it should display the version of Node you have installed. Note that you should have a node version of at least 12.xx to run this project.</p>
<h3 id="aharperdbcloudaccount">A HarperDB Cloud account</h3>
<p>To set up a database, we&#8217;ll need to create an instance for our app. To create an instance, we&#8217;ll first need to sign up to Harper. After setting up our database cloud instance, we&#8217;ll need to use the username, password and database URL later in our React app. In the database, we&#8217;ll create a table that holds the list of Hacker News posts that will be displayed later on the web page.</p>
<h3 id="useharperdb">useHarperDB</h3>
<p>This is a React hook provided by Harper. This hook essentially acts as a bridge between our React App and the database. By calling this function inside our React component and passing in some important parameters — including an SQL query — we&#8217;ll be able to access the posts from our cloud database. This package will be installed using the Node package manager and details on it can be <a href="https://www.npmjs.com/package/use-harperdb?ref=hackernoon.com">found here</a>.</p>
<h3 id="sql">SQL</h3>
<p>In this project, we&#8217;ll only be using a single basic SQL query, so having broad knowledge isn&#8217;t required.</p>
<h3 id="css">CSS</h3>
<p>Finally, we&#8217;ll be styling our clone using pure CSS with no libraries. Every style we apply will be geared towards mimicking the Harper News home page.</p>
<h3 id="hackernewslogo">Hacker News logo</h3>
<p>Since we&#8217;re going to be creating an exact replica of the real Hacker News home page, we&#8217;ll need the logo image. You can download the logo in SVG format <a href="https://iconscout.com/icon/hacker-news-3521477">here</a>.</p>
<h2 id="creatingaharperdbcloudinstance">Creating a HarperDB Cloud Instance</h2>
<p>First, we need to set up our cloud instance. We go over to the HarperDB home page and <a href="https://studio.harperdb.io/sign-up">sign up</a> for a free account.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631798005signup.png" alt="Sign up" /></p>
<p>After signing up, we&#8217;ll create a HarperDB Cloud instance for our app. Follow the instructions, fill in your username, a password for your instance and your instance name. After doing so, a URL will be generated for you.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632826326newaddschema.png" alt="Adding your instance info" /></p>
<p>In the following page, we&#8217;ll be told to select our specs. Since this is a tutorial, we&#8217;ll go for the free plans.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631800537Hackernewsharperfree.png" alt="Select the specs" /></p>
<p>Click on “Confirm Instance Details” and you&#8217;ll be moved to a page which contains all your instance’s information. Now, copy your instance URL, your username, and your password and save it somewhere, as you&#8217;ll need them later.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632826349newconfirminstance.png" alt="Please preserve your username, password and url" /></p>
<p>Finally, we confirm the instance. You&#8217;ll immediately see the &#8220;creating instance&#8221; label on the card. This indicates that HarperDB is working on our instance and that it will be all set in a few minutes.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632826356newcreatinginstance.png" alt="Spinning up the database" /></p>
<p>It&#8217;s important that we store our instance credentials in an accessible place, since we&#8217;ll be requiring it later in the tutorial. The credentials are your username, password and instance URL.</p>
<h2 id="settingupourprojectdirectory">Setting Up Our Project Directory</h2>
<p>Our database is now spinning up on the side. Now it&#8217;s time to create the directory for our app and install dependencies.</p>
<p>First, we go over to the terminal and run the following command:</p>
<pre><code class="bash language-bash">npx create-react-app hacker-news-clone
</code></pre>
<p>This will create a folder named <code>hacker-news-clone</code> and install the React library into the project. Since <code>create-react-app</code> is a code generator, all configurations will be done for us automatically. That way, we can focus more on building our app.</p>
<h2 id="creatingthedatabaseandsupplyingitwithdata">Creating the Database and Supplying it with Data</h2>
<p>Going back to HarperDB, we&#8217;ll need to provide it with the data for our page. This data will be a list of Hacker news posts which we&#8217;ll display on our front end.</p>
<h3 id="creatingaschemaandatablewithinthedatabase">Creating a schema and a table within the database</h3>
<p>We&#8217;ll need to define a schema for our database. A schema is the structural form of a database. It defines how data is going to be organized inside the database. In HarperDB, you can simply think of the schema as a collection of tables. We can define multiple tables inside a schema and access those tables from different places within our app.</p>
<p>From your HarperDB dashboard, click on the card. You&#8217;ll be directed to a new page.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632390585nowset.png" alt="Instance is now set. Click on the card to create a schema" /></p>
<p>To create a schema, simple click on the <strong>+</strong> icon beside it.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632390730addschema.png" alt="How you can add a schema and a table" /></p>
<p>For our tutorial, we&#8217;ll be naming our schema &#8220;HackerNews&#8221;.</p>
<p>Inside the schema, we&#8217;ll define our first table, named <code>posts</code>. This table will hold all of the posts data that will be showing on our page. In addition to the table&#8217;s name, we&#8217;ll also have to pass in a hash attribute for our table. A <strong>hash attribute</strong> is a unique value that distinguishes one row (post) from another row of data inside the table.</p>
<p>For our posts table, we&#8217;ll set the hash attribute to <code>id</code>. This means the <code>id</code> column will hold unique data for every row in the table.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631801923desktop-posts.png" alt="Schema and table for our posts" /></p>
<h3 id="populatingourtablewithdata">Populating our table with data</h3>
<p>At this point, the table is empty. We&#8217;ll have to populate the table with data. HarperDB provides us with various ways of doing this:</p>
<ul>
<li>by making SQL or NoSQL queries to create data on our database</li>
<li>by defining a single JSON object (for only one record) and an array of JSON data (for multiple records)</li>
<li>by importing and loading data with a CSV file</li>
</ul>
<p>In this tutorial, we&#8217;ll be supplying data via JSON. Since we&#8217;re inserting multiple records of posts, we&#8217;ll be using an array of JSON object, with each object holding information of a single post.</p>
<p>Click the little <strong>+</strong> icon on the top right corner and paste in the following JSON data:</p>
<pre><code class="javascript language-javascript">[
  {
    "id": 1,
    "title": "Intel Is Reducing Server Chip Pricing in Attempt to Stem the AMD Tide",
    "website": "(tomshardware.com)",
    "url": "https://www.tomshardware.com",
    "points": 115,
    "user": "rbanffy",
    "time": "2 hours ago",
    "comments": 67
  },

  {
    "id": 2,
    "title": "AI recognizes race in medical images",
    "website": "(explainthispaper.com)",
    "url": "https://www.explainthispaper.com",
    "points": 31,
    "user": "stuartbman",
    "time": "30 minutes ago",
    "comments": 15
  }
]
</code></pre>
<p><em>Note: this data is just for two Hacker News posts. You can get data for 30 posts from the <a href="https://github.com/KingsleyUbah/hacker-news-clone/blob/main/data/posts.json">GitHub repository</a>.</em></p>
<p>Go and click on the green button to insert them into the table. This should dynamically populate our table with the two posts.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631800617Hackernewsharperadd.png" alt="Inserting posts using JSON" /></p>
<p>With that, we&#8217;ve finished our work on the HarperDB cloud. It&#8217;s now time to focus on the front-end part of our website.</p>
<h2 id="integratingharperdbandourappwithharperdbprovider">Integrating HarperDB and Our App with HarperDBProvider</h2>
<p>Right now, our front end is isolated from our back end. We have to connect our HarperDB cloud instance to our React app. Thankfully, HarperDB provides us with a hook for that: <a href="https://www.npmjs.com/package/use-harperdb">use-harperdb</a>.</p>
<p>We need to install <code>useharperdb</code> into our project. To do so, we run the following command:</p>
<pre><code class="bash language-bash">npm install use-harperdb
</code></pre>
<p>For security reasons, we&#8217;ll need to store our instance credentials inside an environmental variable. We&#8217;ll create a file named <code>.env</code> inside the root app (<code>hacker-news-clone</code>) and pass in the following variables:</p>
<pre><code class="javascript language-javascript">REACT_APP_DB_URL=**
REACT_APP_USER=**
REACT_APP_PASSWORD=**
</code></pre>
<p>Please make sure to follow the same format and replace the double asterisks with your own instance information. Pass in your database&#8217;s URL, your username and your password.</p>
<p>After that, we&#8217;ll go inside the <code>index.js</code> file by navigating to <code>hacker-news-clone/src/index.js</code>. Then we import <code>HarperDBProvider</code> and wrap our entire app inside it:</p>
<pre><code class="javascript language-javascript">import React from 'react';
import ReactDOM from 'react-dom';
import './index.css';
import App from './App';
import { HarperDBProvider } from 'use-harperdb';

ReactDOM.render(
  &lt;React.StrictMode&gt;
    &lt;HarperDBProvider
    url={process.env.REACT_APP_DB_URL}
    user={process.env.REACT_APP_USER}
    password={process.env.REACT_APP_PASSWORD}
    &gt;
      &lt;App /&gt;
    &lt;/HarperDBProvider&gt;
  &lt;/React.StrictMode&gt;,
  document.getElementById('root')
);
</code></pre>
<p>Inside the <code>&lt;HarperDBProvider&gt;</code> we pass in our environmental variables. This is a very important step to take, because it essentially makes sure our entire app has the context of our cloud instance and can, therefore, pull data from it.</p>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/react-harperdb-build-hacker-news-clone/?utm_source=rss">Build a Hacker News Clone using React and HarperDB</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/react-harperdb-build-hacker-news-clone/?utm_source=rss</link><guid isPermaLink="false">/?p=207378</guid><category><![CDATA[JavaScript]]></category><category><![CDATA[React]]></category><dc:creator><![CDATA[Kingsley Ubah]]></dc:creator><pubDate>Sun, 17 Oct 2021 23:00:42 GMT</pubDate><metaDesc>Read Build a Hacker News Clone using React and HarperDB and learn JavaScript with SitePoint. Our web development and design tutorials, courses, and books will teach you HTML, CSS, JavaScript, PHP, Python, and more.</metaDesc></item><item><title><![CDATA[The Ultimate Guide to 3xx HTTP Status Codes]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/3xx-http-status-codes-ultimate-guide/?utm_source=rss"
              title="The Ultimate Guide to 3xx HTTP Status Codes"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2021/10/16340054783xx-http-status-codes.jpg"
        alt="The Ultimate Guide to 3xx HTTP Status Codes"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/10/16340054783xx-http-status-codes-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/16340054783xx-http-status-codes-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/16340054783xx-http-status-codes-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/16340054783xx-http-status-codes.jpg 1200w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong>If you manage websites, an understanding of HTTP redirects is essential for reliable site performance. In this article, we&#8217;ll take a comprehensive look at 3xx status codes, so that you can understand how they work, how best to manage them, and their impact on SEO.</strong></p>
<h2 id="thepurposeofhttpredirects">The Purpose of HTTP Redirects</h2>
<p>A URL redirect involves one web page address being mapped to another. There&#8217;s a range of reasons why redirecting is required for your site.</p>
<p>For example, moving to a new domain is one of the overriding causes to use URL redirection. Sometimes your former domain name is too long and complicated to remember, or some kinds of infringing activities force you to move from one domain to another.</p>
<p>Let’s take a closer look at other reasons to redirect your page:</p>
<ul>
<li><strong>Forwarding multiple domains</strong>: permanent HTTP redirects are required to lead internet users and search engines to the same location while having many domain names at once.</li>
<li><strong>Identification of broken links</strong>: 404 not found pages can be identified with the Google Search Console. The Coverage report will give you detailed information about all the on-site inbound links to fix with the help of redirecting.</li>
<li><strong>Fixing broken URLs</strong>: after identifying the broken link, you can redirect traffic to the front page. However, a better option is redirecting every broken URL to a new page with the same (similar) content.</li>
<li><strong>The page’s new location</strong>: if your former website has highly visited pages that are ranked high in SERPs, redirecting will help you map this URL to the new location. For this case, you must be sure that the old pages you used for redirection haven&#8217;t disappeared.</li>
<li><strong>The need to delete a page</strong>: create HTTP redirects for all the pages you need to delete and be sure not to dread and stress out visitors with 404 not found errors. Redirecting will signal to Google or other search engines that the link value of the old links should be assigned to the redirected URLs.</li>
</ul>
<p>Besides the main reasons listed above, there are some other cases to take into consideration. Redirecting will come in handy if you need to simplify and track display ads or cope with emergencies. Redirects help marketers with monitoring advertising responses. At the same time, web admins can fix any failed linking activity (error-driven notifications, mail chains) with the help of redirection.</p>
<p>To sum up, Google defines redirecting to control crawling and indexing (category of the Advanced SEO Documentation). <a href="https://developers.google.com/search/docs/advanced/crawling/301-redirects">Google Search Central</a> explains HTTP redirects as the practice of performing a seamless transition, accessing a page through several URLs, correction of outdated URLs, and sending users from deleted pages to new ones, thereby excluding 404 not found errors.</p>
<h2 id="webprotocolbasics">Web Protocol Basics</h2>
<p>The fundamental protocol on the Internet that&#8217;s used for transferring data and information control in hosting servers is called HTTP. The HyperText Transfer Protocol allows maintaining websites and providing communication between internet users and servers on the World Wide Web.</p>
<p>HTTP is the protocol used for information systems with different types of data: distributed, hypermedia, and collaborative. The main goal of the HyperText Transfer Protocol is to provide seamless internet-based interactions. HTTP defines modifications, and data transfer provides a web server and browser actions.</p>
<p>This request–response protocol works through TCP connections that are used for server communications. The Transmission Control Protocol allows internet searchers to interact with any available identified resources represented on the World Wide Web. User communication with web, video, and message servers takes place via HTTP. This way, clients can get access to web pages.</p>
<p>It&#8217;s worth noting that the HyperText Transfer Protocol uses proxies. They are special-purpose filters for content identification and analysis. HTTP proxies prevent users from low-quality sending and displaying files:</p>
<ul>
<li>spyware text and imagery</li>
<li>malformed multimedia files</li>
<li>cyberattack-driven sound and video files</li>
</ul>
<p>There are modes of the HTTP proxy operation. HTTP-Client is used for the protection of the user’s browser. It sends request messages to the server. An HTTP-Server is responsible for HTTP response connections. The principle of the HTTP proxy operation can be figured the following way:</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633995208http-proxy-op.png" alt="HTTP proxy operation" /></p>
<p>The main benefits of the HTTP protocols are:</p>
<ul>
<li><strong>Request responsibility</strong>: the advanced scheme of addressing is provided by HTTP protocols. All the IP addresses become easy to recognize and identify on the WWW.</li>
<li><strong>Improved interactions with web resources</strong>: flexibility and accessibility of online resources are achieved. HTTP provides the opportunity for extension and plugin downloads. This way, relevant data is displayed.</li>
</ul>
<p>According to <a href="https://www.hitechwhizz.com/2020/08/5-advantages-and-disadvantages-drawbacks-benefits-of-http.html">Hitech Whizz</a>, there are other advantages of the HyperText Transfer Protocol to take into account:</p>
<ul>
<li><strong>Security</strong>: interception is minimized, so data transfer takes place in a risk-free mode for users.</li>
<li><strong>Page caching</strong>: if the user visited the internet resource once before, the content available on the page will be loaded faster.</li>
<li><strong>Reduced latency</strong>: HTTP initiates the handshaking process right after the connection is made. This option reduces connection-driven latency.</li>
</ul>
<p>HTTP is also notable for its web protocol-specific methods. They vary from one task to another. There are nine request methods to perform different web operations.</p>
<table>
<thead>
<tr>
<th>Protocol-specific Request</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>PUT</td>
<td>Responsible for the modification of the existing web resource. This request also allows the creation of the new URL.</td>
</tr>
<tr>
<td>HEAD</td>
<td>Creates a request for a special-purpose resource without any need for the body content.</td>
</tr>
<tr>
<td>POST</td>
<td>Responsible for the existing resource modifications in content adding to the new web page.</td>
</tr>
<tr>
<td>DELETE</td>
<td>Deletes the resource specified by the webmaster.</td>
</tr>
<tr>
<td>GET</td>
<td>Requests the resource about its integrity.</td>
</tr>
<tr>
<td>TRACE</td>
<td>Displays any updates and changes of the web recourse visited by the user.</td>
</tr>
<tr>
<td>OPTIONS</td>
<td>Demonstrates the list of HTTP methods that are accessible for the URL of the user’s interest.</td>
</tr>
<tr>
<td>CONNECT</td>
<td>Responsible for the conversion of the request-based connection to the TCP/IP tunnel.</td>
</tr>
<tr>
<td>PATCH</td>
<td>Makes it possible to undertake partial modifications of the web resource.</td>
</tr>
</tbody>
</table>
<h2 id="whatarehttpresponsestatuscodes">What Are HTTP Response Status Codes?</h2>
<p>HTTP status codes are special elements that determine the server response and are presented as 3-rigid coherent symbols. Each HyperText Transfer Protocol code is used for REST API errors. It&#8217;s necessary to understand each HTTP status code to identify problems and solve them.</p>
<p>There are five classes of the status codes to take into consideration. There are informational response, successful, redirection, client error, and serve error categories. The first rigid indicates the class of the HTTP status code. Let’s take a closer look at each category of the responses:</p>
<ul>
<li><strong>1xx informational response</strong>: this class of status codes informs about request reception. It means that the process continues. For example, <em>100 = continue</em>.</li>
<li><strong>2xx successful</strong>: the group of these status codes is about understanding and acceptance of the request. For example, <em>200 = OK</em>.</li>
<li><strong>3xx redirection</strong>: this class of HTTP status codes indicates that some special-purpose actions are required to complete the request. For example, <em>301 = redirection</em>.</li>
<li><strong>4xx client error</strong>: this category of response status codes flags that the request cannot be carried out. Additionally, it might mean that there is bad syntax in the request. <em>400 = bad request.</em></li>
<li><strong>5xx server error</strong>: this class of HTTP status codes is about an unsuccessful server response caused by the server’s failed processing. For example, <em>500 = internal error</em>.</li>
</ul>
<p>It&#8217;s worth noting that some of the status codes and errors have a direct impact on SEO. While 1xx and 2xx classes don&#8217;t affect search engine optimization much (while having a 200 response is the best practice), 300-, 400-, and 500-level ones can negatively impact crawling and indexing your web pages. You should always take care to address 4xx and 5xx status codes and errors, as this can be very harmful to your website’s ranking as a whole.</p>
<p>HTTP 300 codes perhaps play the central role for SEO. This class of status codes is responsible for passing all the SEO value from your old URLs to new ones. Thus, it&#8217;s necessary to dig into each 300-level code&#8217;s meaning (temporary or permanent redirects, proxies, multiple choices, and so on).</p>
<h2 id="thecompletelistof3xxhttpstatuscodes">The Complete List of 3xx HTTP Status Codes</h2>
<p>HTTP status codes are for URL redirection. The 300-level codes indicate different types of HTTP redirects. Marketers usually use 3xx status codes to monitor and analyze user experience, the behavior of website users, and the SEO performance of the site. The <a href="https://datatracker.ietf.org/doc/html/rfc7231#section-6">DataTracker</a> resource identifies four types of redirects distributed by 300-level HTTP status codes:</p>
<ul>
<li>Redirections like <strong>301, 302, 307</strong> indicate that the target resource has been assigned a new URL.</li>
<li><strong>300</strong> redirection offers multiple choices (selection of matching web resources according to the request).</li>
<li><strong>303</strong> redirection offers an indirect response to the fulfilled request if the Location field identifies it.</li>
<li><strong>304</strong> redirection provides HTTP redirects to the results that were cached upfront.</li>
</ul>
<p>300-level status codes appear when it is necessary to indicate the redirection response from the server. Another example of the 3xx HTTP status code class in action is when the deleted page keeps its rankings. Additionally, redirects come in handy when it&#8217;s necessary to fix the broken URL.</p>
<p>For example, a 301 redirection was used via PHP to move all the traffic to a new page, <code>https://eurovps.com</code>:</p>
<pre><code class="javascript language-javascript">&lt;?php // Permanent 301 Redirect via PHP

header("HTTP1.1 301 Moved Permanently");

header("Location: https://eurovps.com/");
</code></pre>
<p>This way, it preserves the ranking of the former URL. The same algorithm can be used for fixing broken URLs with the help of a permanent redirect.</p>
<p>Redirections don&#8217;t expect to see when errors related to other response codes take place. For example, redirects don&#8217;t solve problems with informational responses or server/client errors (<em>Not Implemented</em> = 501; <em>Bad Gateway</em> = 502; <em>Unprocessable Entity</em> = 420).</p>
<p>Let’s take a closer look at each 300-level code to understand their impact on SEO and website ranking. There are nine 3xx status codes to review, along with their peculiarities, functions, benefits, and differences.</p>
<h3 id="300multiplechoices">300 Multiple Choices</h3>
<p>These status codes are commonly used in REST APIs. Multiple choices are given to the browser that should pick sides with the resources that meet the request. For example, if you have multiple video format options or different file extensions to specify, a 300-level code will come in handy.</p>
<p>One more reason for using 300 redirects is to meet the requirements of <a href="https://en.wikipedia.org/wiki/Content_negotiation#Agent-driven">agent-driven negotiations</a>. The server informs a user-agent about available representation types to choose from. Take a closer look at the example to see the 300-redirect in action:</p>
<pre><code class="javascript language-javascript">HTTP/1.1 300 Multiple Choices
Server: curveball/0.3.1
Access-Control-Allow-Headers: Content-Type,User-Agent
Access-Control-Allow-Origin: *
Link: &lt;/foo&gt; rel="alternate"
Link: &lt;/bar&gt; rel="alternate"
Content-Type: text/html
Location: /foo
</code></pre>
<p>You can see <code>/foo</code> and <code>/bar</code> in the coding. The location is specified when both options are accessible for choosing.</p>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/3xx-http-status-codes-ultimate-guide/?utm_source=rss">The Ultimate Guide to 3xx HTTP Status Codes</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/3xx-http-status-codes-ultimate-guide/?utm_source=rss</link><guid isPermaLink="false">/?p=207282</guid><category><![CDATA[Web]]></category><dc:creator><![CDATA[Alina Tytarenko]]></dc:creator><pubDate>Tue, 12 Oct 2021 15:00:57 GMT</pubDate><metaDesc>Need to redirect a URL temporarily or permanently? Learn how 3xx HTTP status codes work, how to pick the best one, and how each affects SEO.</metaDesc></item><item><title><![CDATA[How to Create a CSS Typewriter Effect for your Website]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/css-typewriter-effect/?utm_source=rss"
              title="How to Create a CSS Typewriter Effect for your Website"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633674699css-typewriter-effect.jpg"
        alt="How to Create a CSS Typewriter Effect for your Website"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633674699css-typewriter-effect-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633674699css-typewriter-effect-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633674699css-typewriter-effect-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633674699css-typewriter-effect.jpg 1200w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong>In this article, you&#8217;ll learn how to make your website&#8217;s text dynamic and more engaging using typewriter effects in pure CSS.</strong></p>
<p>The typewriter effect involves text being revealed gradually, as if it&#8217;s being typed before your eyes.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633651442type.gif" alt="Typewriter animation of the words &quot;Web Developer&quot;" /></p>
<p>Adding typewriter effects to chunks of your text can help engage your website&#8217;s visitors and keep them interested in reading further. The typewriter effect can be used for many purposes, such as making engaging landing pages, call-to-action elements, personal websites, and code demonstrations</p>
<h2 id="thetypewritereffectiseasytocreate">The Typewriter Effect Is Easy to Create</h2>
<p>The typewriter effect is easy to make, and all you&#8217;ll need in order to make sense of this tutorial is a basic knowledge of CSS and CSS animations.</p>
<p>Here&#8217;s the way the typewriter effect is going to work:</p>
<ul>
<li>The typewriter animation is going to reveal our text element by changing its width from 0 to 100%, step by step, using the CSS <code>steps()</code> function.</li>
<li>A blink animation is going to animate the cursor that “types out” the text.</li>
</ul>
<h2 id="creatingthewebpageforourtypingeffect">Creating the Web Page for Our Typing Effect</h2>
<p>Let&#8217;s first create the web page for our typewriter demo. It will include a <code>&lt;div&gt;</code> container for our typewriter text with a class of <code>typed-out</code>:</p>
<pre><code class="markup language-markup">&lt;!doctype html&gt;
&lt;html&gt;
  &lt;head&gt;
    &lt;title&gt;Typewriter effect&lt;/title&gt;
    &lt;style&gt;
      body{
        background: navajowhite;
        background-size: cover;
        font-family: 'Trebuchet MS', sans-serif; 
      }
  &lt;/style&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;div class="container"&gt;
      &lt;div class="typed-out"&gt;Web Developer&lt;/div&gt;
    &lt;/div&gt;
  &lt;/body&gt;
&lt;/html&gt;
</code></pre>
<h2 id="stylingthecontainerforthetypewritertext">Styling the Container for the Typewriter Text</h2>
<p>Now that we have the layout of the web page, let&#8217;s style the <code>&lt;div&gt;</code> with the &#8220;typed-out&#8221; class:</p>
<pre><code class="css language-css">.typed-out {
  overflow: hidden;
  border-right: .15em solid orange;
  font-size: 1.6rem;
  width: 0;
}
</code></pre>
<p>Note that, in order for the typewriter effect to work, we&#8217;ve added the following:</p>
<ul>
<li><code>"overflow: hidden;"</code> and a <code>"width: 0;"</code>, to make sure the text content isn&#8217;t revealed until the typing effect has started.</li>
<li><code>"border-right: .15em solid orange;"</code>, to create the typewriter cursor.</li>
</ul>
<p>Before making the typing effect, in order to stop the cursor at the last letter of the <code>typed-out</code> element once it has been fully typed out, the way a typewriter (or really a word processor) would, we&#8217;ll create a container for the <code>typed-out</code> element and add <code>display: inline-block;</code>:</p>
<pre><code class="css language-css">.container {
  display: inline-block;
}
</code></pre>
<h2 id="makingtherevealtextanimation">Making the Reveal-text Animation</h2>
<p>The typewriter animation is going to create the effect of the text inside the <code>typed-out</code> element being typed out, letter by letter. We&#8217;ll use the <code>@keyframes</code> CSS animation rule:</p>
<pre><code class="css language-css">@keyframes typing {
  from { width: 0 }
  to { width: 100% }
}
</code></pre>
<p>As you can see, all this animation does is change an element&#8217;s width from 0 to 100%.</p>
<p>Now, we&#8217;ll include this animation in our <code>typed-out</code> class and set its animation direction to <code>forwards</code> to make sure the text element won&#8217;t go back to <code>width: 0</code> after the animation has finished:</p>
<pre><code class="css language-css">.typed-out{
    overflow: hidden;
    border-right: .15em solid orange;
    white-space: nowrap;
    font-size: 1.6rem;
    width: 0;
    animation: typing 1s forwards;
}
</code></pre>
<p>Our text element will simply be revealed in one smooth step, from left to right:</p>
<p class="codepen" data-height="300" data-default-tab="result" data-slug-hash="OJjLXqE" data-user="SitePoint" style="height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;">
<span>See the Pen <a href="https://codepen.io/SitePoint/pen/OJjLXqE"><br />
Smooth step</a> by SitePoint (<a href="https://codepen.io/SitePoint">@SitePoint</a>)<br />
on <a href="https://codepen.io">CodePen</a>.</span>
</p>
<p><script async src="https://cpwebassets.codepen.io/assets/embed/ei.js"></script><br />
<!-- https://codepen.io/matveynikon/pen/OJggJGG  --></p>
<h2 id="addingstepstoachieveatypewritereffect">Adding Steps to Achieve a Typewriter Effect</h2>
<p>So far, our text is revealed, but in a smooth way that doesn&#8217;t reveal the text letter by letter. This is a start, but obviously it&#8217;s not what a typewriter effect looks like. </p>
<p>To make this animation reveal our text element letter by letter, or <strong>in steps</strong>, the way a typewriter would, we need to split the <code>typing</code> animation included by the <code>typed-out</code> class into steps in order for it to look like it&#8217;s being typed out. This is where the <code>steps()</code> CSS function comes in:</p>
<pre><code class="css language-css">.typed-out{
  overflow: hidden;
  border-right: .15em solid orange;
  white-space: nowrap;
  font-size: 1.6rem;
  width: 0;
  animation: 
    typing 1s steps(20, end) forwards;
}
</code></pre>
<p>As you can see, we&#8217;ve split the <code>typing</code> animation into 20 steps using the CSS <code>steps()</code> function. This is what we see now:</p>
<p class="codepen" data-height="300" data-default-tab="result" data-slug-hash="XWarjrX" data-user="SitePoint" style="height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;">
<span>See the Pen <a href="https://codepen.io/SitePoint/pen/XWarjrX"><br />
Multiple steps</a> by SitePoint (<a href="https://codepen.io/SitePoint">@SitePoint</a>)<br />
on <a href="https://codepen.io">CodePen</a>.</span>
</p>
<p><script async src="https://cpwebassets.codepen.io/assets/embed/ei.js"></script><br />
<!-- https://codepen.io/matveynikon/pen/oNwwgNd --></p>
<p>Here&#8217;s our full code so far:</p>
<pre><code class="markup language-markup">&lt;html&gt;
  &lt;head&gt;
    &lt;title&gt;Typewriter effect&lt;/title&gt;
  &lt;/head&gt;
  &lt;style&gt;
    body{
      background: navajowhite;
      background-size: cover;
      font-family: 'Trebuchet MS', sans-serif; 
    }
    .container{
      display: inline-block;
    }
    .typed-out{
      overflow: hidden;
      border-right: .15em solid orange;
      white-space: nowrap;
      animation: 
      typing 1s steps(20, end) forwards;
      font-size: 1.6rem;
      width: 0;
    }
    @keyframes typing {
      from { width: 0 }
      to { width: 100% }
    }
  &lt;/style&gt;
&lt;body&gt;
&lt;h1&gt;I'm Matt, I'm a&lt;/h1&gt;
&lt;div class="container"&gt;
  &lt;div class="typed-out"&gt;Web Developer&lt;/div&gt;
&lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/css-typewriter-effect/?utm_source=rss">How to Create a CSS Typewriter Effect for your Website</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/css-typewriter-effect/?utm_source=rss</link><guid isPermaLink="false">/?p=207175</guid><category><![CDATA[Animation]]></category><category><![CDATA[CSS]]></category><category><![CDATA[CSS3]]></category><category><![CDATA[HTML & CSS]]></category><dc:creator><![CDATA[Matt Nikonorov]]></dc:creator><pubDate>Mon, 11 Oct 2021 15:00:04 GMT</pubDate><metaDesc>There are lots of cool ways to add interest and delight to your web pages with CSS. Learn how to create an animated CSS typewriter effect.</metaDesc></item><item><title><![CDATA[How to Create Responsive React Components with React Textfit]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/responsive-react-components-textfit/?utm_source=rss"
              title="How to Create Responsive React Components with React Textfit"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633673325responsive-react-components.jpg"
        alt="How to Create Responsive React Components with React Textfit"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633673325responsive-react-components-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633673325responsive-react-components-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633673325responsive-react-components-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633673325responsive-react-components.jpg 1200w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong>Developing in React involves defining reusable components and assembling them into various parts of your application to achieve your desired user interface (UI). In this article, we&#8217;ll look at the <code>react-textfit</code> library, which makes it easy to create responsive React components that display predictably wherever they appear in a layout.</strong> </p>
<h2 id="thetextfittingissue">The Text-fitting Issue</h2>
<p>Since React components are pieces of JavaScript code describing a particular section of your UI, they&#8217;re virtually independent of each other. And their visual styles are often embedded within them, as part of their definition. This can be quite helpful, given that they&#8217;re likely to be used in different locations and layouts. </p>
<p>But there are also some downsides to embedding styles within a reusable component. One example is seen in the case of responsiveness. Say you want a line of text — such as a heading — to completely fill the space reserved for it in terms of height and width, but not to wrap — all without having to write custom CSS rules for every possible situation. (Examples of where you might want this include business slogans, advertisement messages, or text embedded in navbar components.)</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633581044lines1.jpg" alt="Each component you create may have more than one function" /></p>
<h3 id="cssandportability">CSS and portability</h3>
<p>While defining the style of your responsive React component, you&#8217;d want to take into account the size, layout, or style of each possible parent component that might wrap it to adapt the font size accordingly. As you can imagine, taking every possible container size into account isn&#8217;t really viable — even if you could do it with CSS. You&#8217;d be chasing far too many viewport scenarios for it to be practical to write media queries. But other than media queries, there isn&#8217;t really a way in CSS to ensure that a block of text will always fit within a single line.</p>
<h3 id="createreusablereactcomponents">Create reusable React components</h3>
<p>Thankfully, some React libraries can be used to address this issue effortlessly. They allow you to define reusable React components where text behaves as expected regardless of the container the reusable component is placed in. By the end of this article, you&#8217;ll be able to use of these libraries to tackle the aforementioned text fitting problem and make a component reusable. So, let&#8217;s take a look at everything you should know to make your text automatically fit the available space in React.</p>
<p>First, we&#8217;ll look at why facing such a problem is so important and why common solutions may not be enough, especially when using React. Then, the <a href="https://www.npmjs.com/package/react-textfit"><code>react-textfit</code></a> React library will be presented and used to implement a solution for both single and multi-line text.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633581320lines2.jpg" alt="Each component you create will properties for different environments" /></p>
<h2 id="textfittingprobleminreusablecomponents">Text Fitting Problem in Reusable Components</h2>
<p>Let&#8217;s take a look at the following demo explaining the text fitting problem with an example.</p>
<p><!-- https://codepen.io/antozanini95/pen/ExXXmaO --></p>
<p class="codepen" data-height="500" data-default-tab="result" data-slug-hash="KKqOxQV" data-user="SitePoint" style="height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;">
<span>See the Pen <a href="https://codepen.io/SitePoint/pen/KKqOxQV"><br />
Text fitting problem</a> by SitePoint (<a href="https://codepen.io/SitePoint">@SitePoint</a>)<br />
on <a href="https://codepen.io">CodePen</a>.</span>
</p>
<p><script async src="https://cpwebassets.codepen.io/assets/embed/ei.js"></script></p>
<p>The goal is to make a headline fit the space reserved for it, regardless of the size of the user&#8217;s screen. In this example, <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/Viewport_concepts">viewport units</a> are used to define the <code>font-size</code> for the headline. Consequently, while resizing the red-bordered <code>iframe</code> representing the user&#8217;s screen, the headline will always fit its parent <code>&lt;div&gt;</code>. So this method certainly allows the headline text to adapt to any screen width. However, the <code>Headline</code> styled component is not reusable. This is because it&#8217;s designed with only this particular text in mind. By adding to the headline text, or resizing the parent <code>&lt;div&gt;</code>, the text will no longer fit on one line. (You can experiment with changing the text in the demo.) We really want a reusable component to be more adaptable than this.</p>
<p>As mentioned, another solution is offered by <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/Media_Queries/Using_media_queries">CSS media queries</a>, which allow you to adapt your text font size according to the screen size. This is the ideal solution when considering the web page as a whole. But it&#8217;s not practical to chase an endless number of possible container widths with media queries. This would result in a lot of work. Plus, and would make your components a lot less portable. </p>
<h2 id="reacttextfitasasolutionforresponsivereacttext"><code>react-textfit</code> as a Solution for Responsive React Text</h2>
<p>So let&#8217;s see how the <code>react-textfit</code> React library makes it possible to automatically fit text within the available space, truly making the component reusable.</p>
<p><!-- https://codepen.io/antozanini95/pen/OJgggxo --></p>
<p class="codepen" data-height="600" data-default-tab="result" data-slug-hash="BaZXOGa" data-user="SitePoint" style="height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;">
<span>See the Pen <a href="https://codepen.io/SitePoint/pen/BaZXOGa"><br />
Text fitting problem with react-textfit</a> by SitePoint (<a href="https://codepen.io/SitePoint">@SitePoint</a>)<br />
on <a href="https://codepen.io">CodePen</a>.</span>
</p>
<p><script async src="https://cpwebassets.codepen.io/assets/embed/ei.js"></script></p>
<p>As you can see, the aforementioned issues have. Thanks to <code>react-textfit</code>, you can now change the headline or resize the parent <code>&lt;div&gt;</code>, while keeping your headline snugly fitting the available space.</p>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/responsive-react-components-textfit/?utm_source=rss">How to Create Responsive React Components with React Textfit</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/responsive-react-components-textfit/?utm_source=rss</link><guid isPermaLink="false">/?p=207078</guid><category><![CDATA[JavaScript]]></category><dc:creator><![CDATA[Antonello Zanini]]></dc:creator><pubDate>Sun, 10 Oct 2021 15:00:08 GMT</pubDate><metaDesc>Learn how to create truly responsive React components that adapt to different UI environments by using the handy react-textfit library.</metaDesc></item><item><title><![CDATA[Internationalization: How to Boost Traffic with a Multilingual Site]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/internationalization-multilingual-site/?utm_source=rss"
              title="Internationalization: How to Boost Traffic with a Multilingual Site"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633834599internationalization.jpg"
        alt="Internationalization: How to Boost Traffic with a Multilingual Site"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633834599internationalization-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633834599internationalization-1024x579.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633834599internationalization-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633834599internationalization.jpg 1200w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong>Website internationalization can be advantageous for companies that want to cater to different languages and reap the benefits of today&#8217;s globalized world. In this article, we&#8217;ll show you tips on internationalization and localization, as well as improving the SEO of your internationalized website.</strong></p>
<p>The acronym GILT (globalization, internationalization, localization and translation) refers to the process businesses undergo to move beyond their national boundaries and cater to international markets.</p>
<p>During the internationalization process, business owners look for tips to boost their website traffic. They follow SEO best practices, find strategic keywords and monitor their results. But there&#8217;s a little-known technique that you might have underestimated in the process of internationalization: translating your website.&nbsp;</p>
<p>In 2021, English was the <a href="https://www.statista.com/statistics/266808/the-most-spoken-languages-worldwide/?utm_source=weglot&#038;utm_medium=blog&#038;utm_campaign=multilingual-website-growth-data">most used language worldwide</a>, because it had 1.35 billion speakers. But English is only used by around <a href="https://blog.weglot.com/top-multilingual-website-stats-and-website-localization-trends-2021/">25%</a> of global internet users.</p>
<p>Technology makes it possible for merchants to ensure their site&#8217;s user interface can support a foreign region or language. As such, merchants that aim for internationalization should consider translating their website, especially if they&#8217;re capable of worldwide shipping. That way, their business or companies can expand on a much bigger scale.</p>
<p>If you&#8217;re looking for tips on the internationalization and localization process, here’s what you need to know.</p>
<h2 id="whatarewebsiteinternationalizationandlocalization">What Are Website Internationalization and Localization?</h2>
<p>Internationalization is the process that involves ensuring your site can accommodate multiple languages and have the appropriate website architecture to do so.</p>
<p>During the website design and development phase, internationalization may entail having larger character encodings to fit foreign scripts. Likewise, the user interface must have ample space to accommodate the number of letters required for Chinese, Korean, or Russian characters. It should also be able to cater to languages that require individuals to read from right to left, instead of the usual left to right format.</p>
<p>For instance, IKEA&#8217;s internationalized instructional manual has simple and clear illustrations that make it easy for consumers to understand the setup process, regardless of their nationality.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631520874ikea-assembly.jpeg" alt="IKEA assembly instructions" /></p>
<p>Meanwhile, localization is the process of making a product or message resonate with your specific target market. It ensures the site and your marketing messages abide by cultural factors and practices in the area.</p>
<p>For example, a localized product page must use the appropriate system of measurement, follow legal requirements, use local currencies, number formats, and so on.</p>
<p>The process of internationalization and localization of materials is often abbreviated as i18n and L10n.</p>
<p>Localization and internationalization can improve your communication with consumers across the world. This process is definitely an advantage in markets where consumers use different languages, such as European or Asian countries.&nbsp;</p>
<h2 id="thebenefitsofwebsitelocalizationandinternationalization">The Benefits of Website Localization and Internationalization</h2>
<p>Billions of people across the world are non-native speakers. Thus, ecommerce merchants that want to widen their reach and boost their appeal in a foreign locale should consider adopting a multilingual website.</p>
<p>Let&#8217;s take a look at some of the perks of internationalization and localization.</p>
<h3 id="1internationalizationletsyoucompeteagainstlocalbusinesses">1. Internationalization lets you compete against local businesses</h3>
<p>An internationalized website lets merchants compete with local businesses across the world where English is not the main language.</p>
<p>Not surprisingly, consumers prefer websites that speak to them in their own native tongue. An interesting study found <a href="https://blog.weglot.com/top-multilingual-website-stats-and-website-localization-trends-2021/">73% of shoppers</a> prefer to purchase from a website that uses their own language.</p>
<h3 id="2internationalizationandlocalizationcanboostsearchability">2. Internationalization and localization can boost searchability</h3>
<p>Let&#8217;s say you wanted to expand your ecommerce business to France and Spain.</p>
<p>Shoppers in these markets use their own native language when typing in search results. So if your website isn&#8217;t translated, they won&#8217;t be able to find your product pages on Google.&nbsp;</p>
<p>In this scenario, localization and internationalization boost your searchability. Without i18n and L10n, your chances of adapting to international markets will be slim.&nbsp;</p>
<h3 id="3internationalizationcanincreasesales">3. Internationalization can increase sales</h3>
<p>The localization process can help increase conversion rates.&nbsp;</p>
<p><a href="https://lingmointernational.com/blog/6-ways-a-multilingual-website-can-increase-web-traffic/">46% of website users</a> state that the localized content is perceived as more trustworthy, which increases their likelihood of buying from the brand.</p>
<p>In fact, businesses that have undergone the localization process have achieved enviable results.&nbsp;</p>
<p>Lifestyle clothing brand La Machine Cycle Club <a href="https://weglot.com/customers/la-machine-cycle-club/">increased conversion rates by 25%</a> through the localization of their site in three languages.&nbsp;</p>
<p>Likewise, Swedish ecommerce brand Ron Dorff&#8217;s localization involved the translation of 150 product pages into three languages. As a result, they increased international sales by 70% and <a href="https://weglot.com/customers/ron-dorff/">increased traffic by 400%</a>.&nbsp;</p>
<p>These success stories prove that localization and internationalization can have a big impact on your sales. Because you can communicate with consumers better, you can achieve higher rates of conversion.</p>
<h3 id="4internationalizationandlocalizationisacosteffectivecustomeracquisitiontactic">4. Internationalization and localization is a cost-effective customer acquisition tactic</h3>
<p>Website internationalization and localization don&#8217;t have to be expensive endeavors. Software and <a href="https://weglot.com/">WordPress plugins</a> like <a href="https://weglot.com/">Weglot</a> can translate your website at minimal cost — and they&#8217;re extremely affordable.</p>
<h2 id="9strategiesforsuccessfulwebsitelocalizationandinternationalization">9 Strategies for Successful Website Localization and Internationalization</h2>
<p>What are the steps involved in the process of adapting to international consumers? Here are the best practices for a successful internationalization process.</p>
<h3 id="1researchthespecifictargetmarket">1. Research the specific target market</h3>
<p>International consumers use different search terms, slang, or phrases when scouring deals, bargains, and cool products. Likewise, they may also have different customs or practices when buying a product or service.</p>
<p>That means you&#8217;ll need to research your target market and analyze your competitors. We highly recommend getting in touch with native marketers, SEO specialists, or agencies to guide you through the process.</p>
<h3 id="2translateseoelements">2. Translate SEO elements</h3>
<p>Before people check out your landing page, they assess meta descriptions and SEO titles. If these pages aren&#8217;t translated into their native language, you&#8217;re less likely to end up on the top search results.</p>
<p>For example, when typing &#8220;김치&#8221; or kimchi in Google, the top search results are pages with a Korean title and description. That means when these elements aren&#8217;t translated, you may unknowingly turn people away.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631520861kimchi.jpg" alt="Kimchi google search Korea" /></p>
<p>That&#8217;s precisely why the recommendation is to translate the following SEO elements:</p>
<ul>
<li>title</li>
<li>meta description</li>
<li>image alt tags</li>
<li>URL</li>
</ul>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/internationalization-multilingual-site/?utm_source=rss">Internationalization: How to Boost Traffic with a Multilingual Site</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/internationalization-multilingual-site/?utm_source=rss</link><guid isPermaLink="false">/?p=207059</guid><category><![CDATA[Entrepreneur]]></category><category><![CDATA[Marketing]]></category><category><![CDATA[Web]]></category><dc:creator><![CDATA[Monique Danao]]></dc:creator><pubDate>Wed, 06 Oct 2021 15:00:11 GMT</pubDate><metaDesc>If you sell globally, internationalization is important, and you should consider building a multilingual website. Learn how to do it right.</metaDesc></item><item><title><![CDATA[Marketing Automation: The Best AI Tools for Boosting Growth]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/marketing-automation-ai-tools-boost-growth/?utm_source=rss"
              title="Marketing Automation: The Best AI Tools for Boosting Growth"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633400963ai-marketing-automation.jpg"
        alt="Marketing Automation: the Best AI Tools for Boosting Growth"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633400963ai-marketing-automation-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633400963ai-marketing-automation-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633400963ai-marketing-automation-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633400963ai-marketing-automation.jpg 1200w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong>The best AI-powered marketing automation tools are the ones that make it easy for marketers to create and optimize content, increase sales, analyze data, improve marketing efforts, and get the word out about your business.</strong></p>
<p>Let’s take a look at some advanced artificial intelligence (AI) tools and platforms that can help your business reach its full potential.</p>
<h2 id="1jarvis">1. Jarvis</h2>
<p>Writing engaging marketing copy is no easy feat for marketers. The best content marketers have a way with words that helps them persuade customers to buy their goods and services.</p>
<p>Using advanced AI marketing tools such as <a href="https://blogstalgia.com/jarvis-ai-review/">Jarvis AI</a>, you can generate high-converting copy for ads, emails, landing pages, social media posts, ecommerce product descriptions, and blog posts, without spending hours agonizing over every single word or spending a fortune hiring an expert copywriter.</p>
<p>This AI tool uses machine learning technology and the GPT-3 model created by <a href="https://openai.com/about/">OpenAI</a> — an artificial intelligence research lab co-founded by Elon Musk — to generate human-like text. </p>
<p>It includes templates for popular marketing frameworks like AIDA and PAS. All you need to do is add your company or product name, product descriptions, and a tone of voice to generate your marketing message.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631589872Jarvis-AI-Marketing-Framework-Templates.jpg" alt="Jarvis AI-powered marketing automation templates" /></p>
<p>Below is an example of a marketing copy for a fictional electric car company generated with the PAS framework. </p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631589849AI-Generated-PAS-Marketing-Copy.jpg" alt="AI-generated PAS marketing copy" /></p>
<h3 id="jarvisfeatures">Jarvis features</h3>
<p>For those marketers handling ecommerce stores, this tool can also generate product descriptions, a bullet point list of features, and SEO product page title and meta descriptions.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631589845AI-Ecommerce-Product-Descriptions.jpg" alt="Jarvis e-commerce product description templates" /></p>
<p>When it comes to <a href="https://www.sitepoint.com/automated-email-marketing-getting-started/">email marketing automation</a>, many marketers use email service providers (ESPs) like ConvertKit and MailChimp to send a series of automated emails to potential customers. With Jarvis, you can basically generate the content that goes inside those emails without needing any copywriting knowledge.</p>
<p>This AI software can also help automate part of your content marketing strategy, which is the <a href="https://www.statista.com/statistics/190858/most-effective-online-marketing-channels-according-to-us-companies/">most effective</a> digital marketing technique according to a survey done by Statista.</p>
<p>For example, you can use Jarvis’ long-form editor and give it commands like “write blog post titles about the best HTML and CSS books” or “write an intro paragraph for an article about learning HTML and CSS,” and it will generate those for you.</p>
<p>For a more in-depth guide on how to write long-form blog posts with AI, you can explore this <a href="https://blogstalgia.com/write-blog-posts-with-jarvis/">Jarvis tutorial</a>.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631589867Jarvis-AI-Long-Form-Editor.png" alt="Jarvis long-form editor commands" /></p>
<h3 id="jarvisrecipes">Jarvis recipes</h3>
<p>Jarvis has a set of pre-made workflows called &#8220;Recipes&#8221; that contain multiple commands to help you speed up your content creation process.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631589877Jarvis-AI-Recipes-Example.jpg" alt="Recipe for writing a blog post" /></p>
<p>For example, you can run recipes for <a href="https://community.jarvis.ai/recipes/321f6174-b233-47cd-8a21-29aee00e016f">writing blog posts</a>, <a href="https://community.jarvis.ai/recipes/b131075f-6d57-48c0-84c8-c46a9cc9aa78">rewriting content</a>, and <a href="https://community.jarvis.ai/recipes/d00b62b9-a529-4285-ac9a-a291998c7866">crafting outreach emails</a> by just following the commands.</p>
<p>For those doing Pinterest and social media marketing, you can create descriptions for your <a href="https://www.sitepoint.com/build-a-brand-on-instagram-with-these-25-tips/">Instagram posts</a>, Facebook posts, and Pinterest Pins.</p>
<h2 id="2surfer">2. Surfer</h2>
<p>There&#8217;s no doubt that SEO is an integral part of digital marketing. It has the power to <a href="https://www.sitepoint.com/increase-web-traffic-using-automation/">increase your website traffic</a>, conversion rates, and <a href="https://www.sitepoint.com/creating-a-brand-identity-20-questions/">brand awareness</a>.</p>
<p>An artificial intelligence tool like <a href="https://surferseo.com/">Surfer</a> allows you to perform more accurate SEO analysis by using natural language processing (NLP).</p>
<p>Since introducing the <a href="https://ai.googleblog.com/2018/11/open-sourcing-bert-state-of-art-pre.html">BERT</a> algorithm update, Google has been focusing more on recognizing user intent and the context in which a keyword is being used instead of simply looking at each individual keyword.</p>
<p>Surfer added this to their platform via the Google NLP API. So you can easily check which words, phrases, and sentiment Google believes to be important. </p>
<p>With this AI software platform, you can plan content based on keywords or your domain. </p>
<h3 id="contentplanningbasedonkeywords">Content Planning Based on Keywords</h3>
<p>When adding your main keyword or blog niche, Surfer will generate several topic clusters using Google data and Surfer&#8217;s NLP algorithm. Below is an example of some topic clusters generated for the keyword “vanilla javascript”.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631589908Vanilla-JavaScript-AI-Generated-Topic-Clusters.jpg" alt="Content planner using keywords" /></p>
<p>Each topic cluster will include a few relevant target keywords along with their search volume and projected total traffic. These boxes can then be used to create new blog posts.</p>
<h3 id="contentplanningbasedondomain">Content Planning Based on Domain</h3>
<p>When it comes to planning content using your domain, Surfer shows you a list of keywords that you rank for but aren’t using inside your articles, as well as your ranking position for each of them, the traffic they bring, and the monthly search volume.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631589885Planning-Content-Based-on-Domain-With-Surfer-SEO.jpg" alt="Content planner using domain" /></p>
<h3 id="surfercontenteditor">Surfer Content Editor</h3>
<p>One of Surfer&#8217;s main features is its content editor, which includes live updates on how your content is doing in terms of SEO. </p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631589904Surfer-SEO-Content-Editor-With-NLP.jpg" alt="Surfer SEO content editor" /></p>
<p>Inside the content editor, you&#8217;ll be able to see:</p>
<ul>
<li>NLP phrases to include and how often to use them</li>
<li>how long your blog post should be</li>
<li>how many headings, images, and paragraphs you should use</li>
</ul>
<p>If you decide to use an AI tool like Jarvis, the two also integrate, so you can see your content score inside Jarvis&#8217; long-form editor instead of having to paste your article back inside Surfer.</p>
<p>For organizations with large marketing teams, you have a document-sharing feature that makes collaboration easier.</p>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/marketing-automation-ai-tools-boost-growth/?utm_source=rss">Marketing Automation: The Best AI Tools for Boosting Growth</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/marketing-automation-ai-tools-boost-growth/?utm_source=rss</link><guid isPermaLink="false">/?p=206951</guid><category><![CDATA[Computing]]></category><category><![CDATA[Content Marketing]]></category><category><![CDATA[Email Marketing]]></category><category><![CDATA[Entrepreneur]]></category><category><![CDATA[Low Code]]></category><category><![CDATA[Marketing]]></category><category><![CDATA[SEO & SEM]]></category><dc:creator><![CDATA[Christian Coulson]]></dc:creator><pubDate>Tue, 05 Oct 2021 15:00:07 GMT</pubDate><metaDesc>Learn about nine AI-powered marketing automation tools for optimizing content, increasing sales, analyzing data, and promoting your business.</metaDesc></item><item><title><![CDATA[The 4 Best Linux Distros for Helping You Stay Anonymous]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/anonymous-linux-distros/?utm_source=rss"
              title="The 4 Best Linux Distros for Helping You Stay Anonymous"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633313854linux-anonymous.jpg"
        alt="The 4 Best Linux Distros for Helping You Stay Anonymous"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633313854linux-anonymous-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633313854linux-anonymous-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633313854linux-anonymous-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633313854linux-anonymous.jpg 1200w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong>In this article, we&#8217;ll look at four Linux distros that help to keep you anonymous on the Web. The Linux operating system offers a lot of privacy options, and it&#8217;s arguably the best OS to use if security and privacy is important to you.</strong></p>
<h2 id="theprivacyproblem">The Privacy Problem</h2>
<p>It&#8217;s difficult to stay anonymous online these days. Whether you&#8217;re browsing the Web or even using programs connected to the Internet, you&#8217;re being tracked. Even your operating system is watching you.</p>
<p>By running an operating system like Windows, or a program like VS Code, you&#8217;re being tracked via telemetry. Most of the data that&#8217;s collected about you is used to improve the software you use every day, but if your priority is to stay anonymous, you should be looking for better options.</p>
<p>Various distros of the Linux operating system offer features that enhance anonymity and privacy. But being anonymous can have drawbacks.</p>
<p><em>Before I go on, a disclaimer of sorts. The aim of this article is to show what&#8217;s available for protecting your privacy. It&#8217;s not intended as an encouragement to engage in practices prohibited by your country&#8217;s laws.</em></p>
<h2 id="whatdoesitmeantobeanonymous">What Does It Mean to Be Anonymous?</h2>
<p>Staying anonymous can mean different things to different people, so let&#8217;s clarify this concept before moving on.</p>
<p>To stay anonymous online, you need to establish who you&#8217;re hiding from, and what tools will enable you to hide your real identity.</p>
<p>You can use a threat modeling approach to identify the risks you might be exposed to. To put it simply, the U.S. National Institute of Standards and Technology (NIST) has four steps:</p>
<ol>
<li>identify and characterize the system and data of interest</li>
<li>identify and select the attack vectors to be included in the model</li>
<li>characterize the security controls for mitigating the attack vectors</li>
<li>analyze the threat model</li>
</ol>
<p>If you want to know more about threat modeling, follow the <a href="https://csrc.nist.gov/CSRC/media/Publications/sp/800-154/draft/documents/sp800_154_draft.pdf">NIST draft</a>, which includes detailed information about this process.</p>
<p>For example, a journalist may want to stay anonymous while sharing their thoughts on the Web. This would cut out the fear of discrimination or retaliation. Simply put, they don&#8217;t want people to know who they are, so they know who they must hide from.</p>
<p>Once you know who you want to stay anonymous from, it&#8217;s time to use tools like Tor or the anonymity-focused Linux distros shown next.</p>
<p>Of course, anonymity has many advantages, but here are the main ones:</p>
<ul>
<li>freedom of speech: you can share your thoughts without the fear of being judged</li>
<li>Less tracking: it&#8217;s more difficult to track what you&#8217;re doing online</li>
<li>Personal safety: no one knows your real identity</li>
<li>Data security: your data is precious, and staying anonymous makes it harder to steal it</li>
</ul>
<h2 id="variousmethodsforusingthefollowingdistros">Various Methods for Using the Following Distros</h2>
<p>In general, Linux-based operating systems are more secure and privacy-oriented than proprietary ones. Taking this into account, it&#8217;s important to know how the following distros work, and how they&#8217;ll help you stay anonymous.</p>
<h3 id="usingvirtualmachines">Using Virtual Machines</h3>
<p>Virtual machines (VMs) are environments that work as a virtual computer that runs on top of your physical computer.</p>
<p>VMs are isolated from the rest of the system, and they can be used to run almost any operating system, so they support the following Linux distros.</p>
<p>The most popular software for running VMs is <a href="https://www.virtualbox.org/">VirtualBox</a>, which is an open-source hypervisor created by Oracle. It works in Windows, Linux, and macOS, and is easy to set up.</p>
<p>From a normal user perspective, the main advantage of using a VM is that you can run it along with your host operating system, which means you can use both at the same time.</p>
<h3 id="usingalivebootusb">Using a Live Boot USB</h3>
<p>A live USB runs an operating system without installing it on your computer. A live USB lets you jump into a live environment when you use it to install a Linux distro. A good example of this is the Parrot OS live environment, pictured below.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631231976parrotos-live-env.jpg" alt="Parrot OS live environment" /></p>
<p>The main advantage of this method is that you don&#8217;t need to install anything, so you can run the live USB on your computer, use the Linux distro, unplug the USB, and continue using your daily-driver OS.</p>
<p>Take a look at Qubes for a total VM-based operating system.</p>
<h3 id="installingonbaremetal">Installing on Bare Metal</h3>
<p>If you want to stay anonymous, installing a Linux distro as the main OS on your system isn&#8217;t the best option, since you&#8217;ll be using your computer through multiple sessions.</p>
<p>Each time you use your computer, you leave traces of information about the websites you&#8217;ve visited, files you opened, and even the Wi-Fi network you used.</p>
<p>That&#8217;s why using a live boot USB, or a VM, is usually more secure.</p>
<p>Once you&#8217;re done with the live environment, shut it down and all the data will go away. Likewise with VMs, you can delete them once the job is done.</p>
<h2 id="beforejumpinginwhatstor">Before Jumping In, What&#8217;s Tor?</h2>
<p><a href="https://www.torproject.org/">Tor</a> — The Onion Router — is an open-source project that hides your IP address when browsing the Internet. It redirects your web request to a worldwide overlay network with over six thousand relays.</p>
<p>When you use Tor, you&#8217;re routing all of your internet traffic through three machines selected from thousands of volunteer computers from different people and organizations.</p>
<p>The first relay knows who are you, but not the next relay you&#8217;re going to connect to. The third relay only knows where you&#8217;re going (an external server, such as a web page) but not your original IP address.</p>
<p>All of this occurs in an encrypted environment, and that&#8217;s why it&#8217;s so important to avoid insecure pages — those without HTTPS.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631234152tordiagram-htw3.png" alt="Tor diagram" /></p>
<p>This <a href="https://2019.www.torproject.org/about/overview.html.en">process</a> makes it almost impossible for anyone (websites, internet providers, and so on) to know your IP address.</p>
<h3 id="whatnottodowhenusingtor">What not to do when using Tor</h3>
<p>Tor lets you hide your IP address, but it becomes useless if you don&#8217;t use it properly. Here are a couple of things you <strong>shouldn&#8217;t</strong> do when using Tor:</p>
<ul>
<li>authenticate using your cellphone</li>
<li>use personal social accounts in Tor (Twitter, Facebook, Gmail)</li>
<li>share personal information</li>
<li>use an old Tor version</li>
<li>use Google search; DuckDuckGo doesn&#8217;t collect user data</li>
<li>browse any non-HTPPS (unencrypted) web pages</li>
</ul>
<p>Once you&#8217;ve internalized these tips, you can use a shortcut made for the average user, the Tor browser bundle.</p>
<p>Nowadays, you can download the <a href="https://www.torproject.org/download/">Tor Browser</a> which is a browser that runs on top of Tor in all major operating systems. If you want, you can also download and compile <a href="https://www.torproject.org/download/tor/">Tor source code</a>.</p>
<p>But using Tor has some drawbacks. The most important one is that it limits your internet speed. This occurs because you&#8217;re routing your traffic through the Tor network, which means each web request you do has to pass by multiple computers.</p>
<p>Another disadvantage is that some websites like Netflix, Bank sites, and so on, are blocked by Tor. Also, if you use Tor regularly, you&#8217;ll need to <a href="https://arstechnica.com/tech-policy/2016/02/some-websites-turning-law-abiding-tor-users-into-second-class-citizens/">fill in CAPTCHA forms in most pages you visit</a>.</p>
<p>Of course, this is a small price to pay for security and anonymity.</p>
<h2 id="tails">Tails</h2>
<p><a href="https://tails.boum.org/">Tails</a> is an anonymous Linux distribution based on Debian. It&#8217;s a lightweight and fast operating system which uses <a href="https://www.gnome.org/">Gnome</a> as its default desktop environment.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/08/1630361765tails-gnome.png" alt="Tails Gnome environment" /></p>
<p>It starts from a clean state and leaves no trace when you leave. That&#8217;s called “amnesia”, and it&#8217;s the magic that makes Tails a secure OS. You can use someone else&#8217;s computer securely because Tails doesn&#8217;t write to disk at any point.</p>
<p>Another awesome thing about Tails is that it uses the Tor relay as the <strong>only</strong> way to access the Internet. That means that all the networking programs you use (programs that need to connect to the Internet) must redirect their traffic through a Tor network.</p>
<p>So even if you&#8217;re using a simple app like Thunderbird, all the information it sends or retrieves from the Internet must pass through Tor.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/08/1630360720tails-thunderbird.png" alt="Using Thunderbird inside Tails" /></p>
<p>By default, Tails has installed the following apps:</p>
<ul>
<li><a href="https://www.thunderbird.net/en-US/">Thunderbird</a></li>
<li><a href="https://www.torproject.org/download">Tor Browser</a>, with Ublock Origin, and DuckDuckGo as the default search engine</li>
<li><a href="https://www.libreoffice.org/">Libre Office</a></li>
<li>graphical editing apps like GIMP and Inkscape</li>
</ul>
<p>After using it for a while, it feels like a solid yet lightweight operating system, so you could run it on old computers. (It&#8217;s based on Debian 10)</p>
<p>Also, I found this distro comes in handy when using a friends&#8217; computer, so you can keep both users&#8217; data safe.</p>
<h3 id="tailsfeatures">Tails Features</h3>
<ul>
<li>Tor relay for everything.</li>
<li>Tails&#8217; storage isn&#8217;t persistent, so there&#8217;s no way to track you after you log out. However, you can enable an encrypted/persistent storage in case you need to install some other program or save some additional settings.</li>
<li>It connects to the hardware of the computer but doesn&#8217;t interact with disk drives.</li>
<li>In most cases, you can use it on virus-infected devices without any risk.</li>
<li>It includes common-use apps, as well as <a href="https://tails.boum.org/doc/about/features/index.en.html">encryption and privacy-focused software</a>.</li>
<li>It allows you to install any package available in official Debian repositories.</li>
</ul>
<p>You can access a more detailed list of features on <a href="https://tails.boum.org/doc/about/features/index.en.html">Tails&#8217; official website</a>.</p>
<h3 id="tailsdownloadoptions">Tails download options</h3>
<p>You&#8217;ll need to download Tails&#8217; USB stick version and install it on an 8Gb USB (or greater).</p>
<p>If you want other options, Tails offers two ways of usage: via USB stick, and via virtualization (for use inside a VM).</p>
<p>Here are the different installation images:</p>
<ul>
<li><a href="https://tails.boum.org/install/download/index.en.html">USB</a></li>
<li><a href="https://tails.boum.org/install/vm-download/index.en.html">Virtual machine ISO image</a></li>
</ul>
<p><em>Note: Running Tails in a VM has two problems. Your host OS and hypervisor can monitor what you&#8217;re doing in Tails, and Tails can leave traces on the hard disk, which is why it warns you when you&#8217;re using it in a VM.</em></p>
<p>It&#8217;s up to you if you want to gain some degree of comfort (using Tails without restarting your PC) while losing a little bit of security.</p>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/anonymous-linux-distros/?utm_source=rss">The 4 Best Linux Distros for Helping You Stay Anonymous</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/anonymous-linux-distros/?utm_source=rss</link><guid isPermaLink="false">/?p=206938</guid><category><![CDATA[Web]]></category><dc:creator><![CDATA[Daniel Diaz]]></dc:creator><pubDate>Mon, 04 Oct 2021 15:00:26 GMT</pubDate><metaDesc>Looking for more privacy and anonymity online? Learn about the Linux distros that are best optimized for keeping you anonymous online.</metaDesc></item><item><title><![CDATA[Get Started with Bubble, a No-code Tool for Building Serious Apps]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/bubble-build-apps-no-code/?utm_source=rss"
              title="Get Started with Bubble, a No-code Tool for Building Serious Apps"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633373267bubble.jpg"
        alt=""
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633373267bubble-300x158.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633373267bubble-1024x538.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633373267bubble-768x403.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633373267bubble.jpg 1200w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong>Have you ever wondered what it’s like to build web applications without the need to write a single line of code? Enter Bubble, a visual programming language that lets you build web applications using a drag-and-drop editor.</strong></p>
<p>In this article, I’ll be introducing you to Bubble. You’ll learn what it is, what features it offers, and what sort of web applications you can build with it. Then we’ll compare it to traditional web application development and examine the pros and cons of using Bubble. Lastly, we’ll build an app using Bubble so you can get a feel for how to build stuff with it.</p>
<h2 id="whatisbubble">What is Bubble?</h2>
<p>Bubble is both a visual programming tool and a platform. You build the application using a drag-and-drop interface in the browser, and then Bubble acts as the platform that serves your application. This means that everything you need to build a web application is in your web browser. Bubble takes care of all the setup and provisioning required to run a web application.</p>
<p>Bubble is geared towards both coders and non-coders alike. But it mostly appeals to non-coders who want to build web applications without knowing the traditional tools of trade. </p>
<h2 id="features">Features</h2>
<p>Bubble is packed with <a href="https://bubble.io/feature-index">lots of features</a>. We can’t cover all of them here, but we’ll try to cover the most important ones.</p>
<ul>
<li>
<p><strong>UI Builder</strong>. With Bubble’s UI builder, you can drag and drop visual elements such as text, images, icons, maps, videos and other common UI elements into its canvas. Web apps created with Bubble incorporate responsive design and can be easily localized to any language.</p>
</li>
<li>
<p><strong>Hosting platform</strong>. After you build the app using the drag-and-drop UI builder, Bubble takes care of deploying and hosting the app for you. It also has a version control system that allows you to revert your application to any point in time. Bubble also allows you to easily scale the app as the need arises. You&#8217;l know when it’s time to upgrade, because Bubble has graphs on the server metrics such as page views and server capacity usage. The only downside to Bubble being a platform is that you can’t host the app you built with Bubble on your own server.</p>
</li>
<li>
<p><strong>Plugins</strong>. With <a href="https://bubble.io/plugins">plugins</a>, you can integrate functionality from various tools around the Web into your web application. For example, if you want your users to log in with their Facebook account, you can do so with the <a href="https://bubble.io/integration/facebook">Facebook plugin</a>.</p>
</li>
<li>
<p><strong>Realtime collaboration</strong>. Bubble is team-friendly. It allows up to 40 collaborators.</p>
</li>
</ul>
<p>We’ll only be covering the UI builder in this article.</p>
<h2 id="whatyoucanbuildwithbubble">What You Can Build with Bubble</h2>
<p>Due to its flexibility, you can build any type of web application with Bubble. </p>
<ul>
<li>
<p><strong>CRUD apps</strong>. These are apps that let users create, read, update, and delete data. Most apps today are really just CRUD apps with different features added to it. So with the ability to build CRUD apps, you can already build all kinds of functionality. Think Amazon or YouTube. At their core, they’re really just CRUD apps.</p>
</li>
<li>
<p><strong>Realtime apps</strong>. These are apps that let users communicate or collaborate in real time, either via chat, audio, video call, or a shared interface. Examples of these apps include Messenger, Discord, and Slack.</p>
</li>
<li>
<p><strong>API-connected app</strong>. The idea that “no man is an island” applies to apps as well. With Bubble, you can build apps that make use of third-party APIs all around the Internet. Think <a href="https://stripe.com/">Stripe</a> for handling payments, or <a href="https://www.algolia.com/">Algolia</a> for handling search. The possibilities are endless with API access. Through an API, you can provide any type of functionality that’s not already provided by Bubble. It also goes the other way around: the apps you create using Bubble can also expose an API that can be used by others.</p>
</li>
<li>
<p><strong>Responsive apps</strong>. These are apps that look good no matter what device you’re viewing them on. With Bubble, you get this for free, as the apps you build with it are already responsive.</p>
</li>
<li>
<p><strong>Progressive web apps</strong>. These are web apps that can be added to your home screen for easy access. They won’t have access to native functionality that’s available to native Android or iOS apps, but they can be accessed from the home screen and they can work offline. So it’s the closest thing you can get to a native app. </p>
</li>
</ul>
<p>If you want to see live examples of apps that you can build with Bubble, check out their <a href="https://bubble.io/showcase">showcase page</a>. You can also check out their <a href="https://bubble.io/how-to-build">how to build</a> page to see a tutorial on how to build apps like Instagram, Dropbox, or TripAdvisor. Do note that these aren&#8217;t super detailed tutorials; they&#8217;re just general ones to give you an idea of the general steps for building those kinds of apps. You’ll still need some level of proficiency in using Bubble to be able to build those apps.</p>
<h2 id="whatcantbebuiltwithbubble">What Can’t be Built with Bubble</h2>
<ul>
<li>
<p><strong>Native apps</strong>. At the time of writing this article, Bubble doesn’t support building native apps that run on Android or iOS. Bubble says in <a href="https://manual.bubble.io/new-start-here/the-basics">its documentation</a> that there’s a plan to add this feature to the core functionality, but it’s not on Bubble&#8217;s timeline yet. So we don’t really know when it will become available. For now, the only feasible option is to either create a progressive web app or wrap the web app in a web view using tools like React Native, Flutter, or Cordova.</p>
</li>
<li>
<p><strong>Games</strong>. If you’re planning to build games and other apps with complex graphics requirements with Bubble, you’re out of luck. Bubble is specifically made for creating web apps. You can probably get away with creating simple puzzle games, but that’s it.</p>
</li>
</ul>
<h2 id="bubblevstraditionalwebapplicationdevelopment">Bubble vs Traditional Web Application Development</h2>
<p>In this section, we’ll look at how Bubble compares to the traditional way of developing web applications, based on these metrics:</p>
<ul>
<li>control over code and data</li>
<li>development speed</li>
<li>development cost</li>
<li>running costs</li>
</ul>
<h3 id="controlovercodeanddata">Control over code and data</h3>
<p>Bubble has a data export feature that allows you to export user-created data via CSV files. The only downside is that everything runs on Bubble&#8217;s platform, so you can’t really export your app and run it somewhere else. <a href="https://manual.bubble.io/new-start-here/application-and-data-ownership#exporting-your-application-and-data">Bubble has guaranteed to release the source code of your app</a> under an open-source license in case it goes out of business.  </p>
<p>With traditional web development, you have control over everything, since the source code is written from scratch and it’s hosted on a server of your choice.</p>
<h3 id="developmentspeed">Development speed</h3>
<p>Bubble comes with all the tools you need to build a web application via a drag-and-drop interface. This makes the development process faster than traditional web development. That said, it also comes with a learning curve that&#8217;s dependent on the thing you want to build. If it’s a simple one-page app that only does one or two things, it’s probably going to take a few hours to learn. But if it’s a fairly complex app, expect to invest one to three months before you can become productive enough to build the app quickly. </p>
<p>With traditional web development, it can take at least three months to learn the technologies and tools. But it can easily take six months to a year depending on various factors. Once that’s done, however, you can expect to be productive with building most apps. </p>
<p>Overall, the development speed will mostly depend on your level of experience. If you’re a complete novice, Bubble will be faster. If you already have some development experience, it’s usually faster to just build your app via the traditional route. Yes, your development experience will probably help with a lot of the concepts in building apps with Bubble. But the learning curve for building fairly complex apps will still be great.</p>
<h3 id="developmentcost">Development cost</h3>
<p>With Bubble, you can pretty much build the app yourself, even if you have no prior experience. Bubble provides lots of free resources for learning how to build different kinds of apps. Of course, you can hire other people to do it for you. But the main premise of Bubble (and other no-code platforms in general) is for lowering the development costs by doing the development yourself.</p>
<p>With traditional web development, you&#8217;ll most likely have to hire a web developer to build the app for you, due to the steep learning curve involved.</p>
<p>Overall, the associated development costs when developing your app with Bubble is significantly lowered compared to traditional development. </p>
<h3 id="runningcosts">Running costs</h3>
<p>Bubble starts with a free plan. This allows you to learn the platform and build an app with it. Bubble&#8217;s personal plan will be used mostly for staging and testing purposes. Once you’re ready to launch your app, you’ll have to switch to either professional or production plans. You can checkout out Bubble&#8217;s <a href="https://bubble.io/pricing/compare">pricing page</a> for more info on what you get with each plan.</p>
<p>Bubble has a concept called “units”, which are basically reserved server capacity for scaling up. Additional units are needed once your app acquires a certain amount of active users. Aside from that, another limiting factor is the file storage. Each plan has a total file storage allotment assigned to it. So you’ll most likely meet the ceiling sooner if your app stores a lot of user-uploaded media. There are plugins available for handling file storage, but those are going to cost additional per month.</p>
<p>On the other hand, running your app via the traditional way will cost as little as $5 per month for the server. The only downside is that you have to set up everything from scratch — things like the web server, database, and queue server. Realistically speaking, you won’t just be paying $5 per month, since you also have to bring in file storage, error reporting, and deployment services. Those can easily increase your total running costs.</p>
<p>Overall, the costs associated with running your app will be highly dependent on the services you need to pull in and the server capacity you need.</p>
<h2 id="buildinganappwithbubble">Building an App with Bubble</h2>
<p>For you to get a feel of what it’s like to build apps with Bubble, we’ll be creating a simple CRUD app with it. Before proceeding, you first need to create a <a href="https://bubble.io/">Bubble account</a>. </p>
<p>Once you have an account, create a new app.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631011880create-bubble-app.png" alt="Create a new app" /></p>
<p>Once the app is created, the new application assistant will prompt you to get started. Click the <strong>Start with a blank page</strong> button and close the assistant. I don’t know about you, but I always prefer to start from scratch. </p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631011878start-blank.png" alt="New application assistant" /></p>
<p>Now that we have an app, let’s quickly go over what we’re going to build.</p>
<ul>
<li><strong>Authentication feature</strong>. This will allow the user to log in to the system.</li>
<li><strong>Product CRUD</strong>. CRUD is an acronym that describes an app capable of handling the most important database functions for interactivity, and stands for “create, read, update, and delete” — basically allowing the user to maintain product data in a database.</li>
</ul>
<p>We&#8217;ve chosen these two features to show just how effectively Bubble can handle app logic, and ensure this guide teaches you all the concepts you might need to bring your own ideas to life in Bubble.</p>
<h3 id="uibasics">UI basics</h3>
<p>Before we proceed to actually building the app, it’s important to get yourself familiar with the UI first.<br />
<img src="https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631011876blank-app.png" alt="Blank app screen" /></p>
<p>The <strong>Design</strong> tab is where you&#8217;ll usually start. As Bubble is a visual programming language, it always starts with the UI. The <strong>Design</strong> tab contains a list of visual elements that you can drag or click and draw (click the element to select it, release, then draw the element) to the canvas. </p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631011874design-tab.png" alt="Design tab" /></p>
<p>Next is the <strong>Workflow</strong> tab. This is where you&#8217;ll find all the workflows for a specific page. In Bubble, you use workflows to specify what the app does when a certain event happens. For example, when the <strong>Log in</strong> button is clicked, we want to log the user in to the app, clear out the form, then redirect the user to the admin page if the credentials are correct.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631011873workflow-tab.png" alt="Workflow tab" /></p>
<p>The workflows are displayed only per page and not the whole app, so you have to click on the dropdown on the upper left to select which page you want to add a workflow to.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631011871workflow-page.png" alt="Workflow page dropdown" /></p>
<p>The <strong>Data</strong> tab is where you&#8217;ll see the app’s database, the tables within it, and the data within each table. It also comes with a data manager that allows you to perform CRUD operations on each row.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631011869data-tab.png" alt="Data tab" /></p>
<p>If you want to edit the columns for each table, you can do so in the <strong>Data types</strong> tab.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631011867data-types.png" alt="Data types tab" /></p>
<p>Lastly, we have the <strong>Styles</strong> tab. This is where you can customize the app’s overall theme. </p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631011864styles-tab.png" alt="Styles tab" /></p>
<p>There are three other tabs we haven’t gone through: plugins, settings, and logs. We won’t really go over those since we won&#8217;t be using them in the app we’re building here.</p>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/bubble-build-apps-no-code/?utm_source=rss">Get Started with Bubble, a No-code Tool for Building Serious Apps</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/bubble-build-apps-no-code/?utm_source=rss</link><guid isPermaLink="false">/?p=206927</guid><category><![CDATA[Computing]]></category><category><![CDATA[Low Code]]></category><dc:creator><![CDATA[Wern Ancheta]]></dc:creator><pubDate>Sun, 03 Oct 2021 15:00:07 GMT</pubDate><metaDesc>You don't need to be a programmer to build apps. Learn how to create a CRUD app and set up your own server via drag and drop with Bubble.</metaDesc></item><item><title><![CDATA[Understanding and Working with Submodules in Git]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/git-submodules-introduction/?utm_source=rss"
              title="Understanding and Working with Submodules in Git"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632981785git-submodule.jpg"
        alt="Understanding and Working with Submodules in Git"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632981785git-submodule-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632981785git-submodule-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632981785git-submodule-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632981785git-submodule.jpg 1200w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong>Most modern software projects depend on the work of others. It would be a waste of time to reinvent the wheel in your own code when someone else has already written a wonderful solution. That&#8217;s why so many projects use third-party code in the form of libraries or modules.</strong></p>
<p>Git, the world&#8217;s most popular version control system, offers a great way to manage these dependencies in an elegant, robust way. Its &#8220;submodule&#8221; concept allows us to include and manage third-party libraries while keeping them cleanly separated from our own code.</p>
<p>In this article, you&#8217;ll learn why submodules in Git are so useful, what they actually are, and how they work.</p>
<h2 id="keepingcodeseparate">Keeping Code Separate</h2>
<p>To make clear why Git&#8217;s submodules are indeed an invaluable structure, let&#8217;s look at a case <em>without</em> submodules. When you need to include third-party code (such as an open-source library) you can of course go the easy way: just download the code from GitHub and dump it somewhere into your project. While certainly <em>quick</em>, this approach is definitely <em>dirty</em> for a couple of reasons:</p>
<ul>
<li>By brute force copying third-party code into your project, you&#8217;re effectively mixing multiple projects into one. The line between your own project and that of someone else (the library) starts to get blurry.</li>
<li>Whenever you need to update the library code (because its maintainer delivered a great new feature or fixed a nasty bug) you again have to download, copy, and paste. This quickly becomes a tedious process.</li>
</ul>
<p>The general rule in software development to &#8220;keep separate things separate&#8221; exists for a reason. And it&#8217;s certainly true for managing third-party code in your own projects. Luckily, Git&#8217;s submodule concept was made for exactly these situations.</p>
<p>But of course, submodules aren&#8217;t the only available solution for this kind of problem. You could also use one of the various &#8220;package manager&#8221; systems that many modern languages and frameworks provide. And there&#8217;s nothing wrong about that!</p>
<p>However, you could argue that Git&#8217;s submodule architecture comes with a couple of advantages:</p>
<ul>
<li>Submodules provide a consistent, reliable interface — no matter what language or framework you&#8217;re using. Especially if you&#8217;re working with multiple technologies, each one might have its own package manager with its own set of rules and commands. Submodules, on the other hand, always work the same.</li>
<li>Not every piece of code might be available over a package manager. Maybe you just want to share your own code between two projects — a situation where submodules might offer the simplest possible workflow.</li>
</ul>
<h2 id="whatgitsubmodulesreallyare">What Git Submodules Really Are</h2>
<p>Submodules in Git are really just standard Git repositories. No fancy innovation, just the same Git repositories that we all know so well by now. This is also part of the power of submodules: they&#8217;re so robust and straightforward because they are so &#8220;boring&#8221; (from a technological point of view) and field-tested.</p>
<p>The only thing that makes a Git repository a submodule is that it&#8217;s placed <em>inside</em> another, <em>parent</em> Git repository.</p>
<p>Other than that, a Git submodule remains a fully functional repository: you can perform all the actions that you already know from your &#8220;normal&#8221; Git work — from modifying files, all the way to committing, pulling and pushing. Everything&#8217;s possible in a submodule.</p>
<h2 id="addingasubmodule">Adding a Submodule</h2>
<p>Let&#8217;s take the classic example and say we&#8217;d like to add a third-party library to our project. Before we go get any code, it makes sense to create a separate folder where things like these can have a home:</p>
<pre><code class="bash language-bash">$ mkdir lib
$ cd lib
</code></pre>
<p>Now we&#8217;re ready to pump some third-party code into our project — but in an orderly fashion, using submodules. Let&#8217;s say we need a little &#8220;timezone converter&#8221; JavaScript library:</p>
<pre><code class="bash language-bash">$ git submodule add https://github.com/spencermountain/spacetime.git
</code></pre>
<p>When we run this command, Git starts cloning the repository into our project, as a submodule:</p>
<pre><code class="bash language-bash">Cloning into 'carparts-website/lib/spacetime'...
remote: Enumerating objects: 7768, done.
remote: Counting objects: 100% (1066/1066), done.
remote: Compressing objects: 100% (445/445), done.
remote: Total 7768 (delta 615), reused 975 (delta 588), pack-reused 6702
Receiving objects: 100% (7768/7768), 4.02 MiB | 7.78 MiB/s, done.
Resolving deltas: 100% (5159/5159), done.
</code></pre>
<p>And if we take a look at our working copy folder, we can see that the library files have in fact arrived in our project.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631605297finder-after-cloning-submodule.png" alt="Our library files are here, included in a submodule" /></p>
<p>&#8220;So what&#8217;s the difference?&#8221; you might ask. After all, the third-party library&#8217;s files are here, just like they would be if we had copy-pasted them. The crucial difference is indeed that they are <em>contained in their own Git repository</em>! Had we just downloaded some files, thrown them into our project and then committed them — like the other files in our project — they would have been part of the same Git repository. The submodule, however, makes sure that the library files don&#8217;t &#8220;leak&#8221; into our main project&#8217;s repository.</p>
<p>Let&#8217;s see what else has happened: a new <code>.gitmodules</code> file has been created in the root folder of our main project. Here&#8217;s what it contains:</p>
<pre><code class="bash language-bash">[submodule "lib/spacetime"]
  path = lib/spacetime
  url = https://github.com/spencermountain/spacetime.git
</code></pre>
<p>This <code>.gitmodules</code> file is one of multiple places where Git keeps track of the submodules in our project. Another one is <code>.git/config</code>, which now ends like this:</p>
<pre><code class="bash language-bash">[submodule "lib/spacetime"]
  url = https://github.com/spencermountain/spacetime.git
  active = true
</code></pre>
<p>And finally, Git also keeps a copy of each submodule&#8217;s <code>.git</code> repository in an internal <code>.git/modules</code> folder.</p>
<p>All of these are technical details you don&#8217;t have to remember. However, it probably helps you to understand that the internal maintenance of Git submodules is quite complex. That&#8217;s why it&#8217;s important to take one thing away: <strong>don&#8217;t mess with Git submodule configuration by hand!</strong> If you want to move, delete, or otherwise manipulate a submodule, please do yourself a favor and do <em>not</em> try this manually. Either use the proper Git commands or a <a href="https://www.git-tower.com/?utm_source=sitepoint&#038;utm_medium=guestpost&#038;utm_campaign=git-submodules">desktop GUI for Git like &#8220;Tower&#8221;</a>, which takes care of these details for you.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631605294submodules-in-tower@2x.png" alt="Git desktop GUIs like Tower make handling Git submodules easier" /></p>
<p>Let&#8217;s have a look at the status of our main project, now that we&#8217;ve added the submodule:</p>
<pre><code class="bash language-bash">$ git status
On branch master
Changes to be committed:
  (use "git restore --staged &lt;file&gt;..." to unstage)
  new file:   .gitmodules
  new file:   lib/spacetime
</code></pre>
<p>As you can see, Git regards adding a submodule as a change like any other. Accordingly, we have to commit this change like any other:</p>
<pre><code class="bash language-bash">$ git commit -m "Add timezone converter library as a submodule"
</code></pre>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/git-submodules-introduction/?utm_source=rss">Understanding and Working with Submodules in Git</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/git-submodules-introduction/?utm_source=rss</link><guid isPermaLink="false">/?p=206915</guid><category><![CDATA[Programming]]></category><category><![CDATA[Web]]></category><dc:creator><![CDATA[Tobias Günther]]></dc:creator><pubDate>Thu, 30 Sep 2021 02:00:42 GMT</pubDate><metaDesc>Git has a lot of power under the hood. Learn about submodules in Git, including what they are, how they work, and why they're so useful.</metaDesc></item><item><title><![CDATA[42 Visual Studio Code Shortcuts for Boosting Your Productivity]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/visual-studio-code-keyboard-shortcuts/?utm_source=rss"
              title="42 Visual Studio Code Shortcuts for Boosting Your Productivity"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632901525vs-code-keyboard-shortcuts.jpg"
        alt="VS Code Keyboard Shortcuts for Boosting Your Productivity"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632901525vs-code-keyboard-shortcuts-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632901525vs-code-keyboard-shortcuts-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632901525vs-code-keyboard-shortcuts-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632901525vs-code-keyboard-shortcuts.jpg 1200w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong>In this article, we&#8217;ll go over some of the most useful Visual Studio Code shortcuts that will save you time and supercharge your development when using Visual Studio Code. This article covers default keyboard shortcuts for Windows, Linux and macOS.</strong></p>
<p><a href="https://code.visualstudio.com">Visual Studio Code (VS Code)</a> is one of the most popular and most used code editors. It’s open source and free to use. It also provides support for many languages and frameworks, whether through built-in features or the extensive list of extensions available for the editor.</p>
<p>Please note that these Visual Studio Code shortcuts are taken from VS Code&#8217;s documentation. If some shortcuts don&#8217;t work, it could be due to changes in shortcuts in your editor or file format, or sometimes due to extensions installed.</p>
<h2 id="easyvscodenavigationshortcuts">Easy VS Code Navigation Shortcuts</h2>
<p>This section presents all the Visual Studio Code shortcuts that allow you to navigate different parts of the editor.</p>
<h3 id="openafile">Open a file</h3>
<p>Searching for a specific file, especially as the project gets larger, can chew up a lot of time. Even if you already know where the file is, it&#8217;s definitely handy to learn this keyboard shortcut to easily open files in your project.</p>
<ul>
<li><strong>Windows/Linux</strong>: <kbd>ctrl</kbd> + <kbd>P</kbd></li>
<li><strong>macOS</strong>: <kbd>command</kbd> + <kbd>P</kbd></li>
</ul>
<h3 id="opensettings">Open settings</h3>
<p>Visual Studio Code comes with a lot of features and settings that you can change to fit your needs. This keyboard shortcut makes it easier to get to the settings whenever necessary.</p>
<ul>
<li><strong>Windows/Linux</strong>: <kbd>ctrl</kbd> + <kbd>,</kbd></li>
<li><strong>macOS</strong>: <kbd>command</kbd> + <kbd>,</kbd></li>
</ul>
<h3 id="togglesidebar">Toggle sidebar</h3>
<p>A lot of times you need more space for the open file you&#8217;re working on. So, this keyboard shortcut is handy to show or hide the sidebar whenever necessary.</p>
<ul>
<li><strong>Windows/Linux</strong>: <kbd>ctrl</kbd> + <kbd>B</kbd></li>
<li><strong>macOS</strong>: <kbd>command</kbd> + <kbd>B</kbd></li>
</ul>
<h3 id="navigatetabs">Navigate tabs</h3>
<p>When you have a lot of tabs open and you need to move between them, one easy way to do it is with this keyboard shortcut, which shows you the list of the tabs and lets you navigate between them and choose which one you want to open.</p>
<ul>
<li><strong>Windows/Linux</strong>: <kbd>ctrl</kbd> + <kbd>shift</kbd> + <kbd>tab</kbd></li>
<li><strong>macOS</strong>: <kbd>control</kbd> + <kbd>shift</kbd> + <kbd>tab</kbd></li>
</ul>
<p>Keep pressing <kbd>tab</kbd> to switch between tabs.</p>
<h3 id="navigatetabgroups">Navigate tab groups</h3>
<p>One of the nice features that Visual Studio Code provides is creating tab groups. Tab groups allow you to split up your tabs into groups, and each editor group takes a part of the screen.</p>
<p>This keyboard shortcut makes it easier and faster to navigate between groups in the editor group history. This shortcut also allows you to create a new group if the editor group you select in the shortcut is higher than the number of groups currently open.</p>
<ul>
<li><strong>Windows/Linux</strong>: <kbd>ctrl</kbd> + <kbd>1</kbd> or <kbd>2</kbd> or <kbd>3</kbd></li>
<li><strong>macOS</strong>: <kbd>command</kbd> + <kbd>1</kbd> or <kbd>2</kbd> or <kbd>3</kbd></li>
</ul>
<h3 id="opentheterminal">Open the terminal</h3>
<p>During your development, you&#8217;ll most likely be using the terminal a lot. Visual Studio Code allows you to open a terminal window right inside the editor. This saves you from moving between the editor and the terminal and allows you to completely focus on the editor and the code.</p>
<ul>
<li><strong>Windows/Linux</strong>: <kbd>ctrl</kbd> + <kbd>J</kbd></li>
<li><strong>macOS</strong>: <kbd>command</kbd> + <kbd>J</kbd></li>
</ul>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632900480zen-mode.jpg" alt="Terminal open in Visual Studio Code" /></p>
<h3 id="openthecommandpalette">Open the command palette</h3>
<p>There are lots of commands you can execute in Visual Studio Code. These commands can be related to out-of-the-box features or extension features. </p>
<p>With this keyboard shortcut, you can easily open the command palette. The command palette allows you to search through the commands you can use and execute them.</p>
<ul>
<li><strong>Windows/Linux</strong>: <kbd>ctrl</kbd> + <kbd>shift</kbd> + <kbd>P</kbd></li>
<li><strong>macOS</strong>: <kbd>command</kbd> + <kbd>shift</kbd> + <kbd>P</kbd></li>
</ul>
<p>![Visual Studio Code command palette](Visual Studio Code command palette)</p>
<h2 id="quickselections">Quick Selections</h2>
<p>During development, you&#8217;ll most probably need to make selections in your code, whether for copying, cutting, or other purposes.</p>
<p>Instead of doing so with your machine&#8217;s mouse, doing it with the keyboard saves you time. These keyboard shortcuts focus on making selections quickly.</p>
<h3 id="selectcurrentline">Select current line</h3>
<p>A lot of times you need to select the entire current line your cursor is at. This keyboard shortcut makes it very simple.</p>
<ul>
<li><strong>Windows/Linux</strong>: <kbd>ctrl</kbd> + <kbd>L</kbd></li>
<li><strong>macOS</strong>: <kbd>command</kbd> + <kbd>L</kbd></li>
</ul>
<h3 id="similaroccurrences">Similar occurrences</h3>
<p>How many times do you need to rename a variable, or simply change a certain repeated text or phrase throughout the entire file you&#8217;re working with?</p>
<p>Two keyboard shortcuts can be used in a situation similar to this. The first requires you to already have the word or phrases selected, while the other doesn&#8217;t.</p>
<p><strong>Current selection</strong></p>
<p>With this keyboard shortcut, all you need is to have one occurrence of the text you&#8217;re looking for in the file selected. Then, by pressing the keys of the shortcut, you&#8217;ll select all its occurrences in the file.</p>
<ul>
<li><strong>Windows/Linux</strong>: <kbd>ctrl</kbd> + <kbd>shift</kbd> + <kbd>L</kbd></li>
<li><strong>macOS</strong>: <kbd>command</kbd> + <kbd>shift</kbd> + <kbd>L</kbd></li>
</ul>
<p><strong>Current word</strong></p>
<p>This keyboard shortcut allows you to do the same as the previous one, but without having anything selected. While the cursor is placed on a word, you can press the keys of this shortcut and the current word with all of its occurrences in the current file will be selected.</p>
<ul>
<li><strong>Windows/Linux</strong>: <kbd>ctrl</kbd> + <kbd>F2</kbd></li>
<li><strong>macOS</strong>: <kbd>command</kbd> + <kbd>F2</kbd></li>
</ul>
<p><em>Note: on macOS, make sure to press <kbd>fn</kbd> at the same time as <kbd>F2</kbd>.</em></p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632900568current-word.jpg" alt="Selecting each instance of a word" /></p>
<h3 id="selectuntiltheendoftheword">Select until the end of the word</h3>
<p>When selecting a certain part of the code, you can easily move and expand the selection with this shortcut. You can use the right arrow or the left arrow to go in the direction you want.</p>
<ul>
<li><strong>Windows/Linux</strong>: <kbd>shift</kbd> + <kbd>alt</kbd> + <kbd>→</kbd> or <kbd>←</kbd></li>
<li><strong>macOS</strong>: <kbd>shift</kbd> + <kbd>option</kbd> + <kbd>→</kbd> or <kbd>←</kbd></li>
</ul>
<h2 id="multipleselections">Multiple Selections</h2>
<p>Mastering these keyboard shortcuts will boost your development speed and makes you a coding hero. These keyboard shortcuts allow you to select across multiple lines to make necessary modifications or additions.</p>
<p>This saves you from repeating yourself and saves you the additional time you&#8217;d spend doing the same operation across multiple lines.</p>
<h3 id="selectacolumnorboxofcodebydraggingthemouse">Select a column or box of code by dragging the mouse</h3>
<p>Dragging your cursor across lines of code or text selects each line from end to end. But you can also select a group of lines only partially with this shortcut. Multiple lines will be selected, but only as much of them as you drag over.</p>
<ul>
<li><strong>Windows/Linux</strong>: <kbd>shift</kbd> + <kbd>alt</kbd> + drag mouse across the lines</li>
<li><strong>macOS</strong>: <kbd>shift</kbd> + <kbd>option</kbd> + drag mouse across the lines</li>
</ul>
<h3 id="selectacolumnorboxofcodewitharrowkeys">Select a column or box of code with arrow keys</h3>
<p>You can do the same as above but without using your mouse. Instead of dragging a mouse, you use they keyboard arrow keys.</p>
<ul>
<li><strong>Windows/Linux</strong>: <kbd>ctrl</kbd> + <kbd>shift</kbd> + <kbd>alt</kbd> + <kbd>→</kbd> or <kbd>←</kbd> or <kbd>↓</kbd> or <kbd>↑</kbd></li>
<li><strong>macOS</strong>: <kbd>command</kbd> + <kbd>shift</kbd> + <kbd>option</kbd> + <kbd>→</kbd> or <kbd>←</kbd> or <kbd>↓</kbd> or <kbd>↑</kbd></li>
</ul>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632900605select-column.jpg" alt="Selecting a column or box of code in VS Code" /></p>
<h2 id="howtousefindresults">How to Use Find Results</h2>
<p>All editors, even simple editors, should have a find feature so that you can find certain words, like function or variable names, phrases, or blocks of code either in the current selected file or across multiple files.</p>
<p>This section will go over keyboard shortcuts that will allow us to make the best out of the results of using the find feature in Visual Studio Code.</p>
<h3 id="navigateresults">Navigate results</h3>
<p>You can use this keyboard shortcut to move between find results in the active file.</p>
<ul>
<li><strong>Windows/Linux/macOS</strong>: <kbd>F3</kbd></li>
</ul>
<p><em>Note: on macOS, make sure to press <kbd>fn</kbd> at the same time as <kbd>F3</kbd>.</em></p>
<h3 id="selectmultipleresults">Select multiple results</h3>
<p>If you&#8217;re using the find feature to find certain bits of text so that you can modify a subset of these results, you can use this shortcut to navigate and select the find results in the active file.</p>
<ul>
<li><strong>Windows/Linux</strong>: <kbd>ctrl</kbd> + <kbd>D</kbd></li>
<li><strong>macOS</strong>: <kbd>command</kbd> + <kbd>D</kbd></li>
</ul>
<h3 id="selectallresults">Select all results</h3>
<p>If you&#8217;re using the find feature to do certain modifications with all the find results, this keyboard shortcut allows you to select all the find results.</p>
<ul>
<li><strong>Windows/Linux</strong>: <kbd>alt</kbd> + <kbd>enter</kbd></li>
<li><strong>macOS</strong>: <kbd>option</kbd> + <kbd>enter</kbd></li>
</ul>
<h2 id="codenavigation">Code Navigation</h2>
<p>As each file or project grows, it becomes harder to find certain parts of the code. Finding errors or going to the code at a certain line can be hard when doing it manually.</p>
<p>These keyboard shortcuts save you the hassle and allow you to invest your time in what you actually want to do.</p>
<h3 id="gotoline">Go to line</h3>
<p>Finding code at a certain line is especially helpful when you get a compile or runtime error that specifies what line of code caused it. This keyboard shortcut eliminates the need to actually find the line yourself.</p>
<ul>
<li><strong>Windows/Linux</strong>: <kbd>ctrl</kbd> + <kbd>G</kbd></li>
<li><strong>macOS</strong>: <kbd>control</kbd> + <kbd>G</kbd></li>
</ul>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632900639go-to-line.jpg" alt="Go to a specific line" /></p>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/visual-studio-code-keyboard-shortcuts/?utm_source=rss">42 Visual Studio Code Shortcuts for Boosting Your Productivity</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/visual-studio-code-keyboard-shortcuts/?utm_source=rss</link><guid isPermaLink="false">/?p=206871</guid><category><![CDATA[Programming]]></category><category><![CDATA[Web]]></category><dc:creator><![CDATA[Shahed Nasser]]></dc:creator><pubDate>Tue, 28 Sep 2021 16:00:14 GMT</pubDate><metaDesc>Keyboard shortcuts help you work faster. Learn some of the most useful Visual Studio Code shortcuts for Windows, Linux and macOS.</metaDesc></item><item><title><![CDATA[How to Build an MVP with React and Firebase]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/react-firebase-build-mvp/?utm_source=rss"
              title="How to Build an MVP with React and Firebase"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632802723react-firebase-mvp-app.jpg"
        alt="How to Build an MVP with React and Firebase"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632802723react-firebase-mvp-app-300x172.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632802723react-firebase-mvp-app-1024x585.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632802723react-firebase-mvp-app-768x439.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632802723react-firebase-mvp-app.jpg 1200w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong>When prototyping an idea, it&#8217;s recommended that you simplify and build only the minimum core features required to launch a product into the market. This helps you determine if there&#8217;s market fit for your application before wasting time and money on a product nobody&#8217;s interested in. This is known as a “minimum viable product” (MVP). In this tutorial, you&#8217;ll learn how to build an MVP using React and Firebase, a backend-as-a-service platform.</strong></p>
<p>In order to provide the most value, we won&#8217;t be developing the React + Firebase application step by step. Instead, I&#8217;ll break down a working prototype and explain the key concepts using pseudo-like coding language. The actual code is quite verbose, as it&#8217;s mostly front-end logic designed to deal with many aspects such as state management, responsive UI design and accessibility.</p>
<p>My goal is to show you the architectural design of building web interfaces that are linked to a serverless back end. The complete Firebase project we&#8217;ll use is located in our GitHub <a href="https://github.com/sitepoint-editors/sitepoint-books-firebase">repository</a>. At the end of this tutorial, you should be able to apply these concepts in your own MVP web projects.</p>
<h2 id="whyfirebase">Why Firebase?</h2>
<p>If you&#8217;re looking to build a web application on a serverless platform, you&#8217;ll come across a myriad of providers that offer all the essential services you need to build your product. These services include authentication, database, cloud functions, storage, analytics and many more.</p>
<p>If you were to pick the best of class for each service, you&#8217;d have a pretty high learning curve figuring out how to make all these services work together in your application. You also expose your product to a number of security risks as there are multiple end-points that your product connects to in order to work. There are measures to protect your application, but most developers are unaware of what security issues need to be plugged.</p>
<p><a href="https://firebase.google.com/">Firebase</a> is a back-end-as-a-service platform that conveniently provides a number of essential services under one roof. This reduces the learning curve and also makes it easier to build secure web and mobile applications.</p>
<p>These Firebase services include:</p>
<ul>
<li>authentication</li>
<li>database</li>
<li>storage</li>
<li>cloud functions</li>
<li>analytics</li>
<li>hosting</li>
</ul>
<h2 id="prerequisites">Prerequisites</h2>
<p>Take note that this tutorial is written for intermediate to advanced React developers who want to quickly learn how to use Firebase for their projects. I&#8217;ve provided a few additional topics that you need to be familiar with before proceeding:</p>
<ul>
<li><a href="https://www.sitepoint.com/react-tailwind-css-build-site/">React and TailwindCSS</a></li>
<li><a href="https://www.sitepoint.com/react-query-fetch-manage-data/">React Query</a></li>
<li><a href="https://www.sitepoint.com/vitejs-front-end-build-tool-introduction/">Vite</a> — a better alternative to <code>create-react-app</code></li>
</ul>
<h2 id="firebaseprojectplan">Firebase Project Plan</h2>
<p>The project we&#8217;ll be looking at is a simple online library that organizes data into books, authors and categories. Below is an entity relationship diagram.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/08/162929495001-entity-relationship-diagram.png" alt="entity relationship diagram" /></p>
<p>The application logic has been organized into:</p>
<ul>
<li>screen containers (pages or views)</li>
<li>presentational components (forms, tables)</li>
<li>layout components (footer, navbar)</li>
<li>shareable UI components (alerts, modals, page headers)</li>
<li>Firebase services (database, storage)</li>
<li>Firebase config scripts (back-end connectors)</li>
</ul>
<p>Below is an illustration of the main project&#8217;s architecture:</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/08/162929495302-application-architecture-diagram.png" alt="application architecture diagram" /></p>
<p>We&#8217;ll be using the following folder structure to organize our code:</p>
<pre><code class="bash language-bash">├── components
│   ├── entity (e.g. book)
│   │   ├── Card.jsx (-&gt; BookCard)
│   │   ├── Detail.jsx (-&gt; BookDetail)
│   │   ├── Form.jsx
│   │   └── List.jsx
│   └── ui
│       └── Component.jsx (e.g. PageHeader, Alert)
├── layout
│   ├── Footer.jsx
│   └── Navbar.jsx
├── screens
│   ├── entity
│   │   ├── Detail.jsx (-&gt; ScreenBookDetail)
│   │   ├── Form.jsx (-&gt; ScreenBookForm)
│   │   └── List.jsx
│   ├── category
│   │   ├── Form.jsx
│   │   └── List.jsx
│   ├── Home.jsx
│   └── NotFound.jsx
└── services
    └── Service.js (e.g. Database, Storage)
</code></pre>
<p>The <code>-&gt;</code> symbol denotes an example of how a functional component is named. Check out this <a href="https://hackernoon.com/structuring-projects-and-naming-components-in-react-1261b6e18d76">guide</a> for more information on naming conventions for front-end applications.</p>
<h2 id="firebaseprojectsetup">Firebase Project Setup</h2>
<p>The project we&#8217;ll use was scaffolded using a Vite + React template. To set up the project in your workspace, simply open a terminal and execute the following:</p>
<pre><code class="bash language-bash"># Clone project
git clone git@github.com:sitepoint-editors/sitepoint-books-firebase.git
cd sitepoint-books-firebase

# Install dependencies
npm install

# Prepare environment config file
cp env.example .env.local
</code></pre>
<p>Don&#8217;t launch the dev server just yet, as we need to set up our Firebase back end first, which we&#8217;ll do in the next step.</p>
<h2 id="firebasesetup">Firebase Setup</h2>
<p>Head over to <a href="https://firebase.google.com/">Firebase</a> and sign in with your Google account. Then:</p>
<ol>
<li>
<p>Create a new Firebase project and call it <code>SitePointBooks</code>.</p>
</li>
<li>
<p>Don&#8217;t enable Google Analytics for this project. Hit the <strong>Create project</strong> button.</p>
</li>
<li>
<p>In the Firebase console, create a new <strong>Web App</strong> and call it <code>sitepoint-books-app</code>. You can access the Firebase console as demonstrated in the screenshot below.<br />
<img src="https://uploads.sitepoint.com/wp-content/uploads/2021/09/1630935311firebase-mvp-create-project.png" alt="firebase-mvp-create-project" /></p>
</li>
<li>
<p>In the next step, give your app a name (this can be the same as the project name) and then click <strong>Register app</strong>.</p>
</li>
<li>
<p>In the <strong>Add Firebase SDK</strong> section, select <strong>Use npm</strong> and copy the output.<br />
<img src="https://uploads.sitepoint.com/wp-content/uploads/2021/09/163093530703-firebase-web-app-config.png" alt="03-firebase-web-app-config" /><br />
There are a wide number of Firebase SDKs available. You can find out more about these <a href="https://firebase.google.com/docs/firestore/client/libraries">here</a>.</p>
</li>
<li>
<p>Finally, make a note of your Firebase config and click <strong>Continue to console</strong>.</p>
</li>
</ol>
<p>Do note that Firebase API keys are safe to expose to the public, as access to back-end resources is guarded via Firebase security rules. That is, they can only be accessed by an authenticated user. Unfortunately for this tutorial, we&#8217;ll need to disable them, since we won&#8217;t deal with Firebase authentication.</p>
<p>For a quick setup, you can simply copy the provided script into a <code>firebase.js</code> file. However, I prefer saving the Firebase configuration settings using an <code>.env.local</code> file. Here&#8217;s a Firebase configuration example:</p>
<pre><code class="yaml language-yaml">VITE_API_FIREBASE_API_KEY=AIzaSyDfoP234E8waxeN8QZVrkA5LXqjjyPeFYs
VITE_API_FIREBASE_AUTH_DOMAIN=sitepointdemo-26ea0.firebaseapp.com
VITE_API_FIREBASE_PROJECT_ID=sitepointdemo-26ea0
VITE_API_FIREBASE_STORAGE_BUCKET=sitepointdemo-26ea0.appspot.com
VITE_API_FIREBASE_MESSAGING_SENDER_ID=292100755259
VITE_API_FIREBASE_FIREBASE_APP_ID=1:292100755259:web:38be20c9ab080b4ab1b11e
</code></pre>
<p><em>Don&#8217;t use these Firebase configuration settings, as they were created for a temporary project.</em></p>
<p>Do note that this only prevents storing of Firebase config keys in your repository. Once you build and deploy your application, it&#8217;s quite easy for a malicious attacker to gain access to these keys via the browser inspection tools. This demonstrates the importance of setting up authentication.</p>
<p>Currently, our Firebase back end is empty. In the next steps, we&#8217;ll populate it with data.</p>
<h3 id="cloudstorage">Cloud storage</h3>
<p>Firebase&#8217;s Cloud Storage is a service that allows developers to store images, video, audio and other user-generated content. For this tutorial, we&#8217;ll only use it to store images. Head over to the Storage page and click the <strong>Get Started</strong> button. A popup wizard will appear. Simply accept the default rules and choose a location for your default bucket. After clicking done, a storage bucket will be created for you in a short while.</p>
<p>On the next page, perform the following actions:</p>
<ol>
<li>
<p>Create the following folders:</p>
<ul>
<li><code>categories</code></li>
<li><code>books</code></li>
</ul>
</li>
<li>
<p>Upload the images I&#8217;ve provided via this <a href="https://uploads.sitepoint.com/wp-content/uploads/2021/08/1629975705sitepoint-book-images.zip">zip file</a>. You should have the following structure:<br />
<img src="https://uploads.sitepoint.com/wp-content/uploads/2021/08/162929495904-firebase-cloud-storage.png" alt="04-firebase-cloud-storage" /></p>
</li>
<li>
<p>Click on the <strong>Rules</strong> tab and update the security rules to allow our unauthenticated app to access these files. Do note the following settings will expose your storage back end to the public:</p>
<pre><code class="javascript language-javascript">rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    match /{allPaths=**} {
      allow read, write: if true;
    }
  }
}
</code></pre>
</li>
</ol>
<p>Firebase uses a custom language based on <a href="https://github.com/google/cel-spec">Common Expression Language</a> to define its security rules. Due to the learning curve involved, we won&#8217;t be able to discuss it in this article. Check out the <a href="https://firebase.google.com/docs/rules/rules-language?hl=el">official docs</a> on this topic.</p>
<p>Once you&#8217;ve completed populating your Cloud Storage with the provided images, you can proceed with the next step.</p>
<h3 id="cloudfirestore">Cloud Firestore</h3>
<p>For the database, we&#8217;ll use <a href="https://firebase.google.com/docs/firestore">Cloud Firestore</a>, which is a scalable NoSQL database that allows developers to structure data using collections. The older <a href="https://firebase.google.com/docs/database">Firebase Realtime Database</a> is also a NoSQL database, but it stores all your data in a flat nested JSON structure that&#8217;s difficult to query.</p>
<p>In your console, head over to the Firestore Database page and click the <strong>Create Database</strong> button. A popup wizard should appear:</p>
<ol>
<li>On the first page, set <strong>Start in test mode</strong> to allow insecure access to the database for the next 30 days.</li>
<li>On the next page, set the database region then click <strong>Enable</strong> button.</li>
</ol>
<p>Once the database is initialized, we can proceed with populating the database. Before you start populating, you should be aware that the Firestore database UI doesn&#8217;t support automatic linking and validation when linking two collections. So you&#8217;ll need to open a second browser tab and copy an ID from one record to a reference field, as shown below.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/09/1630938518firestore-place-id.png" alt="firestore-place-id" /></p>
<p>You&#8217;ll also need to make sure there&#8217;s no white space around the ID value when you paste it in a reference field. Otherwise, a null object will be returned when you perform a query. With that out of the way, you can begin creating and populating your Firestore database as follows:</p>
<ul>
<li><code>authors</code>collection, all field types are string:</li>
</ul>
<table>
<thead>
<tr>
<th>Name</th>
</tr>
</thead>
<tbody>
<tr>
<td>Darren Jones</td>
</tr>
<tr>
<td>Mike Aboagye</td>
</tr>
</tbody>
</table>
<ul>
<li><code>categories</code> collection, all field types are string:</li>
</ul>
<table>
<thead>
<tr>
<th>Name</th>
<th>Cover</th>
</tr>
</thead>
<tbody>
<tr>
<td>javascript</td>
<td>categories/javascript.png</td>
</tr>
<tr>
<td>python</td>
<td>categories/python.png</td>
</tr>
<tr>
<td>react</td>
<td>categories/react.png</td>
</tr>
</tbody>
</table>
<ul>
<li><code>books</code>collection, all field types are string except <code>author_id</code> and <code>category_id</code>. You&#8217;ll have to manually copy the relevant unique ids(<code>place_id</code>) into the reference fields as demonstrated in the screenshot above:</li>
</ul>
<table>
<thead>
<tr>
<th>Title</th>
<th>Learn to Code with JavaScript</th>
<th>Data Science: Tools &amp; Skills</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>Cover</strong></td>
<td>books/learn-to-code-with-javascript.jpg</td>
<td>books/data science &#8211; tools &amp; skills.png</td>
</tr>
<tr>
<td><strong>author_id (reference)</strong></td>
<td>/authors/{place id}</td>
<td>/authors/{place id}</td>
</tr>
<tr>
<td><strong>category_id (reference)</strong></td>
<td>/categories/{place id}</td>
<td>/categories/{place id}</td>
</tr>
<tr>
<td><strong>Description</strong></td>
<td>This easy-to-follow and fun guide is the perfect place to start on your coding journey. You’ll be learning to program with JavaScript—the most popular programming language on Earth—but the techniques that you’ll master will provide you with a foundation to go on and use in other languages, too.</td>
<td>This book is a collection of in-depth guides to some some of the tools most used in data science, such Pandas and PySpark, as well as a look at some of the skills you&#8217;ll need as a data scientist.</td>
</tr>
<tr>
<td><strong>URL</strong></td>
<td>https://www.sitepoint.com/premium/books/learn-to-code-with-javascript/</td>
<td>https://www.sitepoint.com/premium/books/data-science-tools-skills/</td>
</tr>
</tbody>
</table>
<p>See the screenshot below as an example of how to set up your database structure.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/08/162929496205-cloud-firestore-database.png" alt="cloud firestore database" /></p>
<h2 id="launchingdevserver">Launching Dev Server</h2>
<p>With the database populated, we can now execute <code>npm run dev</code> and browse to <code>localhost:3000</code> to interact with the project. Do note that it&#8217;s a prototype application built for learning and not all features are fully implemented.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/08/162929496506-app-book-detail.png" alt="app book detail" /></p>
<h2 id="firebaseprojectlogic">Firebase Project Logic</h2>
<p>Let&#8217;s now start breaking down the project so that you can learn how the front-end interfaces are built to connect and interact with the Firebase back end. The focus will mainly be on state management logic for this tutorial. If you&#8217;re unfamiliar with the user interface code used in this Firebase project, please refer to the following documentations for the UI libraries used in the project:</p>
<ul>
<li><a href="https://tailwindcss.com/">TailwindCSS</a> and <a href="https://tailwindcss.com/docs/plugins">plugins</a>: primary CSS framework</li>
<li><a href="https://headlessui.dev/">HeadlessUI</a>: small collection of unstyled UI components</li>
<li><a href="https://heroicons.com/">HeroIcons</a>: collection of handcrafted SVG icons by Tailwind CSS team</li>
<li><a href="https://daisyui.com/">DaisyUI</a>: TailwindCSS component library</li>
<li><a href="https://react-hook-form.com/react">React Hook Form</a>: form state library</li>
<li><a href="https://github.com/jquense/yup">Yup</a>: form validation library</li>
</ul>
<h3 id="routing">Routing</h3>
<p>Building a CRUD interface for a project that involves more than two entities can quickly get complicated. For routing, I used <a href="https://www.sitepoint.com/react-router-complete-guide/">React Router</a> and implemented a routing structure using a standardized syntax. That is:</p>
<ul>
<li>list route: <code>/{entity}</code></li>
<li>create route: <code>/{entity}/create</code></li>
<li>edit route: <code>/{entity}/edit/:id</code></li>
<li>detail route: <code>/{entity}/:id</code></li>
</ul>
<p>Here&#8217;s a simplified view of how routing has been implemented in <a href="https://github.com/sitepoint-editors/sitepoint-books-firebase/blob/master/src/App.jsx"><code>App.jsx</code></a>:</p>
<pre><code class="jsx language-jsx">import React from "react";
import { Route, Switch } from "react-router-dom";

// Layout components
import Footer from "@/layout/Footer";
import Navbar from "@/layout/Navbar";

// Screen(pages or views) containers
import Home from "@/screens/Home";
import NotFound from "@/screens/NotFound";
import ScreenBookList from "@/screens/book/List";
import ScreenBookForm from "@/screens/book/Form";
import ScreenBookDetail from "@/screens/book/Detail";

function App() {
  return (
    &lt;div&gt;
      &lt;header&gt;
        &lt;Navbar /&gt;
      &lt;/header&gt;
      &lt;main&gt;
        &lt;Switch&gt;
          &lt;Route exact path="/"&gt;
            &lt;Home /&gt;
          &lt;/Route&gt;
          &lt;Route exact path="/book"&gt;
            &lt;ScreenBookList /&gt;
          &lt;/Route&gt;
          &lt;Route path="/book/edit/:id"&gt;
            &lt;ScreenBookForm /&gt;
          &lt;/Route&gt;
          &lt;Route path="/book/detail/:id"&gt;
            &lt;ScreenBookDetail /&gt;
          &lt;/Route&gt;
          &lt;Route path="/book/create"&gt;
            &lt;ScreenBookForm /&gt;
          &lt;/Route&gt;
          &lt;Route component={NotFound} /&gt;
        &lt;/Switch&gt;
      &lt;/main&gt;
      &lt;Footer /&gt;
    &lt;/&gt;
  );
}
</code></pre>
<p>Take note that <code>ScreenBookForm</code> has been re-used for both create and edit routes. You&#8217;ll later see how a single form container can be used to handle both use cases. Next, we&#8217;ll look at how the React app connects to the Firebase back end.</p>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/react-firebase-build-mvp/?utm_source=rss">How to Build an MVP with React and Firebase</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/react-firebase-build-mvp/?utm_source=rss</link><guid isPermaLink="false">/?p=206781</guid><category><![CDATA[JavaScript]]></category><dc:creator><![CDATA[Michael Wanyoike]]></dc:creator><pubDate>Mon, 27 Sep 2021 16:00:02 GMT</pubDate><metaDesc>MVPs are useful for testing markets before fully investing in your product. Learn how to build an MVP using React and Firebase.</metaDesc></item><item><title><![CDATA[React Tutorial: Build a Calculator App from Scratch]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/react-tutorial-build-calculator-app/?utm_source=rss"
              title="React Tutorial: Build a Calculator App from Scratch"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632727310react-calculator-app.jpg"
        alt="React Tutorial: Build a Calculator App from Scratch"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632727310react-calculator-app-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632727310react-calculator-app-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632727310react-calculator-app-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632727310react-calculator-app.jpg 1200w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong>In this tutorial, we’ll be building a React Calculator app. You’ll learn how to make a wireframe, design a layout, create components, update states, and format the output.</strong></p>
<p>To get you inspired, here’s <a href="https://calculator-madza.netlify.app/">a link to the deployed project</a> we&#8217;ll be building.</p>
<p>Also, here&#8217;s the <a href="https://github.com/madzadev/calculator">source code</a>, just for reference if you need help in any stage of the project.</p>
<h2 id="planning">Planning</h2>
<p>Since we&#8217;ll be building a Calculator app, let&#8217;s pick a scope that&#8217;s not too complicated for learning but also not too basic for covering different aspects of creating an app.</p>
<p>The features we&#8217;ll implement include:</p>
<ul>
<li>add, subtract, multiply, divide</li>
<li>support decimal values</li>
<li>calculate percentages</li>
<li>invert values</li>
<li>reset functionality</li>
<li>format larger numbers</li>
<li>output resize based on length</li>
</ul>
<p>To start off, we&#8217;ll draw a basic wireframe to display our ideas. For this, you can use free tools like <a href="https://figma.com">Figma</a> or <a href="https://diagrams.net">Diagrams.net</a>.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/09/16309184851629922850_1093x592.png" alt="Wireframe" /></p>
<p>Note that, in this phase, it&#8217;s not that important to think about colors and styling. What matter most is that you can structure the layout and identify the components involved.</p>
<h2 id="designcolors">Design Colors</h2>
<p>Once we&#8217;ve dealt with the layout and the components, all that will be left to do to complete the design is to pick a nice color scheme.</p>
<p>Below are some guidelines for making the app look great:</p>
<ul>
<li>the wrapper should contrast with the background</li>
<li>the screen and button values should be easy to read</li>
<li>the equals button should in a different color, to give some accent</li>
</ul>
<p>Based on the criteria above, we&#8217;ll use the color scheme shown below.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/09/16309184871629922943_1054x295.png" alt="Color scheme" /></p>
<h2 id="settinguptheproject">Setting Up the Project</h2>
<p>To start, open the terminal in your projects folder and create a boilerplate template using the <a href="https://create-react-app.dev/">create-react-app</a>. To do that, run the command:</p>
<pre><code class="bash language-bash">npx create-react-app calculator
</code></pre>
<p>That&#8217;s the fastest and easiest way to set up a fully working React app with zero config. All you need to do after that is run <code>cd calculator</code> to switch to the newly created project folder and <code>npm start</code> to start your app in the browser.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/09/16309184791629816928_1264x667.png" alt="Browser view" /></p>
<p>As you can see, it comes with some default boilerplate, so next we&#8217;ll do some cleaning up in the project folder tree.</p>
<p>Find the <code>src</code> folder, where the logic of your app will live, and remove everything except <code>App.js</code> to create your app, <code>index.css</code> to style your app, and <code>index.js</code> to render your app in the DOM.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/09/16309184891629923847_854x288.png" alt="Project tree" /></p>
<h2 id="createcomponents">Create Components</h2>
<p>Since we&#8217;ve already done some wireframing, we already know the main building blocks of the application. Those are <code>Wrapper</code>, <code>Screen</code>, <code>ButtonBox</code>, and <code>Button</code>.</p>
<p>First create a <code>components</code> folder inside the <code>src</code> folder. We&#8217;ll then create a separate <code>.js</code> file and <code>.css</code> file for each component.</p>
<p>If you don&#8217;t want to create those folders and files manually, you can use the following one-liner to get things set up quickly:</p>
<pre><code class="bash language-bash">cd src &amp;&amp; mkdir components &amp;&amp; cd components &amp;&amp; touch Wrapper.js Wrapper.css Screen.js Screen.css ButtonBox.js ButtonBox.css Button.js Button.css
</code></pre>
<h3 id="wrapper">Wrapper</h3>
<p>The <code>Wrapper</code> component will be the frame, holding all the children components in place. It will also allow us to center the whole app afterward.</p>
<h4 id="wrapperjs">Wrapper.js</h4>
<pre><code class="javascript language-javascript">import "./Wrapper.css";

const Wrapper = ({ children }) =&gt; {
  return &lt;div className="wrapper"&gt;{children}&lt;/div&gt;;
};

export default Wrapper;
</code></pre>
<h4 id="wrappercss">Wrapper.css</h4>
<pre><code class="css language-css">.wrapper {
  width: 340px;
  height: 540px;
  padding: 10px;
  border-radius: 10px;
  background-color: #485461;
  background-image: linear-gradient(315deg, #485461 0%, #28313b 74%);
}
</code></pre>
<h3 id="screen">Screen</h3>
<p>The <code>Screen</code> component will be the top section child of the <code>Wrapper</code> component, and its purpose will be to display the calculated values.</p>
<p>In the features list, we included display output resize on length, meaning longer values must shrink in size. We&#8217;ll use a small (3.4kb gzip) library called <a href="https://www.npmjs.com/package/react-textfit">react-textfit</a> for that.</p>
<p>To install it, run <code>npm i react-textfit</code> and then import and use it like shown below.</p>
<h4 id="screenjs">Screen.js</h4>
<pre><code class="javascript language-javascript">import { Textfit } from "react-textfit";
import "./Screen.css";

const Screen = ({ value }) =&gt; {
  return (
    &lt;Textfit className="screen" mode="single" max={70}&gt;
      {value}
    &lt;/Textfit&gt;
  );
};

export default Screen;
</code></pre>
<h4 id="screencss">Screen.css</h4>
<pre><code class="css language-css">.screen {
  height: 100px;
  width: 100%;
  margin-bottom: 10px;
  padding: 0 10px;
  background-color: #4357692d;
  border-radius: 10px;
  display: flex;
  align-items: center;
  justify-content: flex-end;
  color: white;
  font-weight: bold;
  box-sizing: border-box;
}
</code></pre>
<h3 id="buttonbox">ButtonBox</h3>
<p>The <code>ButtonBox</code> component, similarly to the <code>Wrapper</code> component, will be the frame for the children — only this time for the <code>Button</code> components.</p>
<h4 id="buttonboxjs">ButtonBox.js</h4>
<pre><code class="javascript language-javascript">import "./ButtonBox.css";

const ButtonBox = ({ children }) =&gt; {
  return &lt;div className="buttonBox"&gt;{children}&lt;/div&gt;;
};

export default ButtonBox;
</code></pre>
<h4 id="buttonboxcss">ButtonBox.css</h4>
<pre><code class="css language-css">.buttonBox {
  width: 100%;
  height: calc(100% - 110px);
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  grid-template-rows: repeat(5, 1fr);
  grid-gap: 10px;
}
</code></pre>
<h3 id="button">Button</h3>
<p>The <code>Button</code> component will provide the interactivity for the app. Each component will have the <code>value</code> and <code>onClick</code> props.</p>
<p>In the stylesheet, we&#8217;ll also include the styles for the <code>equal</code> button. We&#8217;ll use <code>Button</code> props to access the class later on.</p>
<h4 id="buttonjs">Button.js</h4>
<pre><code class="javascript language-javascript">import "./Button.css";

const Button = ({ className, value, onClick }) =&gt; {
  return (
    &lt;button className={className} onClick={onClick}&gt;
      {value}
    &lt;/button&gt;
  );
};

export default Button;
</code></pre>
<h4 id="buttoncss">Button.css</h4>
<pre><code class="css language-css">button {
  border: none;
  background-color: rgb(80, 60, 209);
  font-size: 24px;
  color: rgb(255, 255, 255);
  font-weight: bold;
  cursor: pointer;
  border-radius: 10px;
  outline: none;
}

button:hover {
  background-color: rgb(61, 43, 184);
}

.equals {
  grid-column: 3 / 5;
  background-color: rgb(243, 61, 29);
}

.equals:hover {
  background-color: rgb(228, 39, 15);
}
</code></pre>
<h2 id="renderelements">Render elements</h2>
<p>The base file for rendering in React apps is <code>index.js</code>. Before we go further, make sure your <code>index.js</code> looks as follows:</p>
<pre><code class="javascript language-javascript">import React from "react";
import ReactDOM from "react-dom";

import App from "./App";
import "./index.css";

ReactDOM.render(
  &lt;React.StrictMode&gt;
    &lt;App /&gt;
  &lt;/React.StrictMode&gt;,
  document.getElementById("root")
);
</code></pre>
<p>Also, let&#8217;s check <code>index.css</code> and make sure we reset the default values for <code>padding</code> and <code>margin</code>, pick some great font (like <a href="https://fonts.google.com/specimen/Montserrat">Montserrat</a> in this case) and set the proper rules to center the app in the viewport:</p>
<pre><code class="css language-css">@import url("https://fonts.googleapis.com/css2?family=Montserrat&amp;display=swap");

* {
  margin: 0;
  padding: 0;
  font-family: "Montserrat", sans-serif;
}

body {
  height: 100vh;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: #fbb034;
  background-image: linear-gradient(315deg, #fbb034 0%, #ffdd00 74%);
}
</code></pre>
<p>Finally, let&#8217;s open the main file <code>App.js</code>, and import all the components we created previously:</p>
<pre><code class="javascript language-javascript">import Wrapper from "./components/Wrapper";
import Screen from "./components/Screen";
import ButtonBox from "./components/ButtonBox";
import Button from "./components/Button";

const App = () =&gt; {
  return (
    &lt;Wrapper&gt;
      &lt;Screen value="0" /&gt;
      &lt;ButtonBox&gt;
        &lt;Button
          className=""
          value="0"
          onClick={() =&gt; {
            console.log("Button clicked!");
          }}
        /&gt;
      &lt;/ButtonBox&gt;
    &lt;/Wrapper&gt;
  );
};

export default App;
</code></pre>
<p>In the example above we have rendered just a single <code>Button</code> component.</p>
<p>Let&#8217;s create an array representation of the data in the wireframe, so we can map through and render all the buttons in the <code>ButtonBox</code>:</p>
<pre><code class="javascript language-javascript">import Wrapper from "./components/Wrapper";
import Screen from "./components/Screen";
import ButtonBox from "./components/ButtonBox";
import Button from "./components/Button";

const btnValues = [
  ["C", "+-", "%", "/"],
  [7, 8, 9, "X"],
  [4, 5, 6, "-"],
  [1, 2, 3, "+"],
  [0, ".", "="],
];

const App = () =&gt; {
  return (
    &lt;Wrapper&gt;
      &lt;Screen value=0 /&gt;
      &lt;ButtonBox&gt;
        {
          btnValues.flat().map((btn, i) =&gt; {
            return (
              &lt;Button
                key={i}
                className={btn === "=" ? "equals" : ""}
                value={btn}
                onClick={() =&gt; {
                  console.log(`${btn} clicked!`);
                }}
              /&gt;
            );
          })
        }
      &lt;/ButtonBox&gt;
    &lt;/Wrapper&gt;
  );
};
</code></pre>
<p>Check your terminal and make sure your React app is still running. If not, run <code>npm start</code> to start it again.</p>
<p>Open your browser. If you followed along, your current result should look like this:</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/09/16309184821629922296_1322x733.png" alt="App design" /></p>
<p>If you want, you can also open the browser&#8217;s devtools and test out the log values for each button pressed.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/09/16309184911629924446_843x300.png" alt="Console.log" /></p>
<h2 id="definestates">Define states</h2>
<p>Next, we&#8217;ll declare the state variables using React <code>useState</code> hook.</p>
<p>Specifically, there&#8217;ll be three states: <code>num</code>, the entered value; <code>sign</code>, the selected sign: and <code>res</code>, the calculated value.</p>
<p>In order to use the <code>useState</code> hook, we must first import it in <code>App.js</code>:</p>
<pre><code class="javascript language-javascript">import React, { useState } from "react";
</code></pre>
<p>In the <code>App</code> function, we&#8217;ll use an object to set all states at once:</p>
<pre><code class="javascript language-javascript">import React, { useState } from "react";

// ...

const App = () =&gt; {
  let [calc, setCalc] = useState({
    sign: "",
    num: 0,
    res: 0,
  });

  return (
    // ...
  );
};
</code></pre>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/react-tutorial-build-calculator-app/?utm_source=rss">React Tutorial: Build a Calculator App from Scratch</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/react-tutorial-build-calculator-app/?utm_source=rss</link><guid isPermaLink="false">/?p=206749</guid><category><![CDATA[JavaScript]]></category><dc:creator><![CDATA[Madars Biss]]></dc:creator><pubDate>Sun, 26 Sep 2021 16:00:09 GMT</pubDate><metaDesc>Learn by doing! Build calculator app with React, from creating the layout and components to updating states and formatting the output.</metaDesc></item><item><title><![CDATA[How To Create Professional Websites Effortlessly with Jimdo]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/jimdo-create-professional-websites/?utm_source=rss"
              title="How To Create Professional Websites Effortlessly with Jimdo"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632184748jimdo-ai-webbuilder.jpg"
        alt="How To Create Professional Websites Effortlessly with Jimdo"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632184748jimdo-ai-webbuilder-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632184748jimdo-ai-webbuilder-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632184748jimdo-ai-webbuilder-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632184748jimdo-ai-webbuilder.jpg 1200w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong>In this tutorial, you&#8217;ll how to create professional websites within minutes using <a href="https://www.jimdo.com/">Jimdo</a>. We&#8217;ll show you how to use Jimdo&#8217;s drag-and-drop builder, and also Dolphin, Jimdo&#8217;s AI website builder. With these tools, business owners and freelancers can easily set up their own websites, even without any coding experience.</strong></p>
<p>Most business owners and professionals need websites for their products and services. However, building one from scratch is a costly and challenging endeavor. Some may turn to a dedicated website builder like Elementor or Wix. But it takes time and effort to get acquainted with these tools and create seamless landing pages.</p>
<p>Fortunately, you don&#8217;t need to be a web designer or developer to build your own site. The process is simplified through tools like the Jimdo website builder. Using this, you can create websites to sell your products or services in a snap.</p>
<h2 id="introducingthejimdowebsitebuilder">Introducing the Jimdo Website Builder</h2>
<p><a href="https://www.jimdo.com/">Jimdo</a> is an online platform where users can create their own professional websites. You can build anything from a portfolio website or local business website to a company website or ecommerce store.</p>
<p>Even without coding experience, you can create a fast website through a relatively easy process. Jimdo&#8217;s AI website builder, named Dolphin, lets users create a mobile-optimized website with minimum effort. Just answer a few simple questions, and their tool will automate the process and build the site for you.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/08/1629973766what-is-jimdo.jpg" alt="The Jimdo landing page" /></p>
<h2 id="thefeaturesofajimdowebsite">The Features of a Jimdo Website</h2>
<p>With Jimdo, you can access flexible layouts, use their free image library or add images with their drag-and-drop builder to build your own ecommerce store.</p>
<p>What follows are some of the <a href="https://www.jimdo.com/website/how-to-create/">top features</a> offered by Jimdo.</p>
<h3 id="customizablewebsites">Customizable websites</h3>
<p>Designing a seamless website is made easy through their user-friendly Page Editor, Style Editor, and Previewing Function. To match your brand&#8217;s style, just upload your logo or brand-related image and the platform will choose colors that match your preference.</p>
<h3 id="gdprcompliantlegalpages">GDPR-Compliant legal pages</h3>
<p>The Legal Text Generator can automate your website&#8217;s legal text and ensure it complies with General Data Protection Regulation (GDPR). You can easily generate a Privacy Policy, Return Policy, Imprint, and Terms and Conditions to protect your business.</p>
<p>Because laws can change over time, the website will notify you when you need to update your text. As of now, this feature only covers laws for online stores within the EU.</p>
<h3 id="mobilefriendlydesign">Mobile-friendly design</h3>
<p>Jimdo has responsive templates that are optimized for mobile. In the Jimdo Creator, you&#8217;ll be able to see your website adapt to various screen sizes for phones, tablets, and desktops. That way, you can connect with customers no matter what type of device they&#8217;re using.</p>
<h3 id="addroyaltyfreephotosfromthelibrary">Add royalty-free photos from the library</h3>
<p>Adding high-quality photos to your website is easy through Jimdo&#8217;s Image Library. The platform is packed with professional royalty-free images that you can use.</p>
<h3 id="connectsocialmediapages">Connect social media pages</h3>
<p>If you connect your social media pages to your Jimdo website, the platform will pull your business images and info. That way, you can build personalized landing pages worth seeing.</p>
<h2 id="plansandpricing">Plans and pricing</h2>
<p>Jimdo has a free plan and several paid plans to accommodate your needs.</p>
<p><a href="https://www.jimdo.com/pricing/website/">Premium plans</a> are composed of two categories such as websites and online stores. Paid options range from $9 to $15. Of course, more expensive plans mean more features and benefits to enjoy.</p>
<h3 id="website">Website</h3>
<ul>
<li>
<p><strong>Free</strong>: first-timers can opt for a free plan packed with all the basic features. However, users can only opt for the <code>.jimdosite</code> subdomain</p>
<p>Note that the free plan has several limitations. Users can only get a free .jimdosite.com subdomain and no option to connect their own domain. Storage is limited to 500MB and users have no access to customer support. </p>
</li>
<li>
<p><strong>Start ($9 per month, billed annually)</strong>: self-employed professionals and freelancers who want to build personal websites can opt for the Start plan. Users can get a free domain with HTTPS security and an ad-free website.</p>
</li>
<li>
<p><strong>Grow ($15 per month, billed annually):</strong> Grow has all the benefits of the Start plan plus Advanced SEO features, social media campaigns, and customer support within four hours.</p>
</li>
</ul>
<h3 id="onlinestore">Online Store</h3>
<ul>
<li>
<p><strong>Basic ($15 per month, billed annually)</strong>: the Basic plan has all the basic ecommerce shop features such as payment methods, up to 10GB storage, and an easy-to-use ecommerce website.</p>
</li>
<li>
<p><strong>Business ($19 per month, billed annually)</strong>: this option has all the premium online store features such as discount codes, product layouts, social selling, and strikethrough prices for discounted goods.</p>
</li>
</ul>
<p>The best paid plan for your business will depend on the purpose of your website. Online store plans are highly recommended for merchants that want to sell goods online. In contrast, the website plans are best for self-employed professionals and freelancers who want to showcase their portfolios and services.</p>
<h2 id="howtocreateawebsiteusingjimdosdolphin">How to Create a Website using Jimdo&#8217;s Dolphin</h2>
<p>Let&#8217;s now look at the step-by-step process involved in using Dolphin.</p>
<h3 id="step1signuponjimdo">Step 1: Sign up on Jimdo</h3>
<p>The first step is to visit the website and click the <a href="https://www.jimdo.com/"><strong>Let&#8217;s Get Started. Free</strong></a> button.</p>
<p>Users without an account can sign up for free through Google, Facebook, Apple, or email. If you already have an account, then log in. Just acknowledge their terms of service and you&#8217;re good to go.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/08/1629973714step-1-sign-up-jimdo.jpg" alt="Creating a Jimdo account" /></p>
<h3 id="step2pickhowyouwanttocreateyourwebsite">Step 2: Pick how you want to create your website</h3>
<p>Pick from two options.</p>
<p>You can either pick a website with no coding required or use an editor for coding experts.</p>
<p>For this example, we&#8217;ll choose the <strong>Start Now</strong> button on the left, under &#8220;no coding required&#8221;. This feature lets you build a website through the Dolphin AI builder, without any coding experience.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/08/1629973718step-2-pick-how-to.jpg" alt="How do you want to create your website?" /></p>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/jimdo-create-professional-websites/?utm_source=rss">How To Create Professional Websites Effortlessly with Jimdo</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/jimdo-create-professional-websites/?utm_source=rss</link><guid isPermaLink="false">/?p=206179</guid><category><![CDATA[Low Code]]></category><category><![CDATA[Web]]></category><dc:creator><![CDATA[Monique Danao]]></dc:creator><pubDate>Wed, 22 Sep 2021 16:00:13 GMT</pubDate><metaDesc>Learn how to use Jimdo's AI-powered Dophin builder to create a professional ecommerce website without touching a line of code.</metaDesc></item><item><title><![CDATA[Exploring Vite Through its Source Code]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/exploring-vite-source-code/?utm_source=rss"
              title="Exploring Vite Through its Source Code"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632280500vite-source-code.jpg"
        alt="Exploring Vite Through its Source Code"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632280500vite-source-code-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632280500vite-source-code-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632280500vite-source-code-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632280500vite-source-code.jpg 1200w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong>As you&#8217;ve probably heard, the front-end ecosystem has a new cool kid on the block: a build tool called Vite. Although it was created by Evan You (who also created Vue.js), it&#8217;s not framework-specific, so you can use Vite with Vue.js, React.js, Svelte.js, or even vanilla JavaScript.</strong></p>
<p>In this article, we&#8217;ll expand upon the <a href="https://www.sitepoint.com/vitejs-front-end-build-tool-introduction/">overview</a> that was already published here and examine Vite&#8217;s source code to extract some insights about its internal architecture. In particular, we&#8217;ll explore Vite&#8217;s template and plugin systems. By the end, you&#8217;ll have a better understanding of the difference between templates and plugins, and how Vite&#8217;s core system is connected to a plugin.</p>
<p>Now without further ado, let&#8217;s create an app with Vite.</p>
<h2 id="creatinganappwithvite">Creating an App with Vite</h2>
<p>For the purposes of this demo, we&#8217;ll be creating a Vue project, using this command:</p>
<pre><code class="bash language-bash">npm init vite@latest
</code></pre>
<p>(Having the <code>@latest</code> will make sure you always get the latest version whenever you do <code>npm install</code> inside this newly created project.)</p>
<p>As a side note, you might have seen a deprecated version of the <code>init</code> command.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632214539img-1-deprecation.png" alt="@vitejs/create-app is deprecated" /></p>
<p>As you can see, the deprecation warning tells us to use <code>npm init vite</code> instead.</p>
<p>This new command is basically a shorthand for:</p>
<pre><code class="bash language-bash">npx create-vite
</code></pre>
<p>This will install and run a tool called <code>create-vite</code>, which gives you prompts about what kind of project you&#8217;re creating. You&#8217;ll select a name and a template.</p>
<p>Select a name you like for your project.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632214543img-2-select-name.png" alt="Select a project name" /></p>
<p>And select a template to use.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632214549img-3-select-template.png" alt="Select a template" /></p>
<p>For exploration purposes, you can go with either <code>vanilla</code> or <code>vue</code>. </p>
<p>Next, we&#8217;ll explore this <code>create-vite</code> tool through its source code on GitHub.</p>
<h2 id="exploringthevitesourcecode">Exploring the Vite Source Code</h2>
<p>First, go to Vite&#8217;s GitHub page at <a href="https://github.com/vitejs/vite">github.com/vitejs/vite</a>.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632214555img-4-packages.png" alt="Vite's GitHub repo" /></p>
<p>Then head inside the <code>packages</code> folder.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632214563img-6-create-vite.png" alt="Inside the packages folder" /></p>
<p>Here, you can see <code>create-app</code> and <code>create-vite</code>. </p>
<p><code>create-app</code> was responsible for the original command that says “deprecated”. What we&#8217;re interested in here is the <code>create-vite</code> folder. It hosts all the built-in templates for project creation.</p>
<p>Inside the <code>packages</code> folder, we can also see some plugin folders for a few built-in plugins.</p>
<p>Now it&#8217;s a good time to explore the differences between <em>templates</em> and <em>plugins</em>, and how they work together in the build tool workflow.</p>
<h2 id="templates">Templates</h2>
<p><em>Template</em> should be an easy concept to understand: it&#8217;s the starter code for a new project.</p>
<p>Inside the <code>packages/create-vite</code> folder, you should see a dozen <code>template-*</code> folders.</p>
<p>📁 <strong>/packages/create-vite</strong></p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632214559img-5-packages-folder.png" alt="Inside the create-vite folder" /></p>
<p>As you can see, Vite supports templates for various different frameworks (and their TypeScript counterparts).</p>
<p>You can choose <code>vanilla</code> from the <code>create-vite</code> prompt.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632214567img-7-vanilla.png" alt="Select a template" /></p>
<p>If you choose vanilla, it will basically take the files in the <code>packages/template-vanilla</code> folder and clone them as your new project.</p>
<p>📁 <strong>/packages/template-vanilla</strong></p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632214571img-8-template-vanilla.png" alt="Inside the template-vanilla folder" /></p>
<p>You can also choose <code>vue</code> from the prompt:</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632214574img-9-vue.png" alt="Select vue from the prompt" /></p>
<p>If you choose <code>vue</code>, it will clone the files in the <code>packages/template-vue</code> folder as your new project.</p>
<p>📁 <strong>/packages/template-vue</strong></p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632214579img-10-template-vue.png" alt="Inside the template-vue folder" /></p>
<p>The generated project from the vue template will feature the standard folder structure that you would expect from a Vue project.</p>
<p>So that&#8217;s <em>template</em>. Now let&#8217;s talk about <em>plugin</em>.</p>
<h2 id="plugins">Plugins</h2>
<p>As I mentioned, Vite isn&#8217;t framework-specific. It&#8217;s able to create projects for various frameworks because of its plugin system.</p>
<p>Out of the box, Vite provides plugins for Vue, Vue with JSX, and React.</p>
<p>You can examine the code for each built-in plugin in the <code>packages</code> folder:</p>
<p>📁 <strong>/packages</strong></p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632215014img-11-plugins.png" alt="Various plugins" /></p>
<p><em>Note: <code>plugin-legacy</code> is for legacy browsers that don&#8217;t support native ESM.</em></p>
<p>The most common way that these plugins are used is through their corresponding templates. For example, the Vue template will require the use of the Vue plugin, and the React template will require the use of the React plugin.</p>
<p>As the bare-bones option, a project created with the vanilla template has no idea how to serve Vue&#8217;s single-file component (SFC) files. But a Vue project created with Vite will be able to process the SFC file type. And it also knows how to bundle the entire Vue project for production.</p>
<p>If we compare the respective <code>package.json</code> files from the Vue template and the vanilla template, we can easily see why that is.</p>
<p>📁 <strong>/packages/template-vanilla/package.json</strong></p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632215017img-12-vanilla-package.png" alt="Vanilla package.json" /></p>
<p>📁 <strong>/packages/template-vue/package.json</strong></p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632215020img-13-vue-package.png" alt="Template-vue package.json" /></p>
<p><code>template-vue</code> contains everything that <code>template-vanilla</code> has, plus three additional packages.</p>
<p>📁 <strong>/packages/template-vue/package.json</strong></p>
<pre><code class="javascript language-javascript">"dependencies": {
    "vue": "^3.2.6" // 1
  },
  "devDependencies": {
    "@vitejs/plugin-vue": "^1.6.1", // 2
    "@vue/compiler-sfc": "^3.2.6", // 3
    "vite": "^2.5.4"
  }
</code></pre>
<ul>
<li><code>vue</code> is the main library that runs during runtime</li>
<li><code>@vitejs/plugin-vue</code> is the plugin that&#8217;s responsible for serving and bundling a Vue project</li>
<li><code>@vue/compiler-sfc</code> is needed for compiling an SFC file</li>
</ul>
<p>So it&#8217;s safe to say that these three packages give a Vite project the ability to understand Vue code. The <code>@vitejs/plugin-vue</code> package is the &#8220;bridge&#8221; connecting Vite&#8217;s core system to the Vue.js framework.</p>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/exploring-vite-source-code/?utm_source=rss">Exploring Vite Through its Source Code</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/exploring-vite-source-code/?utm_source=rss</link><guid isPermaLink="false">/?p=206254</guid><category><![CDATA[JavaScript]]></category><dc:creator><![CDATA[Andy Li]]></dc:creator><pubDate>Tue, 21 Sep 2021 16:00:43 GMT</pubDate><metaDesc>Learn about Vite's internal architecture, including its template and plugin systems, and how its core system is connected to a plugin.</metaDesc></item><item><title><![CDATA[Yarn vs npm: Everything You Need to Know]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/yarn-vs-npm/?utm_source=rss"
              title="Yarn vs npm: Everything You Need to Know"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2016/10/1631950170package-management-npm-vs-yarn.jpg"
        alt="Yarn vs npm: Everything You Need to Know"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2016/10/1631950170package-management-npm-vs-yarn-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2016/10/1631950170package-management-npm-vs-yarn-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2016/10/1631950170package-management-npm-vs-yarn-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2016/10/1631950170package-management-npm-vs-yarn.jpg 1200w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong>In this tutorial, we&#8217;ll compare Yarn vs npm — the two most popular package managers. We&#8217;ll set them side by side and explore their respective benefits and disadvantages to help you choose which one to use for your projects.</strong></p>
<h2 id="layingoutthebasics">Laying Out the Basics</h2>
<p>Back in the good old days, a simple text editor was enough for developers to create and manage the large part of their projects. But since then, the Web has changed drastically. Nowadays, it&#8217;s common for even a fairly simple project to have hundreds or thousands of scripts, with complex nested dependencies, which are simply impossible to manage without some kind of automated tool. And this is the place where package managers come into play.</p>
<p>A <strong>package manager</strong> is a tool that automatically handles a project&#8217;s dependencies in a variety of ways. For example, with the help of a package manager we can install, uninstall, update, and upgrade packages, configure project settings, run scripts, and so on. All the hard and tedious work is done by the package manager, leaving to us only the fun part — the coding itself.</p>
<p><a href="https://docs.npmjs.com/cli/v7/commands/npm"><strong>npm</strong></a> stands for Node Package Manager. It was released back in 2010, beginning a new era in web development. Until then, the project dependencies were downloaded and managed manually. npm was the magic wand that pushed the Web to the next level.</p>
<p>npm actually involves three things:</p>
<ul>
<li>a <em>website</em> for managing various aspects of your npm experience</li>
<li>a <em>registry</em> for accessing an extensive public database of JavaScript packages</li>
<li>a <em>command-line interface</em> (CLI) for interacting with npm via the terminal</li>
</ul>
<p>However, when most people talk about npm, they usually mean the last one — the CLI tool. It ships as a default package manager with each fresh Node installation. This means you can start using it right away. </p>
<p>If you&#8217;d like a deep dive into working with npm, please consult our <a href="https://www.sitepoint.com/npm-guide/">Node Package Manager Guide</a>.</p>
<p><a href="https://yarnpkg.com/"><strong>Yarn</strong></a> stands for Yet Another Resource Negotiator. The Yarn package manager is an alternative to npm, released by Facebook in October 2016. The original goal of Yarn was to deal with npm drawbacks, such as performance and security issues. Yarn was quickly positioned as a safe, fast, and reliable JavaScript dependency management tool. </p>
<p>But the npm team learned their lesson and rapidly filled the npm gaps by implementing the missing features.</p>
<p>Let&#8217;s quickly travel through time to see the big picture:</p>
<ul>
<li>2010: npm is released with support for Node.</li>
<li>2016: Yarn is released. It shows much greater performance than npm. It also generate a <code>yarn.lock</code> file that makes sharing and exact replication of repos much easier and predictable.</li>
<li>2017: npm 5 is released. It offers auto-generation of a <code>package-lock.json</code> file in answer to <code>yarn.lock</code>.</li>
<li>2018: npm 6 is released with improved security. Now npm checks security vulnerabilities before dependencies are installed.</li>
<li>2020: Yarn 2 and npm 7 are released. Both packages come with great new features, as we&#8217;ll see later in this tutorial.</li>
<li>2021: Yarn 3 is released with various improvements.</li>
</ul>
<p>Nowadays, both package managers are neck and neck in the package management race, offering similar features and capabilities. But there are still several differences that help to determine which we choose to use.</p>
<p>In the rest of this tutorial, we&#8217;ll explore the main similarities and differences between npm and Yarn.</p>
<h2 id="yarnvsnpmaninstallationcomparison">Yarn vs npm: an Installation Comparison</h2>
<p>We&#8217;ll start our comparison exploration with the installation process for both npm and Yarn.</p>
<h3 id="installingthepackagemanagersthemselves">Installing the package managers themselves</h3>
<p>As I noted above, npm comes preinstalled with Node, so there&#8217;s no need to install npm manually.</p>
<p>In contrast, Yarn needs to be installed explicitly. First, we need to install Yarn globally:</p>
<pre><code class="bash language-bash">npm install -g yarn
</code></pre>
<p>Then, we can use it on a per-project basis by setting the desired version inside our project. We do that by running the <code>yarn set version</code> command in the project&#8217;s root directory:</p>
<pre><code class="bash language-bash">yarn set version berry
</code></pre>
<p>In this case, <code>berry</code> is the version we want to set.</p>
<p>If we want to update to the latest version, we run this:</p>
<pre><code class="bash language-bash">yarn set version latest
</code></pre>
<p>With Yarn we can use a different version for each project.</p>
<p>To do the same with npm, you&#8217;ll need to have <a href="https://github.com/nvm-sh/nvm">nvm (Node Version Manager)</a> installed. Here&#8217;s how to <a href="https://www.sitepoint.com/quick-tip-multiple-versions-node-nvm/">install multiple versions of Node using nvm</a>.</p>
<h3 id="installingprojectdependencies">Installing project dependencies</h3>
<p>Now, let&#8217;s see how project dependencies are installed.</p>
<p>When we run <code>npm install</code>, the dependencies are installed sequentially, one after another. The output logs in the terminal are informative but a bit hard to read.</p>
<p>To install the packages with Yarn, we run the <code>yarn</code> command. Yarn installs packages in parallel, which is one of the reasons it&#8217;s quicker than npm. If you&#8217;re using Yarn 1, you&#8217;ll see that the yarn output logs are clean, visually distinguishable and brief. They&#8217;re also ordered in a tree form for easy comprehension. But this is changed in versions 2 and 3, where the logs aren&#8217;t so intuitive and human-readable.</p>
<p>So far, we&#8217;ve seen that npm and Yarn have different commands for installing packages. In the next section, we&#8217;ll explore more commands.</p>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/yarn-vs-npm/?utm_source=rss">Yarn vs npm: Everything You Need to Know</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/yarn-vs-npm/?utm_source=rss</link><guid isPermaLink="false">https://www.sitepoint.com/?p=141636</guid><category><![CDATA[JavaScript]]></category><category><![CDATA[npm]]></category><category><![CDATA[Tools & Libraries]]></category><dc:creator><![CDATA[Ivaylo Gerchev]]></dc:creator><pubDate>Mon, 20 Sep 2021 16:00:24 GMT</pubDate><metaDesc>Modern web development is virtually impossible without a package manager. Our Yarn vs npm comparison will help you decide which to use.</metaDesc></item><item><title><![CDATA[How to Learn Quickly: 10 Proven Methods for Mastering Any Skill]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/how-to-learn-quickly/?utm_source=rss"
              title="How to Learn Quickly: 10 Proven Methods for Mastering Any Skill"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631777774learn-quickly.jpg"
        alt="How to Learn Quickly: 10 Proven Methods for Mastering Any Skill"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631777774learn-quickly-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631777774learn-quickly-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631777774learn-quickly-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631777774learn-quickly.jpg 1200w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong>In this article, we&#8217;ll cover ten proven methods for mastering any skill. You&#8217;ll learn how to learn quickly, supercharge your personal growth, and stand out from the crowd without having to spend every living minute bent over text books.</strong></p>
<h2 id="onekeyskill">One Key Skill</h2>
<p>What would you say if I told you there&#8217;s a skill that could benefit anyone, any place, any time? Something that would accelerate your progress no matter what career path you chose, indifferent to technological disruptions? </p>
<p>Does that sound too good to be true? Well, here&#8217;s the pitch: in a world that&#8217;s changing faster than ever, you need to adapt quickly and constantly. That requires the willingness to change, and the ability to learn. Learning quickly — and becoming a life-long learner — should become your new superpower. You won&#8217;t be able to stop the world from changing, but with this ability to adapt, you&#8217;ll be the first to embrace change and leverage it for your own benefit — and you&#8217;ll also amaze potential employers.</p>
<h2 id="whatitmeanstolearnquickly">What It Means to Learn Quickly</h2>
<p>When we think about quick learners, we might remember those few people back in our school and university days who just seemed to breeze through class. Or we&#8217;ll remember that memory champion with the unique ability to somehow remember not just the first six digits of pi (3.14159 btw) <a href="https://www.nytimes.com/2019/01/09/smarter-living/train-your-brain-like-a-memory-champion.html">but 65,536</a>. Sixty-five thousand! What an impressive feat. These people surely are special. Or they must practice all day, every day.</p>
<p>Here&#8217;s the thing, though: you can learn this skill too. There&#8217;s no superpower, reserved for a few gifted people, or something that can only be achieved with pills and supplements. Good news, huh?</p>
<p>Being a fast learner simply comes down to knowing how your brain (and body!) work and how to tailor your study activities accordingly. Everyone can do it. It&#8217;s a skill. Here&#8217;s how.</p>
<h2 id="manageenergynottime">Manage Energy, Not Time</h2>
<p>Don&#8217;t bother with time management. Manage your energy. First things first: it doesn&#8217;t really matter how much time you spend learning.</p>
<p>There, I said it. Pulling an all-nighter before your exams, participating in a 12-hour-YouTube-study-with-me session, or starring at your books long after midnight, aren&#8217;t just unnecessary. They actively sabotage your progress.</p>
<p>Sure, you need to invest time to learn a new skill. But even more importantly, you need to invest energy.</p>
<p>Think of energy as the most relevant resource in your learning endeavor. Your brain&#8217;s ability to grasp new concepts or to come up with new ideas doesn&#8217;t so much hinge on the time you spend on taking notes, but on your state of mind and available energy while doing so.</p>
<p>And energy is a finite resource. It helps to imagine your energy levels as something similar to your bank account. You&#8217;ve got a certain amount in there (hopefully) and maybe also some allowance for withdrawals beyond that. But at some point, you&#8217;ll have to recharge things or you&#8217;ll run out of steam.</p>
<p>Let&#8217;s take a closer look.</p>
<h3 id="1stopsabotagingyourownsuccess">1. Stop sabotaging your own success</h3>
<p>If you&#8217;re one of the <a href="https://www.medicalnewstoday.com/releases/160265#1">20% of American students who routinely pull an all-nighter</a> during semester time, you should know that <a href="https://www.med.upenn.edu/csi/the-impact-of-sleep-on-learning-and-memory.html">science thinks very little of this strategy</a> for improving your output. To the contrary, sleep deprivation is linked to poorer performance across the bench and will likely hinder your long-term memory formation.</p>
<p>So while all-nighters make for good stories, they won&#8217;t do much for you in terms of learning effectively (and sustainably).</p>
<p>What&#8217;s more, because we&#8217;re so used to measuring our study efforts by time, we start using these crazy long sessions as benchmarks for us to achieve again, leaving us disappointed and frustrated whenever we don&#8217;t reach them.</p>
<p>Instead of measuring the quantity of study time, we should prioritize the quality. Put in a few hours of high energy work in each day and you&#8217;ll vastly outperform your former night-shift-zombie-self.</p>
<h3 id="2howtoactuallylearninyoursleep">2. How to actually learn in your sleep</h3>
<p>I have some bad news for you: if you&#8217;re hoping to learn something passively in your sleep by playing a lecture in the background, it&#8217;s not going to work. This hack to boost your learning <a href="https://www.bbc.com/future/article/20140721-how-to-learn-while-you-sleep">has failed the scientific test</a>.</p>
<p>The good news, however, is that you really <em>can</em> learn in your sleep. It just works slightly differently. So-called slow wave or <a href="https://www.bbc.com/future/article/20180815-why-sleep-should-be-every-students-priority">non-REM sleep cycles help your brain to turn short-term inputs into long-term memories</a>. What&#8217;s more, this process helps your brain find patterns and connections with existing ideas, thus increasing your creative problem solving potentials.</p>
<p>But it doesn&#8217;t stop there. <a href="https://www.med.upenn.edu/csi/the-impact-of-sleep-on-learning-and-memory.html">Sleep also helps you reset your brain&#8217;s capacity to take in new information</a>. So the next time you&#8217;re feeling like your head is filled to the brim and you just can&#8217;t practice any more, consider taking a break to nap or get a good night&#8217;s sleep.</p>
<p>So while you can&#8217;t use your sleep time to put more information into your brain, a good sleep is crucial to sort through what you&#8217;ve learned during the day and to make sure that you retain it long-term.</p>
<p>If you struggle with this, here are some ideas for getting more sleep:</p>
<ul>
<li><strong>No caffeine after 2pm.</strong> While the effect of caffeine sets in nearly immediately after drinking, it <a href="https://my.clevelandclinic.org/health/articles/15496-caffeine-how-to-hack-it-and-how-to-quit-it#:~:text=The%20level%20of%20caffeine%20in,clear%20caffeine%20from%20your%20bloodstream.">remains for hours in your system</a>. Six hours after consumption, half of the caffeine will still remain and affect your sleep.</li>
<li><strong>Establish a night and morning routine.</strong> A night-time routine signals to your body that it&#8217;s time to power down. And the proper morning routine sets you up for success and ensures you don&#8217;t spend your first hour after waking up doom-scrolling (and no, checking your social media in a specific order doesn&#8217;t count as a morning routine).</li>
<li><strong>Avoid highly stimulating activities before bed.</strong> Help your body (and brain) to get into night mode and don&#8217;t pump up the energy levels close to bed time. Things to avoid include intense workouts, energizing music, heavy food, exhilarating readings or all-too-tense TV shows.</li>
<li><strong>Improve your sleeping environment</strong>. While many factors contribute to a good night&#8217;s sleep and not everyone can splurge on the latest mattress trend, there are lots of things you can easily implement to get a good sleep. Most importantly, have a dark room with no or minimal light sources. If needed, invest in some light-blocking curtains (there are lots of very affordable options). And ideally, leave your phone outside the bedroom.</li>
</ul>
<p><!-- STOCK IMAGE SLEEP --></p>
<h2 id="improveyourfocus">Improve Your Focus</h2>
<p>Once you&#8217;ve got your energy levels up and stabilized, and you&#8217;ve had a good night&#8217;s sleep, it&#8217;s time to turn your focus to … your focus.</p>
<p>“Focus” in this context means your ability to actually sit down and study a topic. It&#8217;s the skill that stops you from cleaning up your room for the third time this week instead of tackling that new chapter in the book.</p>
<p>No matter how much energy you&#8217;ve got, if you can&#8217;t channel it into your learning project, if won&#8217;t be of much use.</p>
<h3 id="3youneedatomato">3. You need a tomato</h3>
<p>A tomato will actually will help your learning skills. The so called <a href="https://en.wikipedia.org/wiki/Pomodoro_Technique">Pomodoro Technique</a> (pomodoro is the Italian word for tomato) is named after the tomato-shaped kitchen timer used by its inventor.</p>
<p>Using a timer also happens to be a very effective approach for supercharging your study sessions.</p>
<p>Here&#8217;s how it works:</p>
<ul>
<li>Set your timer for 25 minutes. (It doesn&#8217;t have to be shaped like a tomato, but it would be kinda cool.)</li>
<li>Study. Don&#8217;t interrupt your learning session for anything. It&#8217;s just 25 minutes. Pretty much anything can wait until you&#8217;re done.</li>
<li>Once the timer rings, stop immediately. This trains your brain to expect clear borders between study time and break time and makes it more likely to actually focus during the 25 minutes.</li>
<li>Take a quick break of five minutes. Avoid overly stimulating activities (so ideally, don&#8217;t start scrolling social media). Instead, stretch a bit, watch your breathing or de-clutter the sixteen coffee mugs that have somehow accumulated on your desk.</li>
<li>Repeat two or three more times before taking a longer break.</li>
</ul>
<p>Why does it work?</p>
<p>Multitasking is a myth. Your brain isn&#8217;t wired to do two things at a time. Instead, it quickly switches between tasks. And each switch costs mental bandwidth. Context switching takes a much bigger toll than we assume. Quickly answering a text during your study session doesn&#8217;t just cost two minutes. Research shows that <a href="https://www.nytimes.com/2013/05/05/opinion/sunday/a-focus-on-distraction.html">it can take up to 25 minutes to get back into a focused state</a>.</p>
<p>But when we decide to study for the next two hours, it&#8217;s hard to fight back distractions constantly. Instead, it&#8217;s easy to pick up the phone to &#8220;just quickly check my messages&#8221; or respond to that one semi-urgent email you know is sitting in your inbox.</p>
<p>So instead of hoping that you&#8217;ll somehow manage to stay focused for two hours despite countless possible interruptions, create smaller, more intense study sessions and learn to clearly distinguish between study and break time.</p>
<h3 id="4fightprocrastinationwiththefiveminuterule">4. Fight procrastination with the five-minute rule</h3>
<p>There are <a href="https://nesslabs.com/procrastination-triggers">many potential reasons for procrastination</a>. A task might be perceived as too difficult or too unstructured. Or it might simply bore you. But whatever it is, our internal resistance is usually strongest before we start a task.</p>
<p>Here&#8217;s where the five-minute rule comes in. It&#8217;s a simple trick to convince yourself and it will work, even if you know that you&#8217;re about to trick yourself.</p>
<p>The next time you feel procrastination creeping in, make a deal with yourself to get started on the task for five minutes only. After those few minutes, you&#8217;re allowed to stop and do something else. Chances are, though, that you&#8217;ll continue with the task at hand because you&#8217;ve already moved past the first hurdle and gained some momentum.</p>
<p>It also pairs neatly with the Pomodoro Technique. Whereas the Pomodoro Technique is geared towards reducing distractions during your work sessions, the five-minute rule is the ignition for each individual session.</p>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/how-to-learn-quickly/?utm_source=rss">How to Learn Quickly: 10 Proven Methods for Mastering Any Skill</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/how-to-learn-quickly/?utm_source=rss</link><guid isPermaLink="false">/?p=205155</guid><category><![CDATA[Web]]></category><dc:creator><![CDATA[Matthias Frank]]></dc:creator><pubDate>Sun, 19 Sep 2021 16:00:09 GMT</pubDate><metaDesc>Discover how to learn quickly, master any skill, and supercharge your personal growth with these ten simple, proven learning techniques.</metaDesc></item><item><title><![CDATA[How to Expand Your Engineering Skill Set Without Quitting Your Day Job]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/how-to-expand-your-engineering-skill-set-without-quitting-your-day-job/?utm_source=rss"
              title="How to Expand Your Engineering Skill Set Without Quitting Your Day Job"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631671874engineering-skills.jpg"
        alt="How to Expand Your Engineering Skill Set Without Quitting Your Day Job"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631671874engineering-skills-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631671874engineering-skills-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631671874engineering-skills-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631671874engineering-skills.jpg 1200w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong>The world is moving at a fast pace with innovations in technology every year to tackle all kinds of challenges. Companies are regularly updating and improving their products to meet these challenges and are looking to recruit new talent. Are you looking to participate in newer projects within your company? Are you looking to switch employers or careers? Do your skills match the job description? If they don&#8217;t, but you&#8217;re keen to explore new possibilities, read on.</strong></p>
<h2 id="benefitsofupdatingyourengineeringskills">Benefits of Updating Your Engineering Skills</h2>
<p>To keep up with rapid technology changes, you have to be current with your skills. With newer skills, you&#8217;ll have greater success in looking for a new career or being recruited to other projects. A new career often comes with the side benefit of a higher salary. </p>
<p>With more skills under your belt, you&#8217;re more likely to be noticed and recruited for more projects within your organization. If you&#8217;re certified in a particular discipline, you&#8217;re more likely to be trusted and hired for specific expertise.</p>
<h2 id="companysponsoredinitiatives">Company-sponsored Initiatives</h2>
<h3 id="tuitionassistance">Tuition Assistance</h3>
<p>Many companies offer tuition reimbursement as part of the employee benefits package. According to <a href="https://www.glassdoor.com/blog/tuition-assistance-companies/">Glassdoor&#8217;s 2020 report</a>, some companies offer partial to full tuition assistance, with either the employee or the employer choosing an educational institution. The amount ranges from $500 to $10,000 per year, and may extend to both full-time and part-time employees. <a href="https://www.glassdoor.com/Overview/Working-at-T-Mobile-EI_IE9302.11,19.htm">T-Mobile</a>, for instance, offers to cover the full tuition bill for full-time workers at designated online universities and partial tuition assistance for both full-time and part-time employees at other institutions.</p>
<h3 id="negotiationandcommitment">Negotiation and Commitment</h3>
<p>As the requirements for financial assistance vary among employers, talk to your boss about your career goals and obtain permission and sponsorship to acquire your next set of skills. As pursuing education may interfere with your work schedule, offer to take these courses in the evenings or weekends if available. </p>
<p>Prepare a list of convincing arguments why your employer should invest in your education and how you will benefit your employer in the long run. Be grateful and commit to remaining with your employer after you finish your program. Some companies may require you to sign a contract to solidify your commitment.</p>
<h3 id="jobcertificationandlegality">Job Certification and Legality</h3>
<p>Some jobs may require you to be certified to perform your tasks. In this case, you can earn while you learn because, as a non-exempt employee, you should be remunerated for your learning and preparation time toward certification. </p>
<p>Check out some <a href="https://www.vigilant.org/employment-law-blog/qa-do-i-need-to-pay-employees-for-their-time-spent-studying">legal requirements</a> to ensure that your training is necessary, your learning and training are conducted during working hours, and productive work is being performed.</p>
<h3 id="internaltraining">Internal Training</h3>
<p>The range of skills you&#8217;re looking to acquire may be obtained within the company or outside. Amazon, for example, offers <a href="https://aws.amazon.com/training/">training and certification</a> programs in cloud computing for internal employees as well as customers and partners. Tech giants such as Google have been known to support <a href="https://www.linkedin.com/pulse/googler-2-how-google-mastered-p2p-learning-rahul-bhatt/">peer-to-peer employee learning programs</a> or mentoring to foster camaraderie and build employee growth. AT&amp;T boasts of its internal <a href="https://www.att.jobs/article-employee-takeover-nova-kopp">AT&#038;T University</a> to encourage employee learning while on the job to boost their skill sets.</p>
<h3 id="externaltraining">External Training</h3>
<p>Companies like AT&amp;T invest in <a href="https://learn.att.jobs/app/advanced-learning-partners">employee-retraining programs</a> through collaboration with partners such as Udacity, Coursera, University of Notre Dame, and Georgia Tech, to offer advanced degree and certification programs in the latest technologies. </p>
<p>By participating in company-sponsored employee learning programs, you can align your skills to your company&#8217;s goals and objectives. Your organization may be teaming up with other companies to sponsor or lead conferences relevant to your industry. Be on the lookout for these avenues, as they&#8217;ll help you network with others and pick up additional skills.</p>
<h3 id="onlinedevelopercommunities">Online Developer Communities</h3>
<p>As a software engineer, part of your role is to research before you design a solution. When you&#8217;re researching and planning, you encounter novel ideas and learn new wisdom along the way. Though unofficial, this is an accepted method of acquiring a new skill set while you&#8217;re on the job. While working on your project, you may encounter stumbling blocks. You may be able to find answers within your cohort. </p>
<p>Otherwise, you can always explore the question-and-answer repository on <a href="http://stackoverflow.com">Stack Overflow</a>. Chances are, you may be able to pick up some beautiful gems and knowledge from others&#8217; experiences. You&#8217;re learning and getting paid for this research while working.</p>
<h2 id="selfsponsoredinitiatives">Self-sponsored Initiatives</h2>
<h3 id="freelearningresources">Free Learning Resources</h3>
<p>If you&#8217;re a freelancer and ineligible for your current employer&#8217;s benefits, you can still expand your engineering skill set. You can learn from free developer teaching websites, such as <a href="http://w3schools.com">w3schools</a> and <a href="http://freecodecamp.org">freeCodeCamp</a>. These resources will allow you to gain extra knowledge on your own time. </p>
<p>In addition to free courses, freeCodeCamp offers <a href="https://www.freecodecamp.org/news/python-curriculum-is-live/">free certifications</a> on full-stack web development with JavaScript, including responsive design, front-end libraries, data structures and algorithms, data visualization, API and microservices, and quality assurance, as well as Python certifications in scientific computing, data analysis, information security, and machine learning. </p>
<h3 id="technologycertification">Technology Certification</h3>
<p>If you&#8217;re interested in cloud computing, take a look at the many offerings from Amazon, Google, and Microsoft. <a href="https://aws.amazon.com/certification/">Amazon</a> offers professional certifications for AWS as a cloud practitioner, solutions architect, developer, SysOps administrator, DevOps engineer, and other specialties. Artificial intelligence, machine learning, and data science have dominated much of the technology spheres. </p>
<p>You can obtain certifications for these popular fields at <a href="https://developers.google.com/certification/">Google</a>, <a href="https://docs.microsoft.com/en-us/learn/certifications/">Microsoft</a>, <a href="http://udacity.com">Udacity</a>, and <a href="http://datacamp.com">DataCamp</a>. If you&#8217;re an experienced relational database designer looking to explore NoSQL alternatives, investigate the various offerings and certifications available at <a href="https://university.mongodb.com/certification">MongoDB University</a>. </p>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/how-to-expand-your-engineering-skill-set-without-quitting-your-day-job/?utm_source=rss">How to Expand Your Engineering Skill Set Without Quitting Your Day Job</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/how-to-expand-your-engineering-skill-set-without-quitting-your-day-job/?utm_source=rss</link><guid isPermaLink="false">/?p=204794</guid><category><![CDATA[Web]]></category><dc:creator><![CDATA[Merilyn Chesler]]></dc:creator><pubDate>Wed, 15 Sep 2021 16:00:26 GMT</pubDate><metaDesc>Expanding your skills is a great way to progress in your engineering career. Learn how to advance your career without quitting your job.</metaDesc></item><item><title><![CDATA[5 Reasons Managers Refuse to Give Developers the Rewards They Deserve]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/managers-developers-rewards/?utm_source=rss"
              title="5 Reasons Managers Refuse to Give Developers the Rewards They Deserve"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631602795developer-reward-deserve.jpg"
        alt="5 Reasons Managers Refuse to Give Developers the Rewards They Deserve"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631602795developer-reward-deserve-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631602795developer-reward-deserve-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631602795developer-reward-deserve-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631602795developer-reward-deserve.jpg 1200w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong>In this article, we&#8217;ll explore five reasons managers refuse to give developers the rewards they deserve, and what you can do about it.</strong></p>
<h2 id="theproblemoutlined">The Problem Outlined</h2>
<p>The harder you work, the less you&#8217;re rewarded.</p>
<p>Your co-workers aren&#8217;t pulling their weight. They do <em>less</em> work, but it seems like they&#8217;re receiving more and <em>more</em> rewards. You&#8217;re running circles around the slackers on your team, but your manager doesn&#8217;t seem to care.</p>
<p>How is this fair?</p>
<p>It&#8217;s completely <em>unfair</em>. What&#8217;s worse, this scenario will continue to repeat itself whether you stay in your current role or not.</p>
<h2 id="isyourmanageraterribleperson">Is Your Manager a Terrible Person?</h2>
<p>Your manager (or boss) is a terrible person. Or at least, that&#8217;s the nagging thought many developers have as they notice their peers are passing them by.</p>
<p>Is it true?</p>
<p>Possibly, but that answer isn&#8217;t something you can fix. If your boss is a terrible person, there&#8217;s nothing you can do about it. You can&#8217;t <em>force</em> them to change.</p>
<p>But what if you could <em>persuade</em> them to change?</p>
<p>Well, that would be something now, wouldn&#8217;t it? Well, you <em>can</em> change their mind if you understand why they&#8217;re not rewarding you for your hard work. Worst case scenario, you&#8217;ll know whether it&#8217;s time to find another job or not.</p>
<p>So let&#8217;s look now at five reasons managers refuse to give developers the rewards they deserve, and what you can do about it.</p>
<h2 id="reason1youareinsuranceforthefuture">Reason 1: You Are Insurance for the Future</h2>
<p>Your manager may be making moves towards a promotion or change in position. They view you as a necessary component to <em>his success</em>, and they want you with them as they climb the corporate ladder.</p>
<p>When they&#8217;re promoted, you&#8217;re promoted.</p>
<p>In their mind, this is great for job security because it means they see you as invaluable. Unfortunately, this means they&#8217;re not going to let you out of their sight if they can help it.</p>
<p>It&#8217;s a tough position to be in.</p>
<p>If you call your boss out on this, there&#8217;s a very good chance they&#8217;ll fire you or punish you in some way. If you know you&#8217;re able to have a heart-to-heart with your boss and it will be received well, go for it.</p>
<p>What if it won&#8217;t?</p>
<p>There are two ways to approach the problem. The easiest option is to simply find another job.</p>
<p>What if you can&#8217;t quit your job?</p>
<p>The second option is to begin building connections and allies in your company. If you can move laterally to another position or role in your current company, it would be good to do so.</p>
<h2 id="reason2theycantaffordtorewardyou">Reason 2: They Can&#8217;t Afford to Reward You</h2>
<p>This is a common problem.</p>
<p>Your manager has a specific budget to work with. This budget is typically set in stone until it&#8217;s time to renegotiate the budget for the next fiscal year. For whatever reason, a raise for you and your colleagues would put their department over budget.</p>
<p><em>Your boss can&#8217;t say that, of course.</em></p>
<p>If they decide to tell you the truth — that they can&#8217;t afford to give you a raise — you and your co-workers will leave.</p>
<p><em>Your manager can&#8217;t have that.</em></p>
<p>So they&#8217;ll string you along for as long as they can, until they can actually give you a substantial raise. Your manager can string you along in several ways. For example, they can:</p>
<ul>
<li>give you a cost of living raise (3% or less), which is kind of an insult</li>
<li>give you cheaper amenities (that is, a promise to increase 401k contributions in the future) to placate you while they work with HR to figure out how much they can give you</li>
<li>give you nothing because you&#8217;re a patriot, and you&#8217;ll stay even if you receive nothing (more on that in a minute)</li>
<li>push you out of the company once they&#8217;ve squeezed as much value out of you as they can (they had no intention of increasing your pay and will dump you when confronted)</li>
<li>give someone else a (cheaper) raise in hopes that you&#8217;ll accept the same when word gets out or you&#8217;ll leave</li>
</ul>
<p>Most of the time, your manager will never admit they can&#8217;t afford to reward you.</p>
<p>How will they respond?</p>
<p>It all depends on whether you&#8217;re a patriot or a mercenary.</p>
<p>According to <a href="https://news.gallup.com/businessjournal/157676/employees-either-patriots-mercenaries.aspx">Gallup</a> and Steve Rasmussen, former CEO at Nationwide, all employees are either “patriots” or “mercenaries”.</p>
<ul>
<li>
<p><strong>Patriots</strong> identify with their company. They&#8217;ve bought into the company&#8217;s values and culture. They&#8217;ve embraced the company mission, and they&#8217;re true believers. They&#8217;re in it for the long haul. They&#8217;re working in support of something bigger than themselves.</p>
</li>
<li>
<p><strong>Mercenaries</strong> are more likely to focus on personal outcomes. They&#8217;re great at getting results, but they&#8217;re typically more disengaged. They&#8217;re gone as soon as things take a turn for the worse. They&#8217;re phenomenal workers, but they&#8217;re hired guns.</p>
</li>
</ul>
<p>If you&#8217;re a patriot, managers will likely blow you off for as long as they can. They know you&#8217;re a committed employee, so there&#8217;s less incentive to do what&#8217;s necessary to keep you.</p>
<p>They know you aren&#8217;t going anywhere.</p>
<p>If you&#8217;re a mercenary, you&#8217;re focused on <strong>wiifm</strong> (what&#8217;s in it for me?). If you&#8217;re a superstar employee but also a mercenary, management will work harder to keep you, so long as you continue to perform. The lack of loyalty goes both ways. If you&#8217;re a mediocre or terrible employee, management will simply let you go.</p>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/managers-developers-rewards/?utm_source=rss">5 Reasons Managers Refuse to Give Developers the Rewards They Deserve</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/managers-developers-rewards/?utm_source=rss</link><guid isPermaLink="false">/?p=204776</guid><category><![CDATA[Web]]></category><dc:creator><![CDATA[Andrew McDermott]]></dc:creator><pubDate>Tue, 14 Sep 2021 16:00:08 GMT</pubDate><metaDesc>Even if you work really hard, chances are you don't get paid what you deserve. Learn five reasons for this, and what you can do about it.</metaDesc></item><item><title><![CDATA[How to Set Up VS Code Remote Development for Free on Amazon EC2]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/vs-code-remote-development-amazon-ec2/?utm_source=rss"
              title="How to Set Up VS Code Remote Development for Free on Amazon EC2"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631578863vscode-remote-dev.gif"
        alt="Setting Up VS Code Remote Development for Free on Amazon EC2"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631578863vscode-remote-dev-300x170.gif 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631578863vscode-remote-dev-1024x580.gif 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631578863vscode-remote-dev-768x435.gif 768w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong>Remote development is simply development on a remote server. An SSH connection is made from your local machine to a server in the cloud. SSH stands for secure shell or secure socket shell — a protocol for securely communicating between two computers via a terminal.</strong></p>
<div style="margin-bottom: 1.5em;">
<img loading="lazy" style="margin-bottom: 0.5em;" src="https://editor.sitepoint.com/wp-content/uploads/2021/08/16286115270.png" alt="VS Code Remote Development Internals - Source" width="968" height="314" class="alignnone size-full wp-image-201530" srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/08/16286115270.png 968w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/16286115270-300x97.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/16286115270-768x249.png 768w" sizes="(max-width: 968px) 100vw, 968px" /><span style="display:block; font-size:0.8em; text-align:center; margin: 0;">Image source: <a href="https://code.visualstudio.com/docs/remote/ssh">code.visualstudio.com</a></span>
</div>
<p>Amazon Elastic Compute Cloud (EC2) provides scalable computing resources to build applications (servers) without needing to handle the responsibilities of managing a physical computer. In our case, we&#8217;ll be using the Visual Studio Code editor and connecting it via an SSH connection to the EC2 instance.</p>
<p>In this article, we&#8217;ll create an AWS EC2 free tier instance and connect it to the VS Code editor via the <a href="https://marketplace.visualstudio.com/items?itemName=ms-VSCode-remote.remote-ssh">Remote SSH plugin</a>.</p>
<h3 id="prerequisites">Prerequisites</h3>
<p>To follow along with this tutorial, you&#8217;ll need the following:</p>
<ol>
<li>A Linux-based OS or Windows 10 with WSL2 installed.</li>
<li>An SSH client installed on your machine. This should come as standard on most Linux machines. If not, please consult this <a href="https://code.visualstudio.com/docs/remote/troubleshooting#_installing-a-supported-ssh-client">list of supported clients</a>.</li>
<li>An activated AWS account. If you don’t have one, <a href="https://aws.amazon.com/premiumsupport/knowledge-center/create-and-activate-aws-account/">follow the official tutorial</a>.</li>
</ol>
<h2 id="prosandconsofremotedevelopment">Pros and Cons of Remote Development</h2>
<p>But before we get into the how, let&#8217;s look at the why. Here are some pros and cons of developing on the server.</p>
<p>Firstly, the pros:</p>
<ul>
<li>
<p><strong>Portability</strong>: you can code from any device with internet access. Your code isn’t tied to your local machine, as such, you can code from anywhere using any device available at the moment.</p>
</li>
<li>
<p><strong>Power</strong>: you can easily scale up your remote server based on your workloads. It’s pretty straightforward to boot up a 32GB RAM <a href="https://www.amd.com/en/processors/amd-epyc-aws">AMD EPYC</a> instance for some data science workloads.</p>
</li>
<li>
<p><strong>Prod-Dev Synchrony</strong>: by having a remote dev environment similar to your production environment you can minimize any deployment issues.</p>
</li>
<li>
<p><strong>Seamless Development</strong>: remote coding gives you the ability to create environments specially tailored to the project at hand. For example, a project might require different versions of MySQL, C++, and system libraries like LibPng and ImageMagick. Managing different versions of these might prove rather hectic, as any bugs that crop up because of this can&#8217;t be easily replicated.</p>
</li>
<li>
<p><strong>Reliability</strong>: a cloud server is far more reliable than your local machine can ever be. Depending on your configurations, your server data can be replicated to servers in different parts of the world.</p>
</li>
</ul>
<p>Now let&#8217;s look at the cons. </p>
<p>The main reason to avoid coding on a remote environment is the internet connection requirement to access your remote server. With a fast internet connection, the remote development experience feels native when opening, creating and typing in files, and interacting with the remote server&#8217;s command line. But with a slow 3G network, you might have disconnections to the server, which could potentially lead to lost work ranging from a few seconds to a few minutes. </p>
<p>With that out of the way, let&#8217;s get to the meat of the article — setting up a free tier EC2 instance and connecting it to our local VS Code editor. </p>
<h2 id="creatingandconfiguringtheawsserver">Creating and Configuring the AWS server</h2>
<p>Let&#8217;s go through the steps for creating and configuring your cloud instance.</p>
<p>Log into the <a href="https://aws.amazon.com/console/">AWS Management console</a>.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/08/16286115091.png" alt="The AWS management console" /></p>
<p>Click <strong>EC2</strong> to head over to the EC2 dashboard. Click the <strong>Launch Instance</strong> button. You&#8217;ll be directed to the AMI choosing page.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/08/16286115052.png" alt="EC2 dashboard" /></p>
<p>On the AMI choosing page, search for <strong>Ubuntu</strong> and select your preferred version. Make sure the architecture is set to x86. We&#8217;ll be using the x86 architecture because it has the wider range of software support compared to ARM.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/08/16286115333.png" alt="AMI choosing page" /></p>
<p>Select <strong>t2.micro</strong> as the instance type.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/08/16286115404.png" alt="Instance type selection" /></p>
<p>Leave the rest of the steps on their default settings until you get to the <strong>add storage</strong> step. I recommend you use a minimum of 24GB. If you&#8217;re developing for Node.js, npm libraries take quite some space, and using less could put you in a difficult position, so it&#8217;s safer to err on the side of caution.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/08/16286115185.png" alt="Add storage EC2" /></p>
<p>Once you get to the <strong>Configure Security Group</strong> step, you’ll need to allow incoming SSH connections, you have two options:</p>
<ul>
<li>
<p><strong>Enable all incoming IP addresses</strong>: selecting this will allow any IP address to access your SSH port, if your situation calls for convenience over security choose this.<br />
<img src="https://uploads.sitepoint.com/wp-content/uploads/2021/08/16286115146.png" alt="Security group configuration" /></p>
</li>
<li>
<p><strong>My IP</strong>: if security is more important, choose this option from the dropdown to restrict the IP address to yours only.<br />
<img src="https://uploads.sitepoint.com/wp-content/uploads/2021/08/16286115437.png" alt="Own IP security group configuration" /></p>
</li>
</ul>
<p>Once you click <strong>launch</strong>, you’ll be asked to either select or create an SSH key pair. Select <strong>Create a new key pair</strong>. Name the key pair.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/08/16286115368.png" alt="Create new SSH key pair" /></p>
<p>Clicking the <strong>Download Key Pair</strong> button will obtain you the private key file. This will download a <code>pem</code> file, which you should store in a convenient directory and take note of its directory path.</p>
<p>Next, click <strong>Launch Instances</strong> button and your EC2 instance will start the creation process. Head to the instances page and you should find your newly created instance.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/08/16286115219.png" alt="EC2 running instances" /></p>
<p>Lastly, click the instance to navigate to its details page and take note of its public IPv4 DNS address.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/08/162861151210.png" alt="EC2 instance details" /></p>
<p><em>We&#8217;ll refer to this address as the instance’s “hostname”.</em></p>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/vs-code-remote-development-amazon-ec2/?utm_source=rss">How to Set Up VS Code Remote Development for Free on Amazon EC2</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/vs-code-remote-development-amazon-ec2/?utm_source=rss</link><guid isPermaLink="false">/?p=203984</guid><category><![CDATA[Web]]></category><dc:creator><![CDATA[Chisimdiri Ejinkeonye]]></dc:creator><pubDate>Mon, 13 Sep 2021 16:00:27 GMT</pubDate><metaDesc>Interested in remote development? Learn how to set up a free tier EC2 instance and connect it to your local Visual Studio Code editor.</metaDesc></item><item><title><![CDATA[How to Record Audio Using the MediaStream API]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/mediastream-api-record-audio/?utm_source=rss"
              title="How to Record Audio Using the MediaStream API"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631435070microphone4.jpg"
        alt="How to Record Audio Using the MediaStream API"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631435070microphone4-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631435070microphone4-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631435070microphone4-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631435070microphone4.jpg 1200w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong>The <a href="https://developer.mozilla.org/en-US/docs/Web/API/Media_Streams_API">Media Capture and Streams API</a> (aka MediaStream API) allows you to record audio from a user’s microphone, then get the recorded audio or media elements as tracks. You can then either play these tracks straight after recording them, or upload the media to your server.</strong></p>
<p>In this tutorial, we’ll create a website that will use the Media Streams API to allow the user to record something, then upload the recorded audio to the server to be saved. The user will also be able to see and play all the uploaded recordings.</p>
<p>You can find the full code for this tutorial in <a href="https://github.com/sitepoint-editors/mediastream-tutorial">this GitHub Repository</a>.</p>
<h2 id="settinguptheserver">Setting Up The Server</h2>
<p>We&#8217;ll first start by creating a <a href="https://nodejs.org/en/">Node.js</a> and <a href="https://expressjs.com">Express</a> server. So firstly make sure to <a href="https://www.sitepoint.com/quick-tip-multiple-versions-node-nvm/">download and install Node.js</a> if you don&#8217;t have it on your machine.</p>
<h3 id="createadirectory">Create a directory</h3>
<p>Create a new directory that will hold the project, and change to that directory:</p>
<pre><code class="bash language-bash">mkdir recording-tutorial
cd recording-tutorial
</code></pre>
<h3 id="initializetheproject">Initialize the project</h3>
<p>Then, initialize the project with npm:</p>
<pre><code class="bash language-bash">npm init -y
</code></pre>
<p>The option <code>-y</code> creates <code>package.json</code> with the default values.</p>
<h3 id="installthedependencies">Install the dependencies</h3>
<p>Next, we&#8217;ll install Express for the server we&#8217;re creating and <a href="https://www.npmjs.com/package/nodemon">nodemon</a> to restart the server when there are any changes:</p>
<pre><code class="bash language-bash">npm i express nodemon
</code></pre>
<h3 id="createtheexpressserver">Create the Express server</h3>
<p>We can start now by creating a simple server. Create <code>index.js</code> in the root of the project with the following content:</p>
<pre><code class="javascript language-javascript">const path = require('path');
const express = require('express');
const app = express();
const port = process.env.PORT || 3000;

app.use(express.static('public/assets'));

app.listen(port, () =&gt; {
  console.log(`App listening at http://localhost:${port}`);
});
</code></pre>
<p>This creates a server that will run on port <code>3000</code> unless a port is set in the environment, and it exposes a directory <code>public/assets</code> — which we&#8217;ll create soon — that will hold JavaScript and CSS files and images.</p>
<h3 id="addascript">Add a script</h3>
<p>Finally, add a <code>start</code> script under <code>scripts</code> in <code>package.json</code>:</p>
<pre><code class="javascript language-javascript">"scripts": {
  "start": "nodemon index.js"
},
</code></pre>
<h3 id="startthewebserver">Start the web server</h3>
<p>Let&#8217;s test our server. Run the following to start the server:</p>
<pre><code class="bash language-bash">npm start
</code></pre>
<p>And the server should start at port 3000. You can try accessing it on <code>localhost:3000</code>, but you&#8217;ll see a message saying &#8220;Cannot GET /&#8221; since we don&#8217;t have any routes defined yet.</p>
<h2 id="creatingtherecordingpage">Creating the Recording Page</h2>
<p>Next, we&#8217;ll create the page that will be the main page of the website. The user will use this page to record and view and play recordings.</p>
<p>Create the <code>public</code> directory, and inside that create an <code>index.html</code> file with the following content:</p>
<pre><code class="markup language-markup">&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;Record&lt;/title&gt;
  &lt;link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-KyZXEAg3QhqLMpG8r+8fhAXLRk2vvoC2f3B09zVXn8CA5QIVfZOJ3BCsw2P0p/We" crossorigin="anonymous"&gt;
  &lt;link href="/css/index.css" rel="stylesheet" /&gt;
&lt;/head&gt;
&lt;body class="pt-5"&gt;
  &lt;div class="container"&gt;
    &lt;h1 class="text-center"&gt;Record Your Voice&lt;/h1&gt;
    &lt;div class="record-button-container text-center mt-5"&gt;
      &lt;button class="bg-transparent border btn record-button rounded-circle shadow-sm text-center" id="recordButton"&gt;
        &lt;img src="/images/microphone.png" alt="Record" class="img-fluid" /&gt;
      &lt;/button&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>
<p>This page uses <a href="https://www.sitepoint.com/bootstrap-5-new-features-examples/">Bootstrap 5</a> for styling. For now, the page just shows a button that the user can use for recording.</p>
<p>Note that we&#8217;re using an image for the microphone. You can download the icon on <a href="https://iconscout.com/icon/microphone-2666576">Iconscout</a>, or you can use the modified version in <a href="https://github.com/sitepoint-editors/mediastream-tutorial/blob/master/public/assets/images/microphone.png">the GitHub repository</a>.</p>
<p>Download the icon and place it inside <code>public/assets/images</code> with the name <code>microphone.png</code>.</p>
<h3 id="addingstyles">Adding styles</h3>
<p>We&#8217;re also linking the stylesheet <code>index.css</code>, so create an <code>public/assets/css/index.css</code> file with the following content:</p>
<pre><code class="css language-css">.record-button {
  height: 8em;
  width: 8em;
  border-color: #f3f3f3 !important;
}

.record-button:hover {
  box-shadow: 0 .5rem 1rem rgba(0,0,0,.15)!important;
}
</code></pre>
<h3 id="creatingtheroute">Creating the route</h3>
<p>Finally, we just need to add the new route in <code>index.js</code>. Add the following before <code>app.listen</code>:</p>
<pre><code class="javascript language-javascript">app.get('/', (req, res) =&gt; {
  res.sendFile(path.join(__dirname, 'public/index.html'));
});
</code></pre>
<p>If the server isn&#8217;t already running, start the server with <code>npm start</code>. Then go to <code>localhost:3000</code> in your browser. You&#8217;ll see a record button.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/08/1629299628Screen-Shot-2021-08-18-at-6.11.13-PM.png" alt="Record Page" /></p>
<p>The button, for now, does nothing. We&#8217;ll need to bind a click event that will trigger the recording.</p>
<p>Create a <code>public/assets/js/record.js</code> file with the following content:</p>
<pre><code class="javascript language-javascript">//initialize elements we'll use
const recordButton = document.getElementById('recordButton');
const recordButtonImage = recordButton.firstElementChild;

let chunks = []; //will be used later to record audio
let mediaRecorder = null; //will be used later to record audio
let audioBlob = null; //the blob that will hold the recorded audio
</code></pre>
<p>We&#8217;re initializing the variables we&#8217;ll use later. Then create a <code>record</code> function, which will be the event listener to the click event on <code>recordButton</code>:</p>
<pre><code class="javascript language-javascript">function record() {
  //TODO start recording
}

recordButton.addEventListener('click', record);
</code></pre>
<p>We&#8217;re also attaching this function as an event listener to the record button.</p>
<h3 id="mediarecording">Media recording</h3>
<p>In order to start recording, we&#8217;ll need to use the <a href="https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia">mediaDevices.getUserMedia()</a> method.</p>
<p>This method allows us to obtain a stream and record the audio and/or video of the user only once the user provides permission for the website to do that. The <code>getUserMedia</code> method allows us to access local input devices.</p>
<p><code>getUserMedia</code> accepts as a parameter an object of <a href="https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamConstraints">MediaStreamConstraints</a>, which comprises a set of constraints that specify what are the expected media types in the stream we&#8217;ll obtain from <code>getUserMedia</code>. These constraints can be either audio and video with Boolean values.</p>
<p>If the value is false, it means we&#8217;re not interested in accessing this device or recording this media.</p>
<p><code>getUserMedia</code> returns a promise. If the user allows the website to record, the promise&#8217;s fulfillment handler receives a <a href="https://developer.mozilla.org/en-US/docs/Web/API/MediaStream">MediaStream</a> object which we can use to media capture video or audio streams of the user.</p>
<h4 id="mediacaptureandstreams">Media capture and streams</h4>
<p>To use MediaStream API objects to capture media tracks, we need to use the <a href="https://developer.mozilla.org/en-US/docs/Web/API/MediaRecorder">MediaRecorder</a> interface. We&#8217;ll need to create a new object of the interface which accepts the MediaStream object in the constructor and allows us to control the recording easily through its methods.</p>
<p>Inside the <code>record</code> function, add the following:</p>
<pre><code class="javascript language-javascript">//check if browser supports getUserMedia
if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {
  alert('Your browser does not support recording!');
  return;
}

// browser supports getUserMedia
// change image in button
recordButtonImage.src = `/images/${mediaRecorder &amp;&amp; mediaRecorder.state === 'recording' ? 'microphone' : 'stop'}.png`;
if (!mediaRecorder) {
  // start recording
  navigator.mediaDevices.getUserMedia({
    audio: true,
  })
    .then((stream) =&gt; {
      mediaRecorder = new MediaRecorder(stream);
      mediaRecorder.start();
      mediaRecorder.ondataavailable = mediaRecorderDataAvailable;
      mediaRecorder.onstop = mediaRecorderStop;
    })
    .catch((err) =&gt; {
      alert(`The following error occurred: ${err}`);
      // change image in button
      recordButtonImage.src = '/images/microphone.png';
    });
} else {
  // stop recording
  mediaRecorder.stop();
}
</code></pre>
<h4 id="browsersupport">Browser support</h4>
<p>We&#8217;re first checking whether <code>navigator.mediaDevices</code> and <code>navigator.mediaDevices.getUserMedia</code> are defined, since there are browsers like Internet Explorer, Chrome on Android, or others that <a href="https://developer.mozilla.org/en-US/docs/Web/API/MediaRecorder#browser_compatibility">don&#8217;t support it</a>.</p>
<p>Furthermore, using <code>getUserMedia</code> requires <a href="https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia#privacy_and_security">secure websites</a>, which means either a page loaded using HTTPS, <code>file://</code>, or from <code>localhost</code>. So, if the page isn&#8217;t loaded securely, <code>mediaDevices</code> and <code>getUserMedia</code> will be undefined.</p>
<h4 id="startrecording">Start recording</h4>
<p>If the condition is false (that is, both <code>mediaDevices</code> and <code>getUserMedia</code> are supported), we&#8217;re first changing the image of the recording button to <code>stop.png</code>, which you can download from <a href="https://iconscout.com/icons/stop">Iconscout</a> or <a href="https://github.com/sitepoint-editors/mediastream-tutorial/blob/master/public/assets/images/stop.png">the GitHub repository</a> and place it in <code>public/assets/images</code>.</p>
<p>Then, we&#8217;re checking if <code>mediaRecorder</code> — which we defined at the beginning of the file — is or isn&#8217;t null.</p>
<p>If it&#8217;s null, it means there&#8217;s no ongoing recording. So, we get a MediaStream instance to start recording using <code>getUserMedia</code>.</p>
<p>We&#8217;re passing it an object with only the key <code>audio</code> and value <code>true</code>, as we&#8217;re just recording the audio.</p>
<p>This is where the browser prompts the user to allow the website to access the microphone. If the user allows it, the code inside the fulfillment handler will be executed:</p>
<pre><code class="javascript language-javascript">mediaRecorder = new MediaRecorder(stream);
mediaRecorder.start();
mediaRecorder.ondataavailable = mediaRecorderDataAvailable;
mediaRecorder.onstop = mediaRecorderStop;
</code></pre>
<p>Here we&#8217;re creating a new <code>MediaRecorder</code>, assigning it to <code>mediaRecorder</code> which we defined at the beginning of the file.</p>
<p>We&#8217;re passing the constructor the stream received from <code>getUserMedia</code>. Then, we&#8217;re starting the recording using <a href="https://developer.mozilla.org/en-US/docs/Web/API/MediaRecorder/start">mediaRecorder.start()</a>.</p>
<p>Finally, we&#8217;re binding event handlers (which we&#8217;ll create soon) to two events, <code>dataavailable</code> and <code>stop</code>.</p>
<p>We&#8217;ve also added a <code>catch</code> handler in case the user doesn&#8217;t allow the website to access the microphone or any other <a href="https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia#exceptions">exception that might be thrown</a>.</p>
<h4 id="stoprecording">Stop recording</h4>
<p>This all occurs if the <code>mediaRecorder</code> is not null. If it&#8217;s null, it means that there&#8217;s an ongoing recording and the user is ending it. So, we&#8217;re using the <a href="https://developer.mozilla.org/en-US/docs/Web/API/MediaRecorder/stop">mediaRecorder.stop()</a> method to stop the recording:</p>
<pre><code class="javascript language-javascript">} else {
  //stop recording
  mediaRecorder.stop();
}
</code></pre>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/mediastream-api-record-audio/?utm_source=rss">How to Record Audio Using the MediaStream API</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/mediastream-api-record-audio/?utm_source=rss</link><guid isPermaLink="false">/?p=203861</guid><category><![CDATA[APIs]]></category><category><![CDATA[JavaScript]]></category><dc:creator><![CDATA[Shahed Nasser]]></dc:creator><pubDate>Sun, 12 Sep 2021 16:00:04 GMT</pubDate><metaDesc>Learn how to set up the MediaStream API on your apps to allow users to record audio tracks, listen to them, and upload them to your site.</metaDesc></item><item><title><![CDATA[Creating a Portfolio to Showcase Your Engineering Abilities]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/portfolio-showcase-engineering-abilities/?utm_source=rss"
              title="Creating a Portfolio to Showcase Your Engineering Abilities"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631074460engineer-portfolio.jpg"
        alt="Creating a Portfolio to Showcase Your Engineering Abilities"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631074460engineer-portfolio-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631074460engineer-portfolio-1024x579.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631074460engineer-portfolio-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631074460engineer-portfolio.jpg 1200w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong>Portfolios have been used to promote graphic designers, photographers, graphic illustrators, and artists, but they can be just as useful to software engineers and developers. A software engineer is not just someone who writes code all the time. More often than not, software developers hail from different professional backgrounds and career tracks, and are passionate about a lot of things. A portfolio exhibits the creative side of a software engineer who&#8217;s willing to invest time in explaining their work not only to the general public, but to recruiters, hiring managers, and other engineers.</strong> </p>
<h2 id="whataportfolioisandwhyyouneedone">What a Portfolio Is, and Why You Need One</h2>
<p>A portfolio is more than just a resume. It&#8217;s a portal into your world of creativity and engineering prowess. Just like a company advertises its brand through a portfolio for its services and products, you can too as a software engineer. </p>
<p>A portfolio documents items that are not normally in a resume. As a software engineer, you are what you do. A picture is to a photographer as a project is to an engineer. </p>
<p>Your resume may speak of skills that you currently possess, but without projects to apply them to, they&#8217;re just hash tags and labels. A portfolio organizes the information normally found in a resume based on projects and marketable skills.</p>
<p>To keep up with rapid technology changes, you should be current with your skills. Skills are often related to the projects you accomplish at work or in your own time. A resume can be boring if it&#8217;s just plain text. A portfolio can document your projects, highlight the skills relevant to those projects, and link to live demos, video walkthroughs, and source code repositories.</p>
<p>Like a resume, a portfolio can be printable, but it&#8217;s best to be in the format of an interactive website so that it can be searchable on the Web and always up to date with your latest projects.</p>
<p>If you&#8217;ve encountered challenges in a project and successfully solved them, document the project in a portfolio. Doing so will not only prove your technical accomplishments, but will also highlight your problem-solving skills and persistence.</p>
<p>During a job interview, a portfolio can be a conversation piece with recruiters, hiring managers, and other engineers. Speaking about your portfolio might just leave an indelible impression on your future boss for years to come.</p>
<h2 id="planningaportfolio">Planning a Portfolio</h2>
<p>Like any other web development project, your portfolio website can be implemented in many different ways.  Consider asking these questions while planning your portfolio project.</p>
<ul>
<li>
<p><strong>Static or dynamic?</strong> Will your website be a statically generated set of pages or a dynamic one with a database?</p>
</li>
<li>
<p><strong>Single-page or multi-page?</strong> Will your portfolio website appear as a single-page application or <a href="https://en.wikipedia.org/wiki/Single-page_application">SPA</a>, or a multi-page website?</p>
</li>
<li>
<p><strong>Responsive?</strong> Will your portfolio website be portable across multiple browsers, platforms, and devices? </p>
</li>
<li>
<p><strong>What&#8217;s your budget?</strong> Are you looking to spend a considerable amount of time and money to make your portfolio website? </p>
</li>
</ul>
<p>Answering these questions will help you decide where to build and host your portfolio.</p>
<h2 id="whatsinaportfolio">What&#8217;s in a Portfolio</h2>
<p>Creating a portfolio website is like writing an article. First, you need to create an outline of what you want to include in your portfolio website.  Here are some recommendations.</p>
<h3 id="aboutsection">About Section</h3>
<p>Since a portfolio website is all about you and your accomplishments, remember to introduce yourself in a friendly but professional manner. Besides your name and role(s), try to add an original tag line or quote that you live by that conveys your personality. Add a short list of goals for your next project or role if you have one to match what your prospective client or recruiter is looking for. Although not necessary, you can also describe your personal interests.</p>
<p>The image below shows that About page of <a href="https://andrewborstein.com/">Andrew Borstein</a>.</p>
<p><img loading="lazy" src="https://editor.sitepoint.com/wp-content/uploads/2021/09/1630994864borstein.jpg" alt="The About page of Andrew Borstein" width="" height="" class="alignnone size-full wp-image-203510" srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/09/1630994864borstein.jpg 1254w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1630994864borstein-300x185.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1630994864borstein-1024x633.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1630994864borstein-768x475.jpg 768w" sizes="(max-width: 1254px) 100vw, 1254px" /></p>
<h3 id="projects">Projects</h3>
<p>The crux of your portfolio website is your projects. Step back and take a look at your past achievements and select several projects you&#8217;re proud to showcase. For each project, you can do the following:</p>
<ul>
<li>Organize all the information needed to describe a project in terms of words, pictures, videos, and source code, if available. </li>
<li>Arrange your projects in a grid or list presentation. </li>
<li>Label or tag the skills involved in creating the project to include programming languages, environments, frameworks, and deployment.</li>
</ul>
<p>Here&#8217;s an example of that from the portfolio of <a href="https://caferati.me/">Rafael Cafarati</a>.</p>
<p><img loading="lazy" src="https://editor.sitepoint.com/wp-content/uploads/2021/09/1630994916cafarati.jpg" alt="Projects organized on the portfolio site of Rafael Cafarati" width="" height="" class="alignnone size-full wp-image-203512" srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/09/1630994916cafarati.jpg 929w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1630994916cafarati-300x182.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1630994916cafarati-768x465.jpg 768w" sizes="(max-width: 929px) 100vw, 929px" /></p>
<h3 id="contactpage">Contact Page</h3>
<p>Provide enough contact information to reach you either by email, phone, or a web form. List additional links where recruiters can learn more about you, such as links to your LinkedIn, GitHub, and/or Twitter profiles.</p>
<p>Here&#8217;s an example for the portfolio site of <a href="https://jtom.me/">Jack Tomaszewski</a>.</p>
<p><img loading="lazy" src="https://editor.sitepoint.com/wp-content/uploads/2021/09/1630994966tomaszewski.jpg" alt="Contact info on the site of Jack Tomaszewski" width="" height="" class="alignnone size-full wp-image-203514" srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/09/1630994966tomaszewski.jpg 841w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1630994966tomaszewski-300x128.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1630994966tomaszewski-768x329.jpg 768w" sizes="(max-width: 841px) 100vw, 841px" /></p>
<h3 id="blog">Blog</h3>
<p>Link to a blog that you maintain that documents your thought processes and writing skills. Recruiters are just as interested in your communication style and your sound reasoning.</p>
<p>The image below shows an example from the site of <a href="http://findmatthew.com/">Matthew Williams</a>.</p>
<p><img loading="lazy" src="https://editor.sitepoint.com/wp-content/uploads/2021/09/1630995009williams.jpg" alt="Blog posts on the site of Matthew Williams" width="" height="" class="alignnone size-full wp-image-203516" srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/09/1630995009williams.jpg 1203w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1630995009williams-300x139.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1630995009williams-1024x474.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1630995009williams-768x356.jpg 768w" sizes="(max-width: 1203px) 100vw, 1203px" /></p>
<h3 id="appointmentpage">Appointment Page</h3>
<p>If you&#8217;re a freelancer accepting appointments from a potential client, embed a calendar app or provide a link to one. Simplify the process for a talent recruiter to speak to you about a position or project they&#8217;re looking to staff.</p>
<p><img loading="lazy" src="https://editor.sitepoint.com/wp-content/uploads/2021/09/1630995062appointments.jpg" alt="Appointment Scheduler" width="526" height="444" class="alignnone size-full wp-image-203518" srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/09/1630995062appointments.jpg 526w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1630995062appointments-300x253.jpg 300w" sizes="(max-width: 526px) 100vw, 526px" /></p>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/portfolio-showcase-engineering-abilities/?utm_source=rss">Creating a Portfolio to Showcase Your Engineering Abilities</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/portfolio-showcase-engineering-abilities/?utm_source=rss</link><guid isPermaLink="false">/?p=203504</guid><category><![CDATA[Career Advancement]]></category><category><![CDATA[Entrepreneur]]></category><category><![CDATA[Web]]></category><dc:creator><![CDATA[Merilyn Chesler]]></dc:creator><pubDate>Wed, 08 Sep 2021 16:00:36 GMT</pubDate><metaDesc>Need an online portfolio to showcase your engineering skills? Learn why it's important to have one, and how to plan, build, design &amp; host it.</metaDesc></item><item><title><![CDATA[Flexible API Design: Create Hooks for Your PHP API Pipeline]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/flexible-api-design-create-hooks-for-php-api-pipeline/?utm_source=rss"
              title="Flexible API Design: Create Hooks for Your PHP API Pipeline"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2021/09/1630893572api-pipeline.jpg"
        alt="Flexible API Design: Create Hooks for Your PHP API Pipeline"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/09/1630893572api-pipeline-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1630893572api-pipeline-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1630893572api-pipeline-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1630893572api-pipeline.jpg 1200w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong>Designing application programming interfaces (APIs) can be a challenging endeavor. Good APIs have simple interfaces that are straightforward and easy to use. Behind this simple interface can be many complex system interactions, and those interactions can really muddy the waters of an otherwise clearly defined endpoint task. Over time, developers may be asked to &#8220;tack on&#8221; additional business logic for existing endpoints. Then before you know it, a single API call is making interactions with over a dozen systems as part of its main flow.</strong> </p>
<p>Wouldn&#8217;t it be nice if we could develop a pipeline that&#8217;s straightforward but with the capability to add additional tasks later without obscuring the main flow? This article will show you how you can adapt an idea from WordPress, and programming in general, to give your APIs the ability to do more powerful interactions.</p>
<h2 id="whatarehooksactions">What Are Hooks/Actions?</h2>
<p>A <a href="https://developer.wordpress.org/plugins/hooks/">hook (aka actions/filters)</a> is the name given to events and their related callbacks by the WordPress community. If you have any experience in programming, you might be familiar with callbacks and the <a href="https://en.wikipedia.org/wiki/Publish%E2%80%93subscribe_pattern">publisher–subscriber pattern</a>. During processing, a system may trigger an event which calls zero to many functions subscribed to that event. For instance, in response to loading a page, WordPress makes calls to functions for loading the header, loading a title, listing posts or looking for the right template. These tasks are run without cluttering up the main process of generating a page.</p>
<p>The idea behind hooks is nothing new and wasn&#8217;t invented by WordPress. However, WordPress did a great job of implementing them during their server-side page processing lifecycle. This use of hooks, in my opinion, is probably the single greatest feature the platform has. With these hooks, users can write their own functionality — be it plugins or themes — that tie into WordPress and run whatever code you want right when it&#8217;s needed. Do you need to alter a header sent to the user? No problem: hook into the <code>wp_headers</code> event and you can alter the headers as you see fit.</p>
<h2 id="whyusehooksinanapi">Why Use Hooks in an API?</h2>
<p>Hooks are good for many things, including triggering some side tasks, calling out to another system through a PHP cURL command, building an object and putting it into a task queue to be picked up by another system later, sending an email, and more. This can all be done without needing to cloud the main flow of a given endpoint (and possibly forcing a new API version in the process). </p>
<p>If the endpoint is for creating a user, we can focus on creating that user record in the database and along the way just call out to whoever is listening during that process. Maybe after creating the user record, we send out an event that says &#8220;anyone listening to this, I just created a user and here&#8217;s their info&#8221;. Maybe some callback functions have subscribed to the event and are listening or maybe none are. The event doesn&#8217;t really care. </p>
<p>With this system, we can have our APIs call out to code that may be written at some later time. We can do this without needing to touch the API endpoint code itself. To demonstrate how this might work, let&#8217;s change gears and show the basic mechanism of how we can get this started in a PHP API. Do keep in mind that, while we&#8217;re using PHP here, we can actually implement similar logic in web applications using other languages.</p>
<h2 id="buildingthebasicmechanisms">Building the Basic Mechanisms</h2>
<p>To get started, we&#8217;ll need to be able to add a hook/action (which I&#8217;ll refer to as &#8220;hook&#8221; from now on). We&#8217;ll also need the ability to remove a hook and lastly trigger a hook. Once we define these mechanisms, we just need to make sure they&#8217;re included into the API and then locate places in our API where we might want to call these hooks. Below is one way we might want to set this up.</p>
<p>Here&#8217;s <code>hooks.php</code>:</p>
<pre><code class="php language-php">// Global array which will hold all of our hooks
// We will reference this array in each function to add/remove/call our hooks
// The code below should also be seen by any callbacks we write for the system later.
$hooks = [];

// Below are global functions that can be seen from our API code
// The add_hook method will allow us to attach a function (callback) to a given event name 
function add_hook($event_name, $callback) {
    global $hooks;

    if ($callback !== null) {
        if ($callback) {
          // We can set up multiple callbacks under a single event name
            $hooks[$event_name][] = $callback;
        }
    }
}

// Super easy to implement, we remove the given hook by its name
function remove_hook($event_name) {
    global $hooks;

    unset($hooks[$event_name]);
}

// When we want to trigger our callbacks, we can call this function 
// with its name and any parameters we want to pass.
function do_hook($event_name, ...$params) {
    global $hooks;

    if (isset($hooks[$event_name])) {
      // Loop through all the callbacks on this event name and call them (if defined that is)
      // As we call each callback, we given it our parameters.
        foreach ($hooks[$event_name] as $function) {
            if (function_exists($function)) {
                call_user_func($function, ...$params);
            }
        }
    }
}
</code></pre>
<p>Now that we have our <code>hooks.php</code> file created, we simply need to include it into our API so that these functions can be seen. Once this is done, it&#8217;s just a matter of inserting the hooks into our API using <code>do_hook</code>. </p>
<p>As a simple example, let&#8217;s assume we have an API for registering a new user with our system. We may have a REST API endpoint called <code>/addUser</code>. In the name of simplicity, let&#8217;s also assume that the goal here is to simply insert a new user&#8217;s name and age into our database&#8217;s <code>users</code> table. Pretty straight forward, right?</p>
<pre><code class="php language-php">// POST endpoint for adding a user (part of a larger API class)
public function addUser($name, $age) {
  if ($this-&gt;request-&gt;method === 'post') {
    try {
      $this-&gt;db-&gt;insert('users', ['name' =&gt; $name, 'age' =&gt; $age]);
      return new Response(200, 'User created successfully!');
    } catch (Exception $e) {
      // Oops, something went wrong.
      // Do some logging or whatever.
    }
  }

  // If not a POST request, return http status 400
  return new Response(400, 'Bad request');
}
</code></pre>
<p>The code above is an overly simplistic and generalized view of how we might add a new user. The idea is that, if someone were to call our API&#8217;s <code>/addUser</code> endpoint, they would eventually arrive at this function where the name and age of the user is pulled out of the posted data. We first check to make sure they&#8217;re posting (as proper REST rules dictate) and then try to insert the user into the <code>users</code> table. </p>
<p>Next, if the user has been inserted successfully, we want to call a hook to let any code listening that a user was created (this is similar to raising an event in other languages). </p>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/flexible-api-design-create-hooks-for-php-api-pipeline/?utm_source=rss">Flexible API Design: Create Hooks for Your PHP API Pipeline</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/flexible-api-design-create-hooks-for-php-api-pipeline/?utm_source=rss</link><guid isPermaLink="false">/?p=203463</guid><category><![CDATA[APIs]]></category><category><![CDATA[PHP]]></category><category><![CDATA[Programming]]></category><category><![CDATA[Web]]></category><dc:creator><![CDATA[Tim Hurd]]></dc:creator><pubDate>Tue, 07 Sep 2021 16:00:55 GMT</pubDate><metaDesc>APIs can easily become overcomplicated and slow. Learn how to develop a pipeline that's easy to expand later without obscuring the main flow.</metaDesc></item><item><title><![CDATA[How to Get Started with Automated Email Marketing]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/automated-email-marketing-getting-started/?utm_source=rss"
              title="How to Get Started with Automated Email Marketing"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2021/09/1630834250automated-email-marketing2.jpg"
        alt="How to Get Started with Automated Email Marketing"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/09/1630834250automated-email-marketing2-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1630834250automated-email-marketing2-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1630834250automated-email-marketing2-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1630834250automated-email-marketing2.jpg 1200w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong>Automated email marketing is the best option for sending personalized messages. Thanks to automation workflows, you can send personalized offers to customers at the relevant time, laying the groundwork for increased revenue.</strong></p>
<p>In this article, we’ll take a look at:</p>
<ul>
<li>what email marketing automation is</li>
<li>the benefits of email marketing automation </li>
<li>the steps you need to take to launch email marketing automation workflows in your own company</li>
</ul>
<p>We’ll also discuss the most popular email marketing automation software options to help you find the best one for you. And at the end, we&#8217;ll take a look at specific examples of emails that you can start sending out to your clients in a short time.</p>
<h2 id="thepotentialofemailmarketing">The Potential of Email Marketing</h2>
<p>The potential of email marketing can’t be ignored. Email ROI has risen to <a href="https://dma.org.uk/uploads/misc/marketers-email-tracker-2019.pdf">$58 per each $1 spent</a>, according to the Marketer Email Tracker 2019 report.</p>
<p>But, considering that <a href="https://smarterhq.com/privacy-report">72% of consumers</a> only respond to personalized digital marketing messages, simply sending emails manually isn’t enough.</p>
<p>In fact, personalizing emails manually is unthinkable with a decent amount of customers or plans for scaling your ecommerce venture or small business.</p>
<p>This is where email marketing automation makes its grand entrance.</p>
<h2 id="whatautomatedemailmarketingis">What Automated Email Marketing Is</h2>
<p>Automated email marketing is a workflow where emails are sent to subscribers automatically.</p>
<p>However, these emails aren’t just robotically sent to anyone at any time.</p>
<p>If your automated email marketing strategy is properly designed and well executed, <em>the right email is sent to the right subscriber at the right time</em>.</p>
<p>When it comes to the content of automated marketing emails, a lot depends on your creativity. You could come up with almost any kind of email to send to your users. But technically, there are three main types of automated emails.</p>
<p>First, there are <strong>triggered emails</strong>, also called <strong>autoresponders</strong>. These can be sent after a certain set time or after any predefined user action. For example, you could set up a triggered re-engagement email that’s sent when a user hasn’t logged on to their account in a certain number of days. Or, when a new user creates an account, an automated welcome email with recommended next steps could be sent.</p>
<p>Similar to autoresponders are <strong>behavioral emails</strong>. The difference is that these are sent based on a user’s interactions with previously sent emails. For example, if a user clicks through your offer in one email but doesn’t complete the purchase, you could send them a follow-up with a discount code.</p>
<p>Besides single triggered emails and autoresponders, you can also send automated <strong>email drip campaigns</strong>. An email drip campaign is a sequence of lead nurturing emails that work together to convert the lead by the end of the sequence. These automated emails can be triggered by a particular user action, but you can also send them on a schedule.</p>
<p>Ultimately, all automated emails should reflect the point on the customer journey that the specific user receiving the emails is in. The emails should always be personalized in some shape or form, to match the subscriber’s intent and needs.</p>
<p>In a way, automated marketing emails are similar to transactional emails. However, their main goal isn’t to share routine information. Instead, automated email marketing aims to engage the user and promote your products or services.</p>
<p>And luckily, automated email marketing is easier to implement than it might sound. If you take the initial time to do it, you’ll end up saving a lot of time and creating extra value for your customers.</p>
<h2 id="thebenefitsofemailmarketing">The Benefits of Email Marketing</h2>
<p>If done right, a well-executed and personalized automated email can:</p>
<ul>
<li>give an inactive user a reason to come back to your service, thanks to an offer on their favorite product category (<strong>re-engagement email</strong>)</li>
<li>persuade a hesitant buyer to go through with their purchase and check out the items they left in the shopping cart (<strong>abandoned cart email</strong>)</li>
<li>enlighten an overwhelmed user about the features and benefits of your complex service (<strong>informational email</strong>)</li>
</ul>
<p>When you automate your email marketing efforts, you’ll end up with emails that are on time, more personalized, and therefore more relevant to your customers. In short, email marketing automation lets you grow your business and you’re bound to benefit in various ways. Let’s take a closer look at what you can achieve if you set up email marketing automation.</p>
<h3 id="increaseuserengagement">Increase user engagement</h3>
<p>First of all, automated email marketing increases user engagement. If your user sees an email that’s personalized to exactly match their interests, they’re more likely to open the email, click through the offer, and finally end up making a purchase.</p>
<h3 id="improveuserexperience">Improve user experience</h3>
<p>On top of that, email automation improves the user experience. This is thanks to the fact that automated marketing emails are more personalized — and therefore more relevant. In fact, if you send automated emails with promotions or even just references to the kinds of products that a specific user is interested in, they’re more likely to feel satisfied with your service.</p>
<h3 id="buildastrongerbrand">Build a stronger brand</h3>
<p>Next, automating marketing emails helps build your brand and create stronger customer relationships. Following from the previous two points, if you send your email subscribers personalized, relevant, and engaging emails, they’re bound to view your brand as reliable and helpful for meeting their needs. This way, they&#8217;ll more likely return and even recommend your brand to others.</p>
<h3 id="easilyscaleyouremailmarketingstrategy">Easily scale your email marketing strategy</h3>
<p>Email automation lets you easily scale your email marketing strategy. With email marketing automation software, it doesn’t matter if you’re sending the email to 100, 10,000, or 1,000,000 subscribers. It&#8217;s true that coming up with relevant offers and creating the email templates takes time. But once you’re done with those, the automated email marketing software will do the heavy lifting and you&#8217;ll be able to save time and grow your business.</p>
<h3 id="increaserevenue">Increase revenue</h3>
<p>Finally, sending automated marketing emails helps increase revenue. Let’s take cart abandonment emails, for example. <a href="https://www.klaviyo.com/marketing-resources/abandoned-cart-benchmarks">According to Klaviyo</a>, cart abandonment emails can have open rates as high as 41.18% and can add an average revenue of $5.81 per recipient. Considering how easy it is to set up abandoned cart emails, it’s pretty much like finding money.</p>
<h3 id="alwaysbeontimewithautomatedemails">Always be on time with automated emails</h3>
<p>In addition to all the benefits covered above, email marketing automation has the perk that you can always send it at the exact moment when it can be most relevant and helpful to your potential customers. If you rely on messaging your new customers manually whenever you get to it, you might either miss the clue or simply send the email too late.</p>
<h2 id="howtogetstartedwithemailmarketingautomation">How to Get Started with Email Marketing Automation</h2>
<p>As seen, there are huge benefits to gain from automating your email marketing efforts. But in order to reap the benefits, you must first set the whole thing up.</p>
<p>So, how do you get started with email marketing automation?</p>
<p>Let’s go through the necessary steps and find out.</p>
<h3 id="1setgoals">1. Set goals</h3>
<p>First and foremost, you should set your goals. What exactly do you want to achieve with email marketing automation?</p>
<p>Most likely, your ultimate goal is to increase sales and revenue. More specifically, though, this goal breaks down into several other common email marketing goals:</p>
<ul>
<li><a href="https://www.sitepoint.com/grow-traffic-capture-audience/">increase website traffic</a></li>
<li>obtain new customers</li>
<li>reinforce brand image</li>
<li>build relationships with existing customers</li>
<li>improve email open rates</li>
</ul>
<p>However, keep in mind that these are only some of the most common goals and they’re quite general. Based on your own general goals, you should set measurable and time-bound objectives that help you carry out your strategy in a successful way.</p>
<p>If you’d like to find out more about this step, you can take a look at this great <a href="https://mailchimp.com/resources/create-an-email-marketing-strategy/">Mailchimp guide</a> on how to create a winning strategy.</p>
<h3 id="2planthecontent">2. Plan the content</h3>
<p>Based on your goals and objectives, you should now plan your content. In other words, you should decide which types of marketing emails you&#8217;ll send. You can write the actual content a bit later.</p>
<p>Now, is your goal building stronger relationships with existing customers and ensuring they’re loyal to your brand? In that case, you could set up <a href="https://www.campaignmonitor.com/blog/email-marketing/birthday-email-marketing-guide/">personalized birthday discounts</a>, based on the products and services your users have previously purchased.</p>
<p>Or, if one of your goals is to get more people to sign up for an online course, you could send a drip email campaign before the course starts, introducing the course plan and maybe even offering early-bird and last-minute discounts.</p>
<p>At the end of this post, there are many more automation examples to help you figure out your content plan. On top of that, there are great email templates available, with most email marketing automation tools also able to ease the content planning process.</p>
<p>This brings us to the next step.</p>
<h3 id="3chooseanautomatedemailmarketingtool">3. Choose an automated email marketing tool</h3>
<p>Now that you&#8217;ve planned which automated emails you’re going to send to achieve your goals, you can choose an email marketing tool to help you fulfill the plan.</p>
<p>As there are many email marketing services out there, you should choose the one that’s easy to use for you, has the most important features, and matches the needs of your marketing strategy.</p>
<p>According to <a href="https://websitesetup.org/best-email-marketing-services/">an analysis</a> of different email marketing services, these are the essential features that you should be looking for:</p>
<ul>
<li>the facility to add email contacts in bulk</li>
<li>detailed reporting</li>
<li>high deliverability</li>
<li>campaign management tools</li>
<li>marketing automation tools (of course)</li>
</ul>
<p>On top of that, A/B testing and email segmentation could be really useful features as well.</p>
<p>Keep in mind, though, that it’s easy to get overly excited about fancy features when choosing an email marketing automation tool. But if you’re just starting out with email marketing, you might not need the most advanced gadgets and features, like a landing page builder, a fancy <abbr title="customer relationship manager">CRM</abbr>, or a Facebook ads integration.</p>
<p>Luckily, most services offer a free trial or plan, so you can try out several marketing automation tools and make sure you only commit to the one that fits you best.</p>
<h3 id="4assembleamailinglist">4. Assemble a mailing list</h3>
<p>Once you’ve set goals, created a content plan, and chosen the right email marketing tool, you can proceed with assembling a contact list. Now, if you already have a subscribers list, you can simply upload it to the email marketing software that you’re using.</p>
<p>But if you don’t have a list, you should <a href="https://wpforms.com/lead-capture-form/">set up a lead capture form</a> right away so you can already get some new signups while you’re setting up email marketing automation.</p>
<p>In essence, you should come up with an offer so that your website visitors will give you their email address. This can either be a simple informative newsletter or a discount code. Or, if you have the content, you can offer an ebook or toolkit in exchange for the email address. You can even use several offers to ensure a visitor finds one that’s relevant to them.</p>
<p>These offers can be set up in various ways: in the form of a pop-up, banner, or sticky bar, or even a landing page. Whichever you choose, you should ensure the offer is helpful, not intrusive.</p>
<p>You can find out more about how to build an email list from scratch by reading to this <a href="https://unbounce.com/campaign-strategy/how-to-build-an-email-list/">helpful guide by Unbounce</a>. But however you decide to assemble your email list, make sure you include an option for users to unsubscribe from your email messages.</p>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/automated-email-marketing-getting-started/?utm_source=rss">How to Get Started with Automated Email Marketing</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/automated-email-marketing-getting-started/?utm_source=rss</link><guid isPermaLink="false">/?p=203280</guid><category><![CDATA[Business]]></category><category><![CDATA[Computing]]></category><category><![CDATA[Email Marketing]]></category><category><![CDATA[Entrepreneur]]></category><category><![CDATA[Low Code]]></category><category><![CDATA[Marketing]]></category><category><![CDATA[Web]]></category><dc:creator><![CDATA[Kaarle Varkki]]></dc:creator><pubDate>Mon, 06 Sep 2021 16:00:07 GMT</pubDate><metaDesc>Are you using emails for marketing? Learn about email marketing automation options, their benefits, how to set them up, and how and use them.</metaDesc></item><item><title><![CDATA[A Practical Guide to Creating Reusable React Components]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/creating-reusable-react-components/?utm_source=rss"
              title="A Practical Guide to Creating Reusable React Components"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2021/09/1630652265reusable-react-components.jpg"
        alt="A Practical Guide to Creating Reusable React Components"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/09/1630652265reusable-react-components-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1630652265reusable-react-components-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1630652265reusable-react-components-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1630652265reusable-react-components.jpg 1200w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong>Although React is one of the most popular and most used front-end frameworks in the world, many developers still struggle when it comes to refactoring code for improved reusability. If you&#8217;ve ever found yourself repeating the same snippet of code all throughout your React app, you&#8217;ve come to the right article.</strong></p>
<p>In this tutorial, you&#8217;ll be introduced to the three most common indicators that it&#8217;s time to build a reusable React component. Then we&#8217;ll go on to look at some practical demos by building a reusable layout and two exciting React hooks. </p>
<p>By the time you&#8217;ve finished reading, you&#8217;ll be able to figure out by yourself <em>when</em> it&#8217;s appropriate to create reusable React components, and <em>how</em> to do so.</p>
<p>This article assumes a basic knowledge of React and React hooks. If you want to brush up on these topics, I recommend you to check out “<a href="https://www.sitepoint.com/getting-started-react-beginners-guide/">Getting Started with React</a>” guide and “<a href="https://www.sitepoint.com/react-hooks/">Intorduction to React Hooks</a>”.</p>
<h2 id="topthreeindicatorsofareusablereactcomponent">Top Three Indicators of a Reusable React Component</h2>
<p>First let&#8217;s look at some indications of <em>when</em> you might want to do this.</p>
<h3 id="repetitivecreationofwrapperswiththesamecssstyle">Repetitive creation of wrappers with the same CSS style</h3>
<p>My favorite sign of knowing when to create a reusable component is the repetitive use of the same CSS style. Now, you may think, &#8220;Wait a minute: why don&#8217;t I simply assign the same class name to elements that share the same CSS style?&#8221; You&#8217;re absolutely right. It&#8217;s not a good idea to create reusable components every time some elements in different components share the same style. In fact, it may introduce unnecessary complexity. So you have to ask yourself one more thing: are these commonly styled elements <em>wrappers</em>?</p>
<p>For example, consider the following login and signup pages:</p>
<pre><code class="jsx language-jsx">// Login.js
import './common.css';

function Login() {
  return (
    &lt;div className='wrapper'&gt;
      &lt;main&gt;
        {...}
      &lt;/main&gt;
      &lt;footer className='footer'&gt;
        {...}
      &lt;/footer&gt;
    &lt;/div&gt;
  );
}
</code></pre>
<pre><code class="jsx language-jsx">// SignUp.js
import './common.css';

function Signup() {
  return (
    &lt;div className='wrapper'&gt;
      &lt;main&gt;
        {...}
      &lt;/main&gt;
      &lt;footer className='footer'&gt;
        {...}
      &lt;/footer&gt;
    &lt;/div&gt;
  );
}
</code></pre>
<p>The same styles are being applied to the container (the <code>&lt;div&gt;</code> element) and the footer of each component. So in this case, you can create two reusable components — <code>&lt;Wrapper /&gt;</code> and <code>&lt;Footer /&gt;</code> —  and pass them children as a prop. For example, the login component could be refactored as follows: </p>
<pre><code class="jsx language-jsx">// Login.js
import Footer from "./Footer.js";

function Login() {
  return (
    &lt;Wrapper main={{...}} footer={&lt;Footer /&gt;} /&gt;
  );
} 
</code></pre>
<p>As a result, you no longer need to import <code>common.css</code> in multiple pages or create the same <code>&lt;div&gt;</code> elements to wrap everything. </p>
<h3 id="repetitiveuseofeventlisteners">Repetitive use of event listeners</h3>
<p>To attach an event listener to an element, you can either handle it inside <code>useEffect()</code> like this:</p>
<pre><code class="jsx language-jsx">// App.js
import { useEffect } from 'react';

function App() {
  const handleKeydown = () =&gt; {
    alert('key is pressed.');
  }

  useEffect(() =&gt; {
    document.addEventListener('keydown', handleKeydown);
    return () =&gt; {
      document.removeEventListener('keydown', handleKeydown);
    }
  }, []);

  return (...);
}
</code></pre>
<p>Or you can do it directly inside your JSX like this, as is demonstrated in the following button component:</p>
<pre><code class="jsx language-jsx">// Button.js
function Button() {
  return (
    &lt;button type="button" onClick={() =&gt; { alert('Hi!')}}&gt;
      Click me!
    &lt;/button&gt;
  );
};
</code></pre>
<p>When you want to add an event listener to <code>document</code> or <code>window</code>, you&#8217;d have to go with the first method. However, as you may have already realized, the first method requires more code with the use of <code>useEffect()</code>, <code>addEventListener()</code> and <code>removeEventListener()</code>. So in such case, creating a custom hook will allow your components to be more concise. </p>
<p>There are four possible scenarios for using event listeners:</p>
<ul>
<li>same event listener, same event handler</li>
<li>same event listener, different event handler</li>
<li>different event listener, same event handler</li>
<li>different event listener, different event handler</li>
</ul>
<p>In the first scenario, you can create a hook where both the event listener and the event handler are defined. Consider the following hook:</p>
<pre><code class="jsx language-jsx">// useEventListener.js
import { useEffect } from 'react';

export default function useKeydown() {
  const handleKeydown = () =&gt; {
    alert('key is pressed.');
  }

  useEffect(() =&gt; {
    document.addEventListener('keydown', handleKeydown);
    return () =&gt; {
      document.removeEventListener('keydown', handleKeydown);
    }
  }, []);
};
</code></pre>
<p>You can then use this hook in any component as follows:</p>
<pre><code class="jsx language-jsx">// App.js
import useKeydown from './useKeydown.js';

function App() {
  useKeydown();
  return (...);
};
</code></pre>
<p>For the other three scenarios, I recommend creating a hook that receives an event and an event handling function as props. For example, I will pass <code>keydown</code> and <code>handleKeydown</code> as props to my custom hook. Consider the following hook:</p>
<pre><code class="jsx language-jsx">// useEventListener.js
import { useEffect } from 'react';

export default function useEventListener({ event, handler} ) {
  useEffect(() =&gt; {
    document.addEventListener(event, props.handler);
    return () =&gt; {
      document.removeEventListener(event, props.handler);
    }
  }, []);
};
</code></pre>
<p>You can then employ this hook in any component as follows:</p>
<pre><code class="jsx language-jsx">// App.js
import useEventListener from './useEventListener.js';

function App() {
  const handleKeydown = () =&gt; {
    alert('key is pressed.');
  }
  useEventListener('keydown', handleKeydown);
  return (...);
};
</code></pre>
<h3 id="repetitiveuseofthesamegraphqlscript">Repetitive use of the same GraphQL script</h3>
<p>You don&#8217;t really need to look for signs when it comes to making GraphQL code reusable. For complex applications, GraphQL scripts for a query or a mutation easily take up 30–50 lines of code because there are many attributes to request. If you&#8217;re using the same GraphQL script more than once or twice, I think it deserves its own custom hook. </p>
<p>Consider the following example:</p>
<pre><code class="jsx language-jsx">import { gql, useQuery } from "@apollo/react-hooks";

const GET_POSTS = gql`
  query getPosts {
    getPosts {
    user {
      id
      name
      ...
      }
      emojis {
         id
         ...
      }
      ...
  }
`;

const { data, loading, error } = useQuery(GET_POSTS, {
  fetchPolicy: "network-only"
});
</code></pre>
<p>Instead of repeating this code in every page that requests posts from the back end, you should create a React hook for this particular API:</p>
<pre><code class="jsx language-jsx">import { gql, useQuery } from "@apollo/react-hooks";

function useGetPosts() {
  const GET_POSTS = gql`{...}`;
  const { data, loading, error } = useQuery(GET_POSTS, {
    fetchPolicy: "network-only"
  });
  return [data];
}

const Test = () =&gt; {
  const [data] = useGetPosts();
  return (
    &lt;div&gt;{data?.map(post =&gt; &lt;h1&gt;{post.text}&lt;/h1&gt;)}&lt;/div&gt;
  );
};
</code></pre>
<h2 id="buildingoutthreereusablereactcomponents">Building Out Three Reusable React Components</h2>
<p>Now that we&#8217;ve seen some common signs of <em>when</em> to create a new component that you can share throughout your react application, let&#8217;s put that knowledge into practice and build out three practical demos.</p>
<h3 id="1layoutcomponent">1. Layout component</h3>
<p>React is normally used for building complex web apps. This means that a large number of pages need to be developed in React, and I doubt that every page of an app will have a different layout. For instance, a web app consisting of 30 pages usually uses less than five different layouts. Therefore, building a flexible, reusable layout that can be utilized in many different pages is essential. This will save you very many lines of code and consequently a tremendous amount of time.</p>
<p>Consider the following React functional component:</p>
<pre><code class="jsx language-jsx">// Feed.js
import React from "react";
import style from "./Feed.module.css";

export default function Feed() {
  return (
    &lt;div className={style.FeedContainer}&gt;
      &lt;header className={style.FeedHeader}&gt;Header&lt;/header&gt;
      &lt;main className={style.FeedMain}&gt;
        {
          &lt;div className={style.ItemList}&gt;
            {itemData.map((item, idx) =&gt; (
              &lt;div key={idx} className={style.Item}&gt;
                {item}
              &lt;/div&gt;
            ))}
          &lt;/div&gt;
        }
      &lt;/main&gt;
      &lt;footer className={style.FeedFooter}&gt;Footer&lt;/footer&gt;
    &lt;/div&gt;
  );
}

const itemData = [1, 2, 3, 4, 5];
</code></pre>
<p>This is a typical web page that has a <code>&lt;header&gt;</code>, a <code>&lt;main&gt;</code> and a <code>&lt;footer&gt;</code>. If there are 30 more web pages like this, you would easily get tired of repeatedly writing HTML tags and applying the same style over and over.</p>
<p>Instead, you can create a layout component that receives <code>&lt;header&gt;</code>, <code>&lt;main&gt;</code> and <code>&lt;footer&gt;</code> as props, as in the following code:</p>
<pre><code class="jsx language-jsx">// Layout.js
import React from "react";
import style from "./Layout.module.css";
import PropTypes from "prop-types";

export default function Layout({ header, main, footer }) {
  return (
    &lt;div className={style.Container}&gt;
      &lt;header className={style.Header}&gt;{header}&lt;/header&gt;
      &lt;main className={style.Main}&gt;{main}&lt;/main&gt;
      &lt;footer className={style.Footer}&gt;{footer}&lt;/footer&gt;
    &lt;/div&gt;
  );
}

Layout.propTypes = {
  main: PropTypes.element.isRequired,
  header: PropTypes.element,
  footer: PropTypes.element
};
</code></pre>
<p>This component doesn&#8217;t require <code>&lt;header&gt;</code> and <code>&lt;footer&gt;</code>. So, you can use this same layout for pages regardless of whether they contain a header or a footer.</p>
<p>Using this layout component, you can turn your feed page into a much more sophisticated block of code:</p>
<pre><code class="jsx language-jsx">// Feed.js
import React from "react";
import Layout from "./Layout";
import style from "./Feed.module.css";

export default function Feed() {
  return (
    &lt;Layout
      header={&lt;div className={style.FeedHeader}&gt;Header&lt;/div&gt;}
      main={
        &lt;div className={style.ItemList}&gt;
          {itemData.map((item, idx) =&gt; (
            &lt;div key={idx} className={style.Item}&gt;
              {item}
            &lt;/div&gt;
          ))}
        &lt;/div&gt;
      }
      footer={&lt;div className={style.FeedFooter}&gt;Footer&lt;/div&gt;}
    /&gt;
  );
}

const itemData = [1, 2, 3, 4, 5];
</code></pre>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/creating-reusable-react-components/?utm_source=rss">A Practical Guide to Creating Reusable React Components</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/creating-reusable-react-components/?utm_source=rss</link><guid isPermaLink="false">/?p=203273</guid><category><![CDATA[JavaScript]]></category><category><![CDATA[React]]></category><dc:creator><![CDATA[Hanbyeol (Benny) Joo]]></dc:creator><pubDate>Sun, 05 Sep 2021 23:00:04 GMT</pubDate><metaDesc>When's a good time to create reusable React components? Learn three key indicators for when they're needed, and three popular uses cases.</metaDesc></item><item><title><![CDATA[7 of the Best Code Playgrounds]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/7-code-playgrounds/?utm_source=rss"
              title="7 of the Best Code Playgrounds"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2018/08/1630484762code-playgrounds.jpg"
        alt="7 of the Best Code Playgrounds"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2018/08/1630484762code-playgrounds-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2018/08/1630484762code-playgrounds-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2018/08/1630484762code-playgrounds-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2018/08/1630484762code-playgrounds.jpg 1200w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong>A variety of front-end code playgrounds have appeared over the years. Most offer a quick and dirty way to experiment with client-side (and sometimes server-side) code then share it with others. Here&#8217;s our look at seven of the best.</strong></p>
<p>Online coding playgrounds typically include:</p>
<ul>
<li>color-coded HTML, CSS, and JavaScript editors</li>
<li>code command auto-complete</li>
<li>a preview window which (normally) live reloads without a manual refresh</li>
<li>HTML preprocessors such as HAML</li>
<li>Less, Sass, Stylus, and similar CSS preprocessors</li>
<li>inclusion of popular JavaScript libraries such as React, Preact, Angular, and Vue.js (some newer playgrounds also allow back-end code development)</li>
<li>developer consoles and code validation tools</li>
<li>coding collaboration facilities</li>
<li>sharing via a short URL</li>
<li>embedding demonstrations in other pages</li>
<li>code cloning and forking</li>
<li>copying to code repositories such as GitHub</li>
<li>zero cost for a basic service</li>
<li>further premium services for a small monthly charge</li>
<li>a way to show off your coding skills to the world!</li>
</ul>
<p>They allow you to test and keep experimental code snippets without the rigmarole of creating files, firing up your editor, or running a local server.</p>
<p>Let&#8217;s look at some of the better options.</p>
<h2 id="1codepenhttpcodepenio">1. <a href="http://codepen.io/">CodePen</a></h2>
<p><a href="http://codepen.io/"><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/08/1628090414codepen.jpg" alt="CodePen" /></a></p>
<p><a href="http://codepen.io/">CodePen</a> wasn&#8217;t the first, but it&#8217;s one of the most popular and best-looking code playgrounds. Co-founded by Chris Coyier of CSS-Tricks, the service highlights popular Pens (client-side demonstrations) and Projects (online integrated development environments you can use to build web projects). It offers a clean and functional user editing interface with advanced functionality such as sharing, embedding, an error console, external JavaScript libraries, popular CSS preprocessors, and more.</p>
<p>CodePen PRO provides private Pens, asset hosting, a collaboration mode, and themes for embedded iframes starting from $8 per month.</p>
<h2 id="2jsfiddlehttpsjsfiddlenet">2. <a href="https://jsfiddle.net/">JSFiddle</a></h2>
<p><a href="https://jsfiddle.net/"><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/08/1628090422jsfiddle.jpg" alt="JSFiddle" /></a></p>
<p><a href="https://jsfiddle.net/">JSFiddle</a> was one of the earliest code playgrounds and influenced those which followed. It can be used for any combination of HTML, CSS, and JavaScript testing and offers a range of libraries and frameworks. Unusually, it can also simulate asynchronous Ajax requests.</p>
<p>JSFiddle concentrates on code so you won&#8217;t find a range of social features such as highlighted demonstrations and sharing facilities. The interface is simpler than others and, unusually, you must hit <strong>Run</strong> to reload the results pane. However, it always feels snappy and its simplicity may be preferable to some.</p>
<h2 id="3jsbinhttpjsbincom">3. <a href="http://jsbin.com/">JS Bin</a></h2>
<p><a href="http://jsbin.com/"><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/08/1628090420jsbin.jpg" alt="JS Bin" /></a></p>
<p><a href="http://jsbin.com/">JS Bin</a> was created by JavaScript guru <a href="http://remysharp.com/">Remy Sharp</a> and is still managed by him. It concentrates on coding basics and handles them well. Unlike some other playgrounds, you can edit the whole of an HTML file including the <code>&lt;head&gt;</code>.</p>
<p>As well as the usual options, libraries, and preprocessors, JS Bin was one of the first to offer a logging console, which is essential for JavaScript development. The commercial Pro account provides advanced features such as asset uploading, private bins, vanity URLs, and Dropbox synchronization. You can even <a href="https://jsbin.com/help/running-a-local-copy-of-jsbin/">download and install JS Bin locally</a> if you&#8217;re concerned about privacy or don&#8217;t want others to see the state of your code!</p>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/7-code-playgrounds/?utm_source=rss">7 of the Best Code Playgrounds</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/7-code-playgrounds/?utm_source=rss</link><guid isPermaLink="false">http://www.sitepoint.com/?p=63469</guid><category><![CDATA[CSS]]></category><category><![CDATA[CSS3]]></category><category><![CDATA[Debugging]]></category><category><![CDATA[HTML]]></category><category><![CDATA[HTML & CSS]]></category><category><![CDATA[JavaScript]]></category><category><![CDATA[Libraries]]></category><category><![CDATA[Programming]]></category><category><![CDATA[Web]]></category><dc:creator><![CDATA[Craig Buckler]]></dc:creator><pubDate>Wed, 01 Sep 2021 16:00:40 GMT</pubDate><metaDesc>Code playgrounds make it easy to experiment, share code, and show off your skills! Learn about seven of the best front-end code playgrounds.</metaDesc></item><item><title><![CDATA[Teaching as a Side Hustle for Engineers]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/teaching-side-hustle-engineers/?utm_source=rss"
              title="Teaching as a Side Hustle for Engineers"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2021/08/1630463978teaching-programming9.jpg"
        alt="Teaching as a Side Hustle for Engineers"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/08/1630463978teaching-programming9-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/1630463978teaching-programming9-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/1630463978teaching-programming9-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/1630463978teaching-programming9.jpg 1200w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong>Even if you&#8217;ve only progressed a short way into your development career, your knowledge has value to others. There may be people who know far more than you, but there are always more who are yet to acquire the skills you currently possess. And only a small percentage of those who know as much as you or more can efficiently document that expertise or pass it on to others.</strong></p>
<p>In this article, we&#8217;ll discuss how you can take advantage of your engineering know-how to build your reputation, help others, and improve your financial security.</p>
<p>Most people&#8217;s first teaching experience is writing &hellip;</p>
<h2 id="writeforyourself">Write for Yourself</h2>
<p>The first rule of write club is <em>always write for yourself</em>.</p>
<p>Forget dreams of fame and fortune and write what you&#8217;re passionate about. Choose topics you know such as problems you solved during real projects. Your brain will fool you into thinking you&#8217;ll remember the tools and techniques forever. It&#8217;s lying. Your collection of posts will become a personal knowledge repository. I still Google my own articles to discover how I tackled problems — <em>often only a few weeks after writing them</em>.</p>
<p>Writing for yourself has benefits, including the following:</p>
<ul>
<li>Punctuality prevails over perfection. You&#8217;re less likely to procrastinate because it&#8217;s more important to document a process while it&#8217;s fresh in your memory.</li>
<li>You won&#8217;t worry about perception. It&#8217;s your personal notes; whether it&#8217;s useful to others is irrelevant.</li>
<li>You&#8217;ll have fewer inhibitions. There&#8217;s no need to sweat over research, content duplication, keyword analysis, well good grammar, or other secondary priorities.</li>
</ul>
<p>Write regularly — <em>and make it public</em>.</p>
<p>Consider private posts when they contain references to intellectual property or personal information. This is rare in software engineering: you&#8217;ll generally be documenting an implementation approach or known API with your own experiences.</p>
<p>A personal blog created with a <a href="https://www.sitepoint.com/static-site-generators/">static site generator</a> such as <a href="https://www.sitepoint.com/getting-started-with-eleventy/">Eleventy</a> is ideal. Content can be written in Markdown files, backed up in a Git repository, transformed to various formats, and hosted for free using services such as <a href="https://pages.github.com/">GitHub</a>, <a href="https://www.netlify.com/">Netlify</a>, or <a href="https://vercel.com/">Vercel</a>.</p>
<p>Content management systems such as WordPress offer a more immediate publishing process and features such as search. The downside is that posts are stored in a database which can be more difficult to back up, and switching to another system is a burden (although <a href="https://www.sitepoint.com/wordpress-headless-cms-eleventy/">there are options</a>).</p>
<p>You can post to social media sites such as Facebook, Twitter, LinkedIn, and Medium. These provide further publicity, but you&#8217;ll lose control of your content and surrender some rights. Always ensure you have adequate copies.</p>
<p>Ultimately, use whatever tool makes you productive. It&#8217;s more important to write frequently than dither over the choice of publishing medium.</p>
<h2 id="shareyourcontent">Share Your Content</h2>
<p>Your content may be niche, or it may solve an obscure edge problem, but it will always have a target audience. A single post could help thousands of developers.</p>
<p>The most immediate candidates are your colleagues and clients. At some point, someone will ask for your help and you&#8217;ll be able to direct them your URLs. If that post doesn&#8217;t exist, you have a new topic for consideration.</p>
<p>Others will recognize your potential before you. Your reputation will increase and you may be asked to contribute further documentation, conduct peer reviews, or train colleagues. Engineers often avoid these tasks, so tackling the work will raise your profile and career prospects further.</p>
<p>From your perspective, you&#8217;re still writing for yourself. The process will make you a better developer. <em>Teaching others expands your knowledge and exposes the gaps</em>.</p>
<h2 id="postpolishing">Post Polishing</h2>
<p>Others may be thrilled by your work, but your most important critic is you.</p>
<p><em>Do you enjoy writing?</em></p>
<p>Few engineers are able to create good technical posts. Others may be capable writers but lack the inclination. Either could make money from writing but they&#8217;re unlikely to persevere over the long term.</p>
<p>A small set of developers posses the passion and motivation to write about a subject. You may fall into this group if you can list half a dozen post titles you&#8217;d like to write.</p>
<p>The next step is to write more focused and polished posts. First, pick your subject (or subjects). This seems obvious but you&#8217;re moving beyond a personal blog. No one will stop you posting about JavaScript, pancake recipes, and honey badger photography, but releasing it on the same site will confuse readers and search engines. Create separate channels for each subject as necessary.</p>
<p>If you&#8217;ve not done so already, purchase an appropriate domain — perhaps using your own name or your subject — and create a website. Design is important, but you can change it at any time. <em>Content matters more</em>. Many web industry celebrities have dreadful sites and it hasn&#8217;t held them back. <em>(Maybe be careful, though, if you&#8217;re writing about web design!)</em></p>
<p>Each post should have a single idea, objective, or purpose. Have a clear goal: <em>what do you want the reader to learn?</em></p>
<p>Simple, highly focused posts often resonate better with readers. For example: <em>How to Use Async/Await in JavaScript</em> can appeal to more people than the vaguer <em>Getting Started with Asynchronous Programming in JavaScript</em>. Both would cover the same topics, but <em>Async/Await</em> solves an immediate problem. (<em>Asynchronous Programming</em> may work better as a <a href="#booksandvideocourses">book</a>).</p>
<p>If you&#8217;re explaining a development topic, <em>demonstration code is essential</em>. Write the code before tackling the post. It&#8217;s often more difficult than the article, and it may change the way you approach the topic.</p>
<p>Example client-side code can be embedded directly into your post using tools such as <a href="https://codepen.io/">CodePen</a> or <a href="https://jsfiddle.net/">JSFiddle</a>. Server-side demonstrations are more difficult, but consoles are available for most languages including <a href="https://glitch.com/">Node.js</a>, <a href="https://www.mycompiler.io/new/deno">Deno</a>, <a href="https://www.writephponline.com/">PHP</a>, <a href="https://www.programiz.com/python-programming/online-compiler/">Python</a>, <a href="https://play.rust-lang.org/">Rust</a>, <a href="http://sqlfiddle.com/">SQL</a>, and even <a href="https://www.tutorialspoint.com/execute_basic_online.php">Qbasic</a>. At the very least, push your code to a public repository and add screenshots or expected output where appropriate.</p>
<p>Every word counts, so be concise. Start the post by summarizing what the reader will learn, then get to the point. Word count metrics are vanity statistics, <em>(although publications still use them to rank or approve articles)</em>.</p>
<p>Technical posts should work through solutions in a methodical manner. Explain each step in detail and be careful not to make unjustified presumptions about the reader&#8217;s level of knowledge. For example, if you&#8217;re explaining how to connect to an SQL database in Node.js, the reader will need to have some experience of those technologies. You shouldn&#8217;t need to explain how to open a terminal or install the runtime, but a quick overview describing how to initialize a project and add any necessary modules is essential. Avoid claiming a step is &#8220;simple&#8221;; <em>that may not be the case for some readers!</em></p>
<p>Find your own voice, be friendly, and be welcoming, but be wary of humor and sarcasm. They don&#8217;t always translate well to a global audience, and you risk offending some readers. A flippant remark can escalate and become the focal point of your post.</p>
<p>Above all, <em>continue to write for yourself</em>. Post frequently and don&#8217;t worry about perfection or view counts. Your articles are unlikely to make financial gains, but they&#8217;ll prove your abilities and accomplishments.</p>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/teaching-side-hustle-engineers/?utm_source=rss">Teaching as a Side Hustle for Engineers</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/teaching-side-hustle-engineers/?utm_source=rss</link><guid isPermaLink="false">/?p=203240</guid><category><![CDATA[Computing]]></category><category><![CDATA[Productivity Tools]]></category><dc:creator><![CDATA[Craig Buckler]]></dc:creator><pubDate>Tue, 31 Aug 2021 16:00:41 GMT</pubDate><metaDesc>As a developer, you have a lot of knowledge to offer others. Learn ways to share your skills, boost your status, and make some extra money.</metaDesc></item><item><title><![CDATA[Using SVG with Media Queries]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/using-svg-with-media-queries/?utm_source=rss"
              title="Using SVG with Media Queries"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2018/09/1630382754svg-media-queries.jpg"
        alt="Using SVG with Media Queries"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2018/09/1630382754svg-media-queries-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2018/09/1630382754svg-media-queries-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2018/09/1630382754svg-media-queries-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2018/09/1630382754svg-media-queries.jpg 1200w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong>In HTML documents, we can show, hide, or rearrange parts of the page based on the conditions of the viewport. If the browser window is 480 pixels wide, for example, we might shift our navigation from a horizontal one to a vertical, collapsible list. We can do something similar when using SVG with media queries.</strong></p>
<p>This article is an extract from Tiffany&#8217;s book <em><a href="https://www.sitepoint.com/premium/books/css-master-3rd-edition">CSS Master, 3rd Edition</a></em>. Check it out if you&#8217;d like to master other advanced CSS3 features like Flexbox and Grid!</p>
<p style="text-align:center;">* &nbsp;&nbsp;&nbsp;&nbsp; * &nbsp;&nbsp;&nbsp;&nbsp; *</p>
<p>As well as using CSS with HTML, we can also use CSS with SVG, or <em>Scalable Vector Graphics</em>. SVG is a markup format for describing flat, two-dimensional images. Because it’s a markup language, it has a Document Object Model, and can be used with CSS.</p>
<p>By using CSS with SVG, we can change the appearance of SVG based on user interaction. Or we can use the same SVG document in multiple places, and show or hide portions of it based on the width of the viewport.</p>
<p>All major browser engines support the <a href="https://caniuse.com/?search=svg">SVG 1.1</a> specification, and they have done for years. Support for features of <a href="https://svgwg.org/svg2-draft/">SVG 2</a>, on the other hand, is still a work in progress. Some of what we’ll discuss here has limited browser support at the time of writing. That may have changed by the time you’re reading this. Keep an eye on the Chromium meta issue — <a href="https://bugs.chromium.org/p/chromium/issues/detail?id=225863">Implement SVG2 features</a> — to track development progress in Chromium-based browsers. Watch the <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1328534">Support SVG 2 features</a> meta issue to follow Firefox’s implementation work, and WebKit’s <a href="https://bugs.webkit.org/show_bug.cgi?id=191292">Implement SVG 2</a> meta issue for Safari. Issue trackers can be unpleasant to navigate, but for now they’re the best way to track SVG 2 support.</p>
<p>Before we go any further, however, let’s talk about what SVG is and why you should use it.</p>
<h2 id="vectorimagesversusrasterimages">Vector Images versus Raster Images</h2>
<p>Most of the images currently used on the Web are raster images, also known as bitmap images. <strong>Raster images</strong> are made up of pixels on a fixed grid, with a set number of pixels per inch. JPEG, WebP, GIF, and PNG are all examples of raster image formats.</p>
<p>Raster images are <em>resolution dependent</em>. A 144 PPI (pixels-per-inch) PNG image looks great on a device with a 144 PPI display resolution. When viewed on a higher resolution, 400 PPI display, however, that same image can look fuzzy. Raster images also have fixed dimensions and look best at their original size. Scaling a 150 by 150 pixel image up to 300 by 300 pixels distorts it.</p>
<p>Instead of using pixels on a grid, vector image formats describe the primitive shapes — circles, rectangles, lines, or paths — that make up an image, and their placement within the document’s coordinate system. As a result, vector images are <em>resolution independent</em>, and retain their quality regardless of display resolution or display dimensions.</p>
<p>Resolution independence is the biggest advantage of SVG. We can scale images up or down with no loss of quality. The same image looks great on both high and low PPI devices. That said, SVG is poorly suited to the amount of color data required for photographs. It’s best for drawings and shapes. Use it in place of PNG and GIF images, and as a more flexible replacement for icon fonts.</p>
<p>Another advantage of SVG is that it was designed to be used with other web languages. We can create, modify, and manipulate SVG images with JavaScript. Or, as we’ll see below, we can style and animate SVG using CSS.</p>
<h2 id="associatingcsswithsvgdocuments">Associating CSS with SVG Documents</h2>
<p>Using CSS with SVG is a lot like using it with HTML. We can apply CSS using the <code>style</code> attribute of an SVG element, group CSS within a document using the <code>&lt;style&gt;</code> element, or link to an external stylesheet. The pros and cons of each method are the same as when using CSS with HTML.</p>
<h3 id="usingthestyleattribute">Using the <code>style</code> Attribute</h3>
<p>Here’s a simple SVG document where the code creates a black circle:</p>
<pre><code class="svg language-svg">&lt;svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 200 200" 
➥enable-background="new 0 0 200 200"&gt;
    &lt;circle cx="101.3" cy="96.8" r="79.6" /&gt;
&lt;/svg&gt;
</code></pre>
<p>The image below shows how that code renders in a browser.</p>
<p><img loading="lazy" src="https://editor.sitepoint.com/wp-content/uploads/2018/09/1630295140SVG1-1Circle.jpg" alt="A circle in SVG" width="400" height="389" class="alignnone size-full wp-image-203142" srcset="https://uploads.sitepoint.com/wp-content/uploads/2018/09/1630295140SVG1-1Circle.jpg 400w, https://uploads.sitepoint.com/wp-content/uploads/2018/09/1630295140SVG1-1Circle-300x292.jpg 300w" sizes="(max-width: 400px) 100vw, 400px" /></p>
<p>Let’s give our circle a pink fill using CSS and the <code>style</code> attribute:</p>
<pre><code class="svg language-svg">&lt;svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 200 200" 
➥enable-background="new 0 0 200 200"&gt;
    &lt;circle cx="101.3" cy="96.8" r="79.6" style="fill: #f9f" /&gt;
&lt;/svg&gt;
</code></pre>
<p>The effect of this is shown below.</p>
<p><img loading="lazy" src="https://editor.sitepoint.com/wp-content/uploads/2018/09/1630295175SVG1-2Circle.jpg" alt="Using the style attribute to add a fill color" width="400" height="384" class="alignnone size-full wp-image-203144" srcset="https://uploads.sitepoint.com/wp-content/uploads/2018/09/1630295175SVG1-2Circle.jpg 400w, https://uploads.sitepoint.com/wp-content/uploads/2018/09/1630295175SVG1-2Circle-300x288.jpg 300w" sizes="(max-width: 400px) 100vw, 400px" /></p>
<p>Here’s one difference between using CSS with HTML and using it with SVG: property names. Many of the CSS properties that we use with HTML documents aren’t compatible with SVG, and vice versa. We’ll come back to this point later in the chapter.</p>
<p>Using the <code>style</code> attribute isn’t the best way to use CSS, of course. Doing so limits the ability to reuse those styles across multiple elements or documents. Instead, we should use inline or linked CSS.</p>
<h3 id="embeddingcssinsvgdocuments">Embedding CSS in SVG Documents</h3>
<p>Instead of using the <code>style</code> attribute, we can use the <code>&lt;style&gt;</code> element:</p>
<pre><code class="svg language-svg">&lt;svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0
➥ 200 200" enable-background="new 0 0 200 200"&gt;
    &lt;style type="text/css"&gt;
        circle {
            fill: #0c0;
        }
    &lt;/style&gt;
    &lt;circle cx="101.3" cy="96.8" r="79.6" /&gt;
&lt;/svg&gt;
</code></pre>
<p>Embedding CSS in an SVG document lets us reuse those styles for multiple elements within the same document, but it prevents that CSS from being shared across multiple documents. That’s fine for logos and icons. But if you’re creating something like a library of chart styles, an external CSS file is a better bet.</p>
<p>Using a standard text editor, you can also add CSS to SVG images created with software such as Sketch, Inkscape, or Illustrator. Doing so won’t affect your ability to edit the image with the drawing application, but if you edit the file using image software, the application may rewrite or remove your CSS.</p>
<h3 id="linkingfromsvgtoanexternalcssfile">Linking from SVG to an External CSS File</h3>
<p>As with HTML, linking to an external CSS file makes it possible to share styles across several SVG documents. To link an external CSS file, add <code>&lt;? xml-stylesheet ?&gt;</code> to the beginning of your SVG file:</p>
<pre><code class="svg language-svg">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;?xml-stylesheet href="style.css" type="text/css"?&gt;
&lt;svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0
➥ 200 200" enable-background="new 0 0 200 200"&gt;
    &lt;circle cx="101.3" cy="96.8" r="79.6" /&gt;
&lt;/svg&gt;
</code></pre>
<h4 id="usingthelinkelement">Using the <code>&lt;link&gt;</code> Element</h4>
<p>Alternatively, use the HTML <code>&lt;link&gt;</code> element. If you do use this method, you’ll need to include the <code>xmlns</code> namespace attribute, as shown below:</p>
<pre><code class="svg language-svg">&lt;link href="style.css" type="text/css" rel="stylesheet"
    ➥ xmlns="http://www.w3.org/1999/xhtml" /&gt;
</code></pre>
<p><em>Note: some older browsers need the <code>&lt;link&gt;</code> element to be enclosed by <code>&lt;defs&gt;</code> or <code>&lt;g&gt;</code> tags.</em></p>
<p>The <code>&lt;link&gt;</code> element isn’t an SVG element. It belongs to HTML and XHTML. XHTML is a variant of HTML that’s parsed according to the rules of XML markup. According to the rules of XML, we can borrow elements and their behavior from other XML dialects, such as XHTML. To do so, however, we need to tell the browser which namespace the element belongs to using the <code>xmlns</code> attribute.</p>
<h4 id="usingimport">Using <code>@import</code></h4>
<p>We can also link to an external stylesheet by using <code>@import</code> inside <code>&lt;style&gt;</code> and <code>&lt;/style&gt;</code> tags:</p>
<pre><code class="markup language-markup">&lt;style type="text/css"&gt;
@import('style.css');
&lt;/style&gt;
</code></pre>
<p>This method functions similarly to the <code>&lt;link&gt;</code> method.</p>
<h4 id="svgandtheimgelementlimitations">SVG and the <code>&lt;img&gt;</code> Element: Limitations</h4>
<p>Linking from SVG files to external assets, including CSS files, doesn’t work with the <code>&lt;img&gt;</code> element. This is a security limitation of the <code>&lt;img&gt;</code> element that’s baked into browsers.</p>
<p>If you’d like to use linked CSS with your SVG images, you’ll need to do either of these two things:</p>
<ul>
<li>use the <code>&lt;style&gt;</code> element in your SVG document to place your CSS inline</li>
<li>use an <code>&lt;iframe&gt;</code> or <code>&lt;object&gt;</code> element (see note below)</li>
</ul>
<p><em>Note: Craig Buckler’s tutorial “<a href="https://www.sitepoint.com/add-svg-to-web-page/">How to Add Scalable Vector Graphics to Your Web Page</a>” discusses using <code>&lt;iframe&gt;</code> and <code>&lt;object&gt;</code> in detail.</em></p>
<p>In general, you should use <code>&lt;iframe&gt;</code> over <code>&lt;object&gt;</code>. However, the <code>&lt;object&gt;</code> element can be the child of an <code>&lt;a&gt;</code> element, while <code>&lt;iframe&gt;</code> can’t. Using <code>&lt;iframe&gt;</code> or <code>&lt;object&gt;</code> also makes the SVG document tree available to the parent document’s document tree. This means that we can use JavaScript to interact with it (for example, with <code>document.querySelector('iframe').contentDocument</code>). </p>
<h4 id="inlinesvgandexternalassets">Inline SVG and External Assets</h4>
<p>When adding SVG to HTML, the browser won’t load external assets referenced by the SVG document. We can, however, link to CSS for our SVG document from the <code>&lt;head&gt;</code> of our HTML document:</p>
<pre><code class="markup language-markup">&lt;head&gt;
    ⋮
    &lt;link href="svg.css" type="text/css" rel="stylesheet" /&gt;
&lt;/head&gt;
</code></pre>
<p>SVG elements within HTML documents also become part of the HTML document tree. If you’re using inline SVG,  it’s perfectly fine to combine your HTML-related and SVG-related CSS in the same stylesheet.</p>
<h2 id="differencesbetweensvgandhtml">Differences between SVG and HTML</h2>
<p>While SVG and HTML are both markup languages, there are two significant differences between them that affect how they work with CSS:</p>
<ul>
<li>SVG doesn’t adhere to the CSS box model</li>
<li>SVG lacks a positioning scheme</li>
</ul>
<h3 id="svgdoesntadheretothecssboxmodel">SVG Doesn’t Adhere to the CSS Box Model</h3>
<p>When used with HTML, CSS layout follows the rules of the CSS box model. SVG, on the other hand, uses coordinates for layout. It adheres to what may be best understood as a “shape model”.</p>
<p>SVG shapes aren’t limited to rectangular boxes. As a result, most box-model–related properties don’t apply to SVG elements. You can’t, for instance, change the <code>padding</code> or <code>margin</code> of an SVG element. Nor can you use the <code>box-sizing</code>, <code>box-shadow</code>, <code>outline</code>, or <code>border-*</code> properties. Grid layout, floats, and Flexbox also don’t work.</p>
<p>You can, however, use CSS to set or change a range of SVG properties and attribute values. The full list is outlined in the <a href="https://www.w3.org/TR/SVG2/propidx.html">SVG 2</a> specification, although support in most browsers is incomplete. Some CSS properties, such as <code>filter</code>, can be used with SVG or HTML. We’ll discuss a few of them in this chapter, within the context of specific techniques.</p>
<h3 id="svglacksapositioningscheme">SVG Lacks a Positioning Scheme</h3>
<p>When CSS is used with HTML, element boxes can:</p>
<ul>
<li>exist within a normal flow</li>
<li>be removed from normal flow with the <code>float</code> property</li>
<li>be removed from normal flow with the <code>position</code> property</li>
</ul>
<p>The CSS specification refers to these as <em>positioning schemes</em>. Positioning schemes don’t exist in SVG. The <code>position</code> property has no effect on SVG elements. Neither do properties such as <code>top</code>, <code>left</code> and <code>bottom</code>, which depend on elements being positioned. You also can’t float elements within an SVG document.</p>
<p>Instead, SVG uses a coordinate system for element placement. To create a <code>&lt;circle&gt;</code>, for example, you need to set its center point coordinates using the <code>cx</code> and <code>cy</code> attributes, and set a radius length using the <code>r</code> attribute. A polygon consists of a series of point coordinates and line segments drawn between them. In other words, you can define where an element will be drawn to the SVG canvas, but you can’t “position” them in the CSS sense of the word.</p>
<p>Related to positioning schemes, SVG also lacks the idea of <code>z-index</code> and stacking contexts.</p>
<p><em>Note: the <a href="https://svgwg.org/svg2-draft/">SVG 2</a> specification does define behavior for <code>z-index</code> and stacking contexts in SVG documents, but most browsers don’t yet support it.</em></p>
<p>SVG elements are instead stacked according to their source order. Those that appear later in the document sit towards the top of the stack. If you want to change the stacking order of SVG elements, you’ll need to move them around in the source or use JavaScript to reorder them in the DOM tree.</p>
<p>In fact, most CSS 2.1 properties don’t apply to SVG documents. Exceptions include animations and transforms, <code>display</code>, <code>overflow</code>, <code>visibility</code>, <code>filter</code>, and a few font and text-related properties. Instead, you’ll have to use <a href="https://www.w3.org/TR/SVG/propidx.html">SVG-specific styling properties with SVG documents</a>. Most of these properties can also be expressed as SVG element attributes.</p>
<h2 id="stylingsvgelements">Styling SVG Elements</h2>
<p>Here’s a simple example of how to style SVG elements using CSS. First our SVG document, which is a stand-alone file:</p>
<pre><code class="svg language-svg">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;?xml-stylesheet href="styles.css" type="text/css" ?&gt;
&lt;svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink=
➥"http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 497
➥ 184" enable-background="new 0 0 497 184" xml:space="preserve"&gt;
    &lt;polygon id="star" points="77,23.7 98.2,66.6 145.5,66.5 111.2,
➥106.9,119.3,154 77,131.8 34.7,154 42.8,106.9 8.5,67.5 55.8,
➥66.6 "/&gt;
    &lt;circle id="circle" cx="245" cy="88.9" r="67.5"/&gt;
&lt;/svg&gt;
</code></pre>
<p>This markup creates the image shown below.</p>
<p><img loading="lazy" src="https://editor.sitepoint.com/wp-content/uploads/2018/09/1630295220SVGCircleStar.jpg" alt="A simple circle and star SVG image" width="1000" height="478" class="alignnone size-full wp-image-203146" srcset="https://uploads.sitepoint.com/wp-content/uploads/2018/09/1630295220SVGCircleStar.jpg 1000w, https://uploads.sitepoint.com/wp-content/uploads/2018/09/1630295220SVGCircleStar-300x143.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2018/09/1630295220SVGCircleStar-768x367.jpg 768w" sizes="(max-width: 1000px) 100vw, 1000px" /></p>
<p>Although we can’t use most CSS properties with SVG documents, we can use CSS to change an element’s color. Let’s make our star yellow:</p>
<pre><code class="css language-css">#star {
    fill: hsl( 44, 100%, 50% );
}
</code></pre>
<p>You’ll often see the <code>fill</code> attribute used with SVG tags — for example, <code>&lt;circle fill="rgb( 255, 185, 0 )" cx="3" cy="10" r="100"&gt;</code> — but it’s also a property that can be used with CSS.</p>
<p>We can also use CSS to adjust an element’s <code>stroke</code>, which is the outline of an SVG shape. A shape’s stroke exists, even if no <code>stroke</code> properties are set. Let’s give our circle a dark blue, dashed border that’s ten pixels wide. We’ll also set its <code>fill</code> property to <code>cornflowerblue</code>:</p>
<pre><code class="css language-css">circle {
    fill: cornflowerblue;
    stroke: darkblue;
    stroke-width: 10;
    stroke-dasharray: 10, 15;
    stroke-linecap: round;
}
</code></pre>
<p>Together this gives us the result below.</p>
<p><img loading="lazy" src="https://editor.sitepoint.com/wp-content/uploads/2018/09/1630295270SVGCircleStar2.jpg" alt="A simple circle and star SVG image" width="1000" height="507" class="alignnone size-full wp-image-203148" srcset="https://uploads.sitepoint.com/wp-content/uploads/2018/09/1630295270SVGCircleStar2.jpg 1000w, https://uploads.sitepoint.com/wp-content/uploads/2018/09/1630295270SVGCircleStar2-300x152.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2018/09/1630295270SVGCircleStar2-768x389.jpg 768w" sizes="(max-width: 1000px) 100vw, 1000px" /></p>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/using-svg-with-media-queries/?utm_source=rss">Using SVG with Media Queries</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/using-svg-with-media-queries/?utm_source=rss</link><guid isPermaLink="false">https://www.sitepoint.com/?p=168375</guid><category><![CDATA[CSS]]></category><category><![CDATA[CSS3]]></category><category><![CDATA[HTML & CSS]]></category><dc:creator><![CDATA[Tiffany Brown]]></dc:creator><pubDate>Mon, 30 Aug 2021 15:00:02 GMT</pubDate><metaDesc>By using SVGs with media queries, we can change their appearance based on user interaction or viewport size, and use them in multiple places.</metaDesc></item><item><title><![CDATA[Notion Guide: All-in-One Workspace & Notes App]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/notion-beginners-guide/?utm_source=rss"
              title="Notion Guide: All-in-One Workspace & Notes App"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2021/08/1630217043notion-beginner-guide.jpg"
        alt="A Beginner's Guide to Notion"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/08/1630217043notion-beginner-guide-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/1630217043notion-beginner-guide-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/1630217043notion-beginner-guide-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/1630217043notion-beginner-guide.jpg 1200w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong>So you&#8217;re ready to dig into <a style="font-weight:bold" href="https://www.notion.so/">Notion</a>, but you don&#8217;t know where to start? You&#8217;ve heard great things about how customizable and intuitive it is, but staring at a blank page leaves you feeling overwhelmed? Don&#8217;t worry, as this guide will get you quickly up to speed and ready to dig deeper. Be prepared, though: once you&#8217;re hooked, you&#8217;ll find plenty of rabbit holes to dive into!</strong></p>
<h2 id="getthemacwindowsandmobileappsforyourdevices">Get the Mac, Windows and Mobile Apps for Your Devices</h2>
<p>If you don&#8217;t yet have Notion on your desktop, you&#8217;ll want to download it (for <a href="https://www.notion.so/desktop">Mac or PC</a>). The browser version works just fine, and can be handy if you want to have multiple pages open at once, but putting the app on your desktop helps it earn its rightful place in your digital ecosystem. </p>
<p>You&#8217;ll also want to download the app on your <a href="https://www.notion.so/mobile">iPhone or Android device</a>. and iPad if you&#8217;re using one. The app lends itself more to desktop use, but you&#8217;ll want the tool handy on all your devices if you&#8217;re going to use it to its full potential. The iOS and Android apps are definitely handy for on the go. The iPad app does give you access to your pages but leaves something to be desired. The Notion team has acknowledged as much, and is promising that mobile improvements are on the roadmap.</p>
<p>After you&#8217;ve created an account (a breeze with SSI from Google) you&#8217;ll want to download the web clipper in order to pull web pages directly into Notion. Notion&#8217;s own <a href="https://www.notion.so/web-clipper">Web Clipper</a> is handy, but an even better option is the <a href="https://chrome.google.com/webstore/detail/save-to-notion/ldmmifpegigmeammaeckplhnjbbpccmm">Save to Notion</a> extension, which allows you to add metadata to the entry right at capture! More on that later.</p>
<p><img loading="lazy" src="https://editor.sitepoint.com/wp-content/uploads/2021/08/1630049975mobile-apps.png" alt="Notion mobile app download page" width="1594" height="1138" class="alignnone size-full wp-image-203030" srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/08/1630049975mobile-apps.png 1594w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/1630049975mobile-apps-300x214.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/1630049975mobile-apps-1024x731.png 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/1630049975mobile-apps-768x548.png 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/1630049975mobile-apps-1536x1097.png 1536w" sizes="(max-width: 1594px) 100vw, 1594px" /></p>
<h2 id="learnthenotionlingo">Learn the Notion Lingo</h2>
<p>To get started with building, you&#8217;ll want to understand the basic elements you have at your disposal. </p>
<h3 id="thebasicsblocks">The basics: Blocks</h3>
<p>The atomic unit of Notion is <a href="https://www.youtube.com/watch?time_continue=2&#038;v=BZnR2Ml17sc&#038;feature=emb_logo">the block</a>. Just like legos, you piece blocks together to create whatever you can imagine.</p>
<p>Each block type can be moved, duplicated and formatted. Even more exciting is that every individual block has a unique link, making it easy to cross reference blocks across your system. </p>
<p>Basic blocks include the standard elements of word processors such as text, headers, bulleted and numbered lists. There are also &#8220;to-do lists&#8221; (checkboxes), quotes and call-outs to draw attention to important text, dividers, nested pages and links to existing pages. </p>
<p>We&#8217;ll stick to basic block types in this article (this is a 101 guide, after all) but other block categories include inline mentions, media and embeds, databases and advanced blocks like breadcrumbs.</p>
<p><img loading="lazy" src="https://editor.sitepoint.com/wp-content/uploads/2021/08/1630050220basic-blocks.png" alt="Basic block types, such as text, page, to-do list and headings" width="638" height="478" class="alignnone size-full wp-image-203032" srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/08/1630050220basic-blocks.png 638w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/1630050220basic-blocks-300x225.png 300w" sizes="(max-width: 638px) 100vw, 638px" /></p>
<h3 id="putittogetherwithpages">Put it together with Pages</h3>
<p>Think of pages as Google Docs — except you can build them out of all sorts of blocks, customizing the layout, formatting and contents with ease. </p>
<p><img loading="lazy" src="https://editor.sitepoint.com/wp-content/uploads/2021/08/1630050317new-page.png" alt="A new page" width="1434" height="738" class="alignnone size-full wp-image-203034" srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/08/1630050317new-page.png 1434w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/1630050317new-page-300x154.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/1630050317new-page-1024x527.png 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/1630050317new-page-768x395.png 768w" sizes="(max-width: 1434px) 100vw, 1434px" /></p>
<h3 id="organizeitwithtables">Organize it with Tables</h3>
<p>Tables are your replacement for Excel or Google Sheets — unless you&#8217;re using pivot tables or performing complicated data analysis. <a href="https://www.notion.so/guides/table-view-databases">Add meta data</a> with the usual properties including text, numbers, and formulas. Step it up with other useful properties such as checkboxes, multi and single select, and &#8220;person&#8221; (for other users in your workspace). </p>
<p><img loading="lazy" src="https://editor.sitepoint.com/wp-content/uploads/2021/08/1630050414task-table.png" alt="A task table" width="1786" height="292" class="alignnone size-full wp-image-203036" srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/08/1630050414task-table.png 1786w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/1630050414task-table-300x49.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/1630050414task-table-1024x167.png 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/1630050414task-table-768x126.png 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/1630050414task-table-1536x251.png 1536w" sizes="(max-width: 1786px) 100vw, 1786px" /></p>
<h2 id="howtogetaroundintheapp">How to Get Around in the App</h2>
<p>Okay, so you have the app and you understand the Lego pieces you have at hand to build. Now, how do you get around and stay informed? Here&#8217;s everything you need to know to get started with the Notion UI.</p>
<h3 id="search">Search</h3>
<p>You&#8217;ll want to organize your Notion pages so you know where to find things, but when you need to grab something quickly, use the <strong><a href="https://www.notion.so/guides/searching-with-quick-find">Quick Find</a></strong> link in the sidebar. Even faster is the keyboard shortcut <kbd>Control</kbd>/<kbd>CMD</kbd> + <kbd>P</kbd></p>
<p><img loading="lazy" src="https://editor.sitepoint.com/wp-content/uploads/2021/08/1630050603quick-search.png" alt="The quick search interface" width="1630" height="582" class="alignnone size-full wp-image-203038" srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/08/1630050603quick-search.png 1630w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/1630050603quick-search-300x107.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/1630050603quick-search-1024x366.png 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/1630050603quick-search-768x274.png 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/1630050603quick-search-1536x548.png 1536w" sizes="(max-width: 1630px) 100vw, 1630px" /></p>
<h3 id="updates">Updates</h3>
<p>You can see your page updates in the sidebar. There&#8217;s <strong>Inbox</strong> for new mentions and comments, <strong>Following</strong> for changes made to pages you chose to follow, <strong>All</strong> for <em>every</em> change in your Notion account and <strong>Archive</strong>. Click on the gear in the upper right corner to change your notification settings.</p>
<p><img loading="lazy" src="https://editor.sitepoint.com/wp-content/uploads/2021/08/1630050738updates.png" alt="Viewing updates in Notion" width="1448" height="500" class="alignnone size-full wp-image-203040" srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/08/1630050738updates.png 1448w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/1630050738updates-300x104.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/1630050738updates-1024x354.png 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/1630050738updates-768x265.png 768w" sizes="(max-width: 1448px) 100vw, 1448px" /></p>
<h3 id="settingsandmembers">Settings and Members</h3>
<p>This is where you can modify your plan, billing information, notifications and more. If you have a Team Plan, this is where you can <a href="https://www.notion.so/guides/adding-members-admins-and-guests">administer your team</a> — adding or removing members, changing permissions, and so on.</p>
<h2 id="sidebarsections">Sidebar Sections</h2>
<p>Your Sidebar is the map of your Notion universe. </p>
<p>Let&#8217;s take it from the top.</p>
<p><img loading="lazy" src="https://editor.sitepoint.com/wp-content/uploads/2021/08/1630050890sidebar.png" alt="The Notion sidebar" width="468" height="1206" class="alignnone size-full wp-image-203042" srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/08/1630050890sidebar.png 468w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/1630050890sidebar-116x300.png 116w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/1630050890sidebar-397x1024.png 397w" sizes="(max-width: 468px) 100vw, 468px" /></p>
<h3 id="favorites">Favorites</h3>
<p>Your favorites are manually selected. On any page, you&#8217;ll see <strong>Favorite</strong> in the top right corner. Click and the page is added to this section of your sidebar. You can click again to remove. From the Favorites section you can also click the three dots to reveal the option to <strong>Remove From Favorites</strong>.</p>
<h3 id="workspace">Workspace</h3>
<p>The Workspace section only appears if you have a Team Plan. Pages shown here are accessible by everyone on your team, though you can modify the permissions depending on what you want folks to be able to do with each page. See &#8220;Sharing&#8221; below for more.</p>
<h3 id="shared">Shared</h3>
<p>Pages move to this section once they&#8217;ve been shared with individuals, groups or integrations. </p>
<h3 id="private">Private</h3>
<p>As the name implies, these pages are private to you. When you click <strong>+ New Page</strong>, your page will be created here and will be private until you manually share it with others.</p>
<h2 id="havingfunwithfeatures">Having Fun with Features</h2>
<p>Now here&#8217;s where things get fun!</p>
<h3 id="mixandmatch">Mix and Match</h3>
<p>As mentioned above, the atomic unit of Notion is the &#8220;block&#8221;. Yes, there are standard text and bulleted lists, but you can also organize things within toggles, create a quick to-do list with check boxes or even embed video, images and web bookmarks.</p>
<p>The real beauty of blocks is the ability to combine them however you choose! This means you can create dashboards and <a href="https://radreads.co/notion-wiki/">personal wikis</a> with ease. Since Notion was built for building, embeds are easy to create and move (none of the lag you&#8217;ll find in a Google or Word doc). It&#8217;s also super easy to drag and drop any block, change a block from one type to another, or duplicate it. </p>
<p>Don&#8217;t stop there. Create columns to organize blocks (drag until you see the blue line move next to the existing block). Use colors, emojis and images to customize your page. Use quotes and callouts to draw attention to specific text (great for sharing instructions on how to navigate a page!). Once you get the hang of things, you can create dashboards for planning your work and life!</p>
<p><img loading="lazy" src="https://editor.sitepoint.com/wp-content/uploads/2021/08/1630127816making-columns.jpeg" alt="Making columns" width="1000" height="344" class="alignnone size-full wp-image-203052" srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/08/1630127816making-columns.jpeg 1000w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/1630127816making-columns-300x103.jpeg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/1630127816making-columns-768x264.jpeg 768w" sizes="(max-width: 1000px) 100vw, 1000px" /></p>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/notion-beginners-guide/?utm_source=rss">Notion Guide: All-in-One Workspace & Notes App</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/notion-beginners-guide/?utm_source=rss</link><guid isPermaLink="false">/?p=203026</guid><category><![CDATA[Computing]]></category><category><![CDATA[Low Code]]></category><category><![CDATA[Web]]></category><dc:creator><![CDATA[Kate Andlund]]></dc:creator><pubDate>Sun, 29 Aug 2021 16:00:24 GMT</pubDate><metaDesc>Maybe you've heard of Notion and are wondering how to get started with it? Learn how Notion works and how to use it for simple projects.</metaDesc></item><item><title><![CDATA[10 Free Browser Extensions for a More Efficient SEO Workflow]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/free-seo-browser-extensions/?utm_source=rss"
              title="10 Free Browser Extensions for a More Efficient SEO Workflow"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2021/08/1629860625seo-browser-extensions.jpg"
        alt="10 Free Browser Extensions for a More Efficient SEO Workflow"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/08/1629860625seo-browser-extensions-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/1629860625seo-browser-extensions.jpg 600w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong>SEO is an essential piece of the puzzle that makes up every website. But like many pieces, it can be difficult to keep track of and manage. Luckily, there are some tools that can make this process a breeze.</strong></p>
<p>Let’s take a look at ten free extensions that will make life easier for those who want to build a more efficient SEO workflow right from the browser toolbar. </p>
<h2 id="1seoquake">1. SEOquake</h2>
<p><a href="https://chrome.google.com/webstore/detail/seoquake/akdgnmcogleenhbclghghlkkdndkjdjc?hl=en">SEOquake</a> is an extension created by Semrush that can be used to keep track of how a website is doing when it comes to SEO.</p>
<p>This extension allows you to quickly check things like domain authority (DA), monthly visits, pages/visit, average visit duration, bounce rate, Alexa rank, and even a website’s Whois record right from the search engine result pages (SERPs).</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/07/1627786344SEOquake.png" alt="SEOquake SERPs stats" /></p>
<p>You can also click the SEOquake icon on your browser toolbar to access other features like page SEO audit, keyword density, internal and external links, and URLs/domains comparison.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/07/1627786341SEOquake-Page-SEO-Audit.jpg" alt="Page SEO Audit by SEOquake" /></p>
<ul>
<li><strong>Page SEO Audit</strong>. Allows you to check URL characters, title tags, meta descriptions and keywords, mobile accessibility, XML sitemaps, <code>robots.txt</code>, and more.</li>
<li><strong>Keyword density</strong>. Displays all the keywords mentioned in a specific blog post.</li>
<li><strong>Internal and external links</strong>. Checks each link on a given page and shows the anchor text and parameters associated with it.</li>
<li><strong>Compare URLs/domains</strong>. Allows you to compare your URL with your competitors&#8217; URLs.</li>
</ul>
<h2 id="2linkcheckerbylrt">2. Link Checker by LRT</h2>
<p>The <a href="https://chrome.google.com/webstore/detail/free-backlink-checker-by/nifeadedgedikheglfngocdgfidiiimi">Link Checker</a> by LRT is a powerful SEO extension you can use to check and analyze all the links on a web page. However, despite its name, this tool doesn’t actually check inbound links, but only outbound ones.</p>
<p>Link Checker will highlight good links in green, unverified links in yellow, and broken links in red. You can also see the number of follow, nofollow, verified, and unverified links from the same root domain, internal, and external.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/07/1627786496Backlink-Checker-by-LRT.jpg" alt="Link Checker by LRT" /></p>
<p>Another cool feature is that it allows you to see the source code by hovering over a link instead of right-clicking and opening the Inspect Element tool.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/07/1627786319Checking-Source-Code-on-Hover-Browser-Extension.png" alt="Source code window" /></p>
<p>This SEO extension can be extremely useful for those using <a href="https://www.sitepoint.com/guest-blogging/">guest posting</a> or Help a Reporter Out (HARO) as part of their <a href="https://www.sitepoint.com/ultimate-guide-link-building-content/">link-building</a> strategy. When sending HARO pitches and publishing guest posts, you can quickly check whether or not they included your link and if they followed or nofollowed it.</p>
<h2 id="3hunter">3. Hunter</h2>
<p><a href="https://hunter.io/chrome">Hunter</a> is another great extension for those doing guest posting or active link-building outreach for SEO. </p>
<p>This extension will <a href="https://www.sitepoint.com/web-scraping-for-beginners/">scrape the website</a> you’re browsing and find all the email addresses associated with it. For some contacts, you also get to see their position in the company. The free account of Hunter allows up to 50 free searches per month.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/07/1627786323Hunter-IO-Browser-Extension-SC-min.png" alt="Email list gathered by Hunter extension" /></p>
<p>If you’re looking for someone specific, you can find them by adding their first and last name to the search bar (it has to be both for it to work).</p>
<p>This is a great way to send pitches to websites that might accept guest posts but don’t have a dedicated “write for us” page. </p>
<p>Instead of pitching to a generic support email address, you can search and pitch to the editor, content manager, or even the CEO if it’s a smaller company.</p>
<p>If Hunter doesn’t find any names or shows their position, you can search for the company on LinkedIn and look under the “People” tab to find a list of their employees. Then, simply go back to Hunter and input their name to find their email address.</p>
<p>Needless to say, when pitching to publications that don’t publicly advertise a “write for us” page or might have never accepted guest posts before, it’s even more important to make your pitch quick, persuasive, and polite.</p>
<p>If you aren’t the best at writing compelling copy, you can use an <a href="https://blogstalgia.com/ai-writing-software/">AI copywriting tool</a> to do it for you.</p>
<p>Below is pictured a guest post pitch generated by Jarvis AI.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/07/1627786321Guest-Post-Pitch-Generated-by-Jarvis-AI.jpg" alt="Guest post pitch generated by Jarvis AI" /></p>
<p>The last thing you want is to annoy them and have your email labeled as spam. </p>
<h2 id="4pagespeedinsights">4. PageSpeed Insights</h2>
<p>We live in an era of instant gratification, so it’s no surprise that most people won’t wait around for a website that takes <a href="https://www.blog.google/products/admanager/increase-speed-of-your-mobile-site-wi/">more than three seconds</a> to load.</p>
<p>Website speed has become a ranking factor for major search engines as of late, as evidenced by Google’s recent <a href="https://developers.google.com/search/blog/2020/05/evaluating-page-experience">page experience update</a> that takes into account a set of metrics related to speed, responsiveness, and visual stability called Core Web Vitals.</p>
<p>If you’re working on <a href="https://www.sitepoint.com/speed-wordpress/">speed optimization</a>, it can be time-consuming to copy and paste your site to test its speed after every little tweak. With a free browser extension like <a href="https://chrome.google.com/webstore/detail/pagespeed-insights-with-p/lanlbpjbalfkflkhegagflkgcfklnbnh?hl=en">PageSpeed Insights</a> (PSI), you can just click the icon and have it redirect you to the PSI website and automatically run the test, or use PSI inside Chrome&#8217;s DevTools.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/07/1627786335PageSpeed-Insights-Browser-Extension.jpg" alt="PageSpeed Insights" /></p>
<h2 id="5seosearchsimulator">5. SEO Search Simulator</h2>
<p><a href="https://chrome.google.com/webstore/detail/seo-search-simulator-by-n/edfjfgjklednkencfhnokmkajbgfhpon?hl=en">SEO Search Simulator</a> by Nightwatch simulates Google searches from anywhere in the world and allows you to track a website’s ranking position in SERPs.</p>
<p>Below is an example of the keyword “best markdown editor for iOS” in Canada. Once we add the URL of the website we want to find, in this case, “sitepoint.com,” it&#8217;ll show its position for this particular keyword inside the green square.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/07/1627786338SEO-Search-Simulator-Browser-Extension-Example.png" alt="Search Simulator" /></p>
<p>You can then click the square to jump to the listing. This browser extension can also be used to see how well your competitors are ranking for a particular keyword.</p>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/free-seo-browser-extensions/?utm_source=rss">10 Free Browser Extensions for a More Efficient SEO Workflow</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/free-seo-browser-extensions/?utm_source=rss</link><guid isPermaLink="false">/?p=202323</guid><category><![CDATA[Entrepreneur]]></category><category><![CDATA[Marketing]]></category><category><![CDATA[SEO & SEM]]></category><dc:creator><![CDATA[Christian Coulson]]></dc:creator><pubDate>Wed, 25 Aug 2021 16:00:00 GMT</pubDate><metaDesc>SEO is really important, but where do you start? These ten free SEO browser extensions are the perfect way to kickstart your SEO journey.</metaDesc></item><item><title><![CDATA[Flexbox or CSS Grid? How to Make Layout Decisions that Make Sense]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/flexbox-or-grid-how-to-choose/?utm_source=rss"
              title="Flexbox or CSS Grid? How to Make Layout Decisions that Make Sense"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2021/08/1629855005flexbox-vs-grid.png"
        alt="Flexbox or Grid? Key Strategies for Choosing the Best Option"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/08/1629855005flexbox-vs-grid-300x170.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/1629855005flexbox-vs-grid.png 600w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong>Following the widespread implementation of CSS Grid Layout, one question became prominent in front-end web development circles: Is there still any use for Flexbox?</strong>  </p>
<p>Grid is now supported by all major browsers as much as Flexbox is. But the answer to the question is that yes, Flexbox is still an important part of CSS. </p>
<p>In this article, I&#8217;m going to suggest a few ways to help you decide when to use Flexbox and when to use Grid as you tackle your web development projects.</p>
<h2 id="whatisflexbox">What Is Flexbox?</h2>
<p>CSS Flexible Box Layout, or Flexbox for short, started to appear in browsers around 2012. Having binged on floats and third-party layout libraries for years, web designers and developers welcomed this new CSS module with enthusiasm, although it took a little while to get used to its alien syntax and acquire full command of its inner workings. </p>
<p>A flex container can be defined in a CSS document like so: <code>.container {  display: flex; }</code>. Then, as the <a href="https://www.w3.org/TR/css-flexbox-1/">W3C Specification</a> says, its children —</p>
<blockquote>
<p>can be laid out in any direction, and can “flex” their sizes, either growing to fill unused space or shrinking to avoid overflowing the parent. Both horizontal and vertical alignment of the children can be easily manipulated. Nesting of these boxes (horizontal inside vertical, or vertical inside horizontal) can be used to build layouts in two dimensions.</p>
</blockquote>
<p>Since the introduction of Flexbox, things like creating equal-length columns irrespective of their amount of content, centering elements both horizontally and vertically, lining up and spacing navigation links along a horizontal line and more, has become much easier. </p>
<p>Wrapping columns inside a flex container is enough to achieve equal-length columns. Check it out!</p>
<p><!-- https://codepen.io/antonietta/pen/QWvOMXB   --></p>
<p class="codepen" data-height="600" data-default-tab="result" data-slug-hash="WNONXvN" data-user="SitePoint" style="height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;">
<span>See the Pen <a href="https://codepen.io/SitePoint/pen/WNONXvN"><br />
Flexbox-Equal-Columns</a> by SitePoint (<a href="https://codepen.io/SitePoint">@SitePoint</a>)<br />
on <a href="https://codepen.io">CodePen</a>.</span>
</p>
<p><script async src="https://cpwebassets.codepen.io/assets/embed/ei.js"></script></p>
<p>As for centering content both horizontally and vertically, it&#8217;s a matter of adding the following lines of code to a flex container: </p>
<pre><code class="css language-css">.hero {
  display: flex;
  flex-direction: column;
  /* centers vertically */
  justify-content: center;
  /* centers horizontally */
  align-items: center;
}
</code></pre>
<p>Here&#8217;s a demo: </p>
<p><!-- https://codepen.io/antonietta/pen/gOWXEGy --></p>
<p class="codepen" data-height="450" data-default-tab="result" data-slug-hash="oNwNoXq" data-user="SitePoint" style="height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;">
<span>See the Pen <a href="https://codepen.io/SitePoint/pen/oNwNoXq"><br />
centering-flexbox</a> by SitePoint (<a href="https://codepen.io/SitePoint">@SitePoint</a>)<br />
on <a href="https://codepen.io">CodePen</a>.</span>
</p>
<p><script async src="https://cpwebassets.codepen.io/assets/embed/ei.js"></script></p>
<p>Finally, lining up a bunch of links has never been so painless: </p>
<pre><code class="css language-css">.links-container {
  display: flex;
  /*  shortcut to specify direction (horizontal) and wrapping behavior */
  flex-flow: row wrap;
  gap: 1rem;
}
</code></pre>
<p>You can see a demo of this on <a href="https://codepen.io/SitePoint/pen/XWgWzmM">CodePen</a>.</p>
<p><!-- https://codepen.io/antonietta/pen/QWvOoRG --></p>
<p>To familiarize yourself with how Flexbox works, and as a quick reference to its properties and values, have a look at the links below: </p>
<ul>
<li><a href="https://www.sitepoint.com/flexbox-css-flexible-box-layout/">A Friendly Introduction to Flexbox for Beginners</a> on SitePoint</li>
<li><a href="https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Flexbox">Mozilla&#8217;s Flexbox introduction</a></li>
<li>The <a href="https://css-tricks.com/snippets/css/a-guide-to-flexbox/">Flexbox cheat sheet</a> by CSS-Tricks </li>
<li>The <a href="https://www.youtube.com/playlist?list=PLu8EoSxDXHP7xj_y6NIAhy0wuCd4uVdid">What the Flexbox?!</a> video series by Wes Bos</li>
</ul>
<p>So that&#8217;s Flexbox in a nutshell. Let&#8217;s now move on and look at Grid.</p>
<h2 id="whatiscssgrid">What Is CSS Grid?</h2>
<p>In March 2017, CSS Grid Layout started to receive widespread browser support. According to the <a href="https://www.w3.org/TR/css-grid-1/">Grid specification</a>, Grid layout is —</p>
<blockquote>
<p>a new layout model for CSS that has powerful abilities to control the sizing and positioning of boxes and their contents. </p>
</blockquote>
<p>With Grid, the power to build all kinds of robust layouts on the Web has grown immensely, so much so that Jen Simmons, CSS expert and renowned Grid advocate, has been encouraging web designers and developers to be adventurous in their layouts and break out of overly used common patterns. (See her YouTube video <em><a href="https://www.youtube.com/watch?v=jreccgYLfx8">Modern Layouts: Getting Out of Our Ruts</a></em>.)</p>
<p>Thanks to Grid, it&#8217;s easy to create a complex layout that doesn&#8217;t use much code at all, needs no floats or other hacks, and that causes zero headaches. </p>
<p>Here&#8217;s a <a href="https://codepen.io/SitePoint/full/yLXLPMa">CodePen demo</a>. (Note that Grid only kicks in on wider screen sizes.)</p>
<p><!-- https://codepen.io/antonietta/pen/RwVeRNd --></p>
<p>In that demo, to create the basic grid for the entire page at full size, I turned my container <code>div</code> into a <em>grid container</em> and then divided it up into columns and rows: </p>
<pre><code class="css language-css">.container {
  display: grid; 
  grid-template-columns: 1fr 1.2fr 1.5fr;
  grid-template-rows:  1fr 4fr 3fr 2fr;
}    
</code></pre>
<p>The <code>fr</code> unit is a new flexible unit of measurement introduced with CSS Grid Layout. The <code>fr</code> part is short for fractional, as it represents a fraction of the available space in the grid container. Using <code>fr</code> rather than a fixed unit like <code>px</code>, means letting the browser work out the math needed to create the layout, which I think is preferable in most cases.</p>
<p>Once the grid is ready, it&#8217;s time to go ahead and place the child elements inside it. There are a few <a href="https://www.sitepoint.com/seven-ways-you-can-place-elements-using-css-grid-layout/">different ways</a> to do this. In the demo above, I used grid line numbers and the grid-area property, which does the job in one line of code. For example, here&#8217;s the code to lay out my main content: </p>
<pre><code class="css language-css">.main {
  /* row start, row end, col start col end */
  grid-area: 1 / 1 / 3 / 3;
} 
</code></pre>
<p>Once all the sections are in place within the grid, here&#8217;s what it looks like: </p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/08/1628089813grid-layout-blocks.png" alt="Page layout using CSS Grid" /></p>
<p>For more details and handy cheat sheets, check out the links below: </p>
<ul>
<li>SitePoint&#8217;s “<a href="https://www.sitepoint.com/introducing-the-css-grid-layout/">Introducing the CSS Grid Layout</a>” and “<a href="https://www.sitepoint.com/creating-css-grid-layouts/">Creating Layouts with CSS Grid</a>” tutorials</li>
<li>Rachel Andrew&#8217;s <a href="https://gridbyexample.com/examples/">Grid by Example</a> </li>
<li>Jen Simmons&#8217; s <a href="https://labs.jensimmons.com/">Experimental Layout Lab</a>  </li>
<li>CSS-Tricks&#8217;s “<a href="https://css-tricks.com/snippets/css/complete-guide-grid/">A Complete Guide to Grid</a>”</li>
<li>the MDN <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout">CSS Grid Layout Guide</a></li>
<li>Wes Bos&#8217;s <a href="https://www.youtube.com/playlist?list=PLu8EoSxDXHP5CIFvt9-ze3IngcdAc2xKG">CSS Grid</a> course</li>
</ul>
<h2 id="gridorflexboxwhichoneshouldigofor">Grid or Flexbox:  Which One Should I Go For?</h2>
<p>Having had a taste of what both Grid and Flexbox are capable of, it&#8217;s time to go back to the original question. When is one preferable to the other?  </p>
<p>Here&#8217;s a Twitter thread Chris Coyier launched a couple of years ago basically asking this same question: </p>
<blockquote class="twitter-tweet">
<p lang="en" dir="ltr">For y&#39;all that have an understand of both CSS grid and flexbox, what&#39;s your favorite way of explaining the difference?</p>
<p>&mdash; Chris Coyier (@chriscoyier) <a href="https://twitter.com/chriscoyier/status/1088827201468813312?ref_src=twsrc%5Etfw">January 25, 2019</a></p></blockquote>
<p><script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script></p>
<blockquote>
<p>For y&#8217;all that have an understand of both CSS grid and flexbox, what&#8217;s your favorite way of explaining the difference?</p>
</blockquote>
<p><!-- https://twitter.com/chriscoyier/status/1088827201468813312 --></p>
<p>As you can expect, a number of interesting answers did crop up, most of which I&#8217;ve sorted out under the headings below.</p>
<h3 id="gridforpagelayoutandflexboxforcomponents">Grid for page layout and Flexbox for components</h3>
<p>“Grid for page layout and Flexbox for components” is perhaps the most intuitive answer one could give to this question. In fact, I wouldn&#8217;t have any doubts as to which technology I&#8217;d use when coding up a whole page layout. You <em>can</em> do page layouts with Flexbox — and indeed, that&#8217;s what most of us did before Grid entered the scene. But creating a grid with flexbox has never felt really “flexy” and has never come without a few headaches. Grid, on the other hand, was simply born for this. However, the question remains: was it born <em>just</em> for this?   </p>
<p>It turns out that Grid is also great when creating components to be placed inside the macro, page-level sections. For example, in the demo below, the form is a grid container and its elements have been laid out using CSS Grid properties.  </p>
<p class="codepen" data-height="400" data-default-tab="result" data-slug-hash="eYRYeyE" data-user="SitePoint" style="height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;">
<span>See the Pen <a href="https://codepen.io/SitePoint/pen/eYRYeyE"><br />
form-with-css-grid</a> by SitePoint (<a href="https://codepen.io/SitePoint">@SitePoint</a>)<br />
on <a href="https://codepen.io">CodePen</a>.</span>
</p>
<p><script async src="https://cpwebassets.codepen.io/assets/embed/ei.js"></script><br />
<!-- https://codepen.io/antonietta/pen/ExmEZYx --></p>
<p>Despite the fact that the <strong>Email</strong> and the <strong>Password</strong> labels are of different lengths, the form fields line up perfectly, both horizontally and vertically. And this is the magic of Grid: it lays out web element both horizontally and vertically, by default, be it page-level elements or component-level elements. This specificity that Grid possesses is a powerful factor in deciding when to use Flexbox or Grid.</p>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/flexbox-or-grid-how-to-choose/?utm_source=rss">Flexbox or CSS Grid? How to Make Layout Decisions that Make Sense</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/flexbox-or-grid-how-to-choose/?utm_source=rss</link><guid isPermaLink="false">/?p=202299</guid><category><![CDATA[HTML & CSS]]></category><dc:creator><![CDATA[Maria Antonietta Perna]]></dc:creator><pubDate>Tue, 24 Aug 2021 16:00:39 GMT</pubDate><metaDesc>Flexbox came first. Then came Grid. Is Flexbox needed any more? Yes it is! Learn what each does best and when to choose one over the other.</metaDesc></item><item><title><![CDATA[5 Streaming Platforms That Let You Control Your Own Content]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/streaming-platforms-control-content/?utm_source=rss"
              title="5 Streaming Platforms That Let You Control Your Own Content"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2021/08/1629853802livestreaming.jpg"
        alt="5 Streaming Platforms That Let You Control Your Own Content"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/08/1629853802livestreaming-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/1629853802livestreaming.jpg 600w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong>The easiest way to livestream to millions of users is to use social media platforms like Facebook, Instagram, YouTube or Twitch. These platforms are great for brand awareness, but give you limited options when it comes to content ownership, audience access and monetization.</strong></p>
<p>The best way to livestream is to build your own platform where you can invite viewers to watch. This strategy will protect you from censorship, gain you access to better analytics, and more options on how you can monetize your streams. You just need to be prepared to make time and financial investment in order to reap the benefits of having full control over your content.</p>
<p>In this article, we&#8217;ll look at livestream platforms, their terminology and protocols. Then we&#8217;ll examine five livestream providers that enable content creators to maintain ownership of both their content and audience.</p>
<h2 id="differentkindsoflivestreamplatforms">Different Kinds of Livestream Platforms</h2>
<p>To get started, at the very least you&#8217;ll need a livestream media server and your own website. There are three types of livestream platforms you can consider working with:</p>
<ul>
<li><strong>self-hosted</strong></li>
<li><strong>cloud</strong></li>
<li><strong>API-driven</strong></li>
</ul>
<p>With the <strong>self-hosted</strong> option, you&#8217;ll find a number of open-source and enterprise livestream media servers you can download and install yourself. You can host the software on a local server, or on a compute platform such as AWS, Azure, Digital Ocean, Linode. You&#8217;ll also need to set up storage space for your livestream recordings and your on-demand video content. For enterprise servers, you&#8217;ll need to purchase a license.</p>
<p>The <strong>cloud</strong> option is where the platform provider has already installed the software on their multi-tenancy infrastructure. All you have to do is simply create an account and you&#8217;re good to go. Scaling and technical issues are handled by the provider. You&#8217;ll be billed a flat rate per month for the license to use the software, plus infrastructure costs that you&#8217;ll incur while running livestream sessions.</p>
<p>The <strong>API-driven</strong> option is similar to the <strong>cloud</strong> option, except that you only pay for the usage. This is a far more cost-effective pricing strategy, since you only pay when a livestream is running or when you&#8217;ve stored video content on their platform. These platforms also have far better documentation that&#8217;s suited to developers.</p>
<p>While it appears that the most affordable solution is the way go, you may need choose the other options due to requirements such as:</p>
<ul>
<li>extra low latency</li>
<li>24&#215;7 streaming</li>
<li>local network only streaming</li>
<li>access to technical expertise i.e. a web developer</li>
<li>limited time to market</li>
</ul>
<p>Features offered by platforms vary, and you may find a commercial provider has already implemented most of the back-end logic you need for your app. You should also note that, when it comes to pricing, long-term contracts are often priced lower per month than short-term contracts.</p>
<h2 id="terminology">Terminology</h2>
<p>Next, let&#8217;s get familiar with the main terminologies:</p>
<ul>
<li>
<p>A <strong>livestream</strong> is technology that segments video streams or files into small chunks, which allows viewers to watch without downloading the entire file. The term <em>live video</em> is referred when the recording is happening in real time.</p>
</li>
<li>
<p><strong>Video-on-demand</strong>, or <em>VOD</em>, is simply a service for streaming a pre-recorded show, film or event. When setting up a livestream session, you need to enable the record feature such that viewers coming later to your livestream can still watch the entire show from the start.</p>
</li>
<li>
<p>An <strong>encoder</strong> is either a hardware device or some software that takes a high-quality, uncompressed video source from a camera and encodes the video stream into a compressed format that&#8217;s optimized for transmission over limited internet bandwidth. Hardware encoders are more expensive but tend to be more reliable. Software encoders are more affordable, but they don&#8217;t run in dedicated environments, which makes them prone to interruptions from other applications.</p>
</li>
<li>
<p>A <strong>livestream media server</strong> is software that accepts transmission data from an encoder and then re-transmits into multiple streams at different quality to be delivered to audiences.</p>
</li>
<li>
<p><strong>Transcoding</strong> is the process of converting a compressed video stream into an even better compressed format that can stream with minimum buffering at the highest possible quality. This is done by the livestream media server.</p>
</li>
<li>
<p>An <strong>edge server</strong> is simply a relay for streams originating from the livestream media server. Edge servers are often located near the streamer&#8217;s location and are used to offload the burden on the livestream server. They also help in reducing latency.</p>
</li>
<li>
<p>A <strong>livestream video player</strong> is a JavaScript application than enables browsers and mobile apps to decode video streams coming from a livestream media server. They often have playback controls and can come with additional features such as ad integration.</p>
</li>
<li>
<p><strong>Latency</strong> is the delay often measured between the time a camera captures a frame till the time a streamer sees the frame on their device. With standard protocols, latency can vary between 10 to 40 seconds. Low latency protocols can achieve delays of less than three seconds.</p>
</li>
</ul>
<h2 id="livestreamprotocols">Livestream Protocols</h2>
<p>Streaming an event from your location to your audience is essentially a for-step process:</p>
<ol>
<li>Create a stream on your server. This will provide you with an RTMP URL which you&#8217;ll use to upload your stream.</li>
<li>Configure your encoder and hit the stream button. This will upload your video source to your server.</li>
<li>Your server will receive your stream and transcode it into multiple streams with varying quality.</li>
<li>A member of your audience will connect to your livestream server via your website. Depending on your viewer&#8217;s network speed, an appropriate stream will be delivered.</li>
</ol>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/07/162604061301-streaming-delivery-chain.png" alt="streaming delivery chain" /></p>
<p><em>Credit: <a href="https://www.wowza.com/">Wowza</a></em></p>
<p>While there&#8217;s a number of protocols that have been developed for streaming content, there are only three that you should be concerned with.</p>
<h3 id="rtmp">RTMP</h3>
<p>The <strong>Real-time Messaging Protocol (RTMP)</strong> is a streaming protocol that&#8217;s used to transmit optimized streams from your encoder to your livestream server. If you&#8217;re concerned about security, you can use <strong>RTSP</strong>, which uses SSL. There&#8217;s also <strong>RTMPE</strong>, which encrypts streams using Adobe’s security standards.</p>
<h3 id="applehls">Apple HLS</h3>
<p><strong>HTTP Live Streaming</strong> is the most widely used delivery streaming protocol supported by every platform. It uses a technique known as <strong>ABR</strong> (Adaptive Bitrate) to break down videos into smaller chunks (ten seconds or less). It then encodes the chunks into different quality levels, which allows viewers to switch to a different quality stream in the middle of the video.</p>
<p>HLS has a latency that can vary between 10 to 40 seconds. There&#8217;s a newer variant called <a href="https://developer.apple.com/documentation/http_live_streaming/enabling_low-latency_hls">Low Latency HLS</a> that was released in late 2020. It allows for reduced latencies of three seconds or less.</p>
<h3 id="webrtc">WebRTC</h3>
<p><strong>Web Real-time Communication</strong> is an open project originally developed for peer-to-peer communication. However, providers have figured out how to use the technology to provide unheard of latencies of <strong>500ms</strong> and less to deliver livestreams to viewers across a vast geographic distance.</p>
<p>They have also figured out a way to scale up WebRTC to serve thousands of viewers, since standard WebRTC is limited to 60 participants in one session.</p>
<h2 id="livestreaminterfacedevelopment">Livestream Interface Development</h2>
<p>Once you&#8217;ve set up your livestream media server, you&#8217;ll need to build an interface where viewers will watch your livestream. The interface can be either a website or a mobile app. You&#8217;ll need to install a video player to connect and decode streams from your server. As you gather more traffic to your interface, your livestream infrastructure will scale up to keep up with demand and ensure a smooth streaming experience for everyone.</p>
<p>Your platform provider will often provide you with a custom video player. Alternatively, they can recommend several options, which include:</p>
<ul>
<li>
<p><a href="https://videojs.com/">Video.js</a>, which is open source and supports HLS and DASH by default. There are a number of community skins and plugins available that can installed to extend its features.</p>
</li>
<li>
<p><a href="https://www.jwplayer.com/html5-video-player/">JWPlayer</a>, which is a commercial player that supports HLS out of the box. It supports video gallery, 360 videos and ad integration. It starts at $10 per month.</p>
</li>
<li>
<p><a href="https://www.theoplayer.com/">THEOPlayer</a>, which is a commercial player with affordable pricing based on impressions. It comes with rich SDKs, and supports ad integration, analytics and digital rights management.</p>
</li>
</ul>
<p>To build a mobile app, you&#8217;ll need to use a mobile SDK — Android or iOS. There are multiple ways you can build a website:</p>
<ul>
<li>as a single page HTML</li>
<li>using a content management system</li>
<li>with server-based development — such as Django or Laravel</li>
<li>as an <abbr title="single-page application">SPA</abbr>/<abbr title="server-side rendering">SSR</abbr> website with a Node.js or serverless back end</li>
</ul>
<p>A provider may supply you with multiple ways of connecting your website to your livestream server. These options include using:</p>
<ul>
<li>embed scripts</li>
<li>SDKs for server programming languages such as Node, Python and PHP</li>
<li>a REST API</li>
</ul>
<p>Building your own branded website or mobile app allows you to implement additional custom features such as:</p>
<ul>
<li>user authentication</li>
<li>chat streaming</li>
<li>ad display</li>
<li>email subscription</li>
<li>payment collection</li>
<li>measurement tools</li>
</ul>
<p>Next, we&#8217;ll look at different livestream server providers.</p>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/streaming-platforms-control-content/?utm_source=rss">5 Streaming Platforms That Let You Control Your Own Content</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/streaming-platforms-control-content/?utm_source=rss</link><guid isPermaLink="false">/?p=201895</guid><category><![CDATA[Web]]></category><dc:creator><![CDATA[Michael Wanyoike]]></dc:creator><pubDate>Mon, 23 Aug 2021 16:00:29 GMT</pubDate><metaDesc>You can livestream video on the socials, but what if you want more control over your content? Learn how to take charge of your livestreaming.</metaDesc></item><item><title><![CDATA[5 Ways to Undo Mistakes with Git]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/5-ways-to-undo-mistakes-with-git/?utm_source=rss"
              title="5 Ways to Undo Mistakes with Git"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2021/08/1629683611fixing-git-mistakes.png"
        alt="5 Ways to Undo Mistakes with Git"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/08/1629683611fixing-git-mistakes-300x169.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/1629683611fixing-git-mistakes.png 600w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong>No matter how experienced you are, the craft of software development cannot be practiced without making mistakes. But what separates the average from the great programmers is that they know how to <em>undo</em> their mistakes!</strong></p>
<p>If you&#8217;re using Git as your version control system, you already have a host of &#8220;undo tools&#8221; at hand. This post will show you five powerful ways to <strong>undo mistakes with Git</strong>!</p>
<h2 id="discardingsomeofyourlocalchanges">Discarding Some of Your Local Changes</h2>
<p>Coding is often a messy process. At times, it feels like you&#8217;re taking two steps forward and one step back. In other words: some of the code that you&#8217;ve produced is great … but some of it not so much. Here&#8217;s where Git can help you: it allows you to keep what&#8217;s good and discard the changes that you don&#8217;t want anymore.</p>
<p>Let&#8217;s take a look at an example scenario with some &#8220;local&#8221; changes (aka changes we haven&#8217;t committed, yet).</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/08/1628079253discard-changes_starting-situation@2x.png" alt="Local, uncommitted changes — some of which we want to discard" /></p>
<p><em>Note: for a better overview and clearer visualization, I&#8217;m using the <a href="https://www.git-tower.com/?utm_source=sitepoint&#038;utm_medium=guestpost&#038;utm_campaign=undoing-mistakes-in-git">Tower Git desktop client</a> in some of my screenshots. You don&#8217;t need Tower to follow along with this tutorial.</em></p>
<p>Let&#8217;s tackle the problem in <code>general.css</code> first. The changes we made went in a totally wrong direction. Let&#8217;s undo all of them and recreate the last committed state of that file:</p>
<pre><code class="bash language-bash">$ git restore css/general.css
</code></pre>
<p>Note that, alternatively, I could have used the <code>git checkout</code> command to achieve the same outcome. But because <code>git checkout</code> has so many different jobs and meanings, I strongly prefer the slightly newer <code>git restore</code> command (which is focused solely on these types of tasks).</p>
<p>Our second problem in <code>index.html</code> is a little bit more tricky. Some of the changes we made in this file are actually great, while only some of them need to be undone.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/08/1628079341discard-changes_index-file@2x.png" alt="Undoing only some of the changes in a file, while keeping others intact" /></p>
<p>Again, <code>git restore</code> comes to the rescue — but this time with the <code>-p</code> flag, because we want to go down to the &#8220;patch&#8221; level:</p>
<pre><code class="bash language-bash">$ git restore -p index.html
</code></pre>
<p>Git will then take you by the hand and ask you — <em>for every chunk of changes</em> in that file — if you want to discard it or not.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/08/1628079242discard-changes_restore-p.gif" alt="Git asks us what to do with each chunk of changes" /></p>
<p>You&#8217;ll notice that I typed &#8220;n&#8221; for the first chunk (in order to keep it) and &#8220;y&#8221; for the second chunk (in order to discard it). After the process is finished, you can see that only the first, valuable chunk of changes survived — just like we wanted!</p>
<h2 id="resettingaspecificfiletoapreviousstate">Resetting a Specific File to a Previous State</h2>
<p>Sometimes you&#8217;ll want to restore a <em>specific</em> file to <em>specific</em> revision. For example, you know that <code>index.html</code> was working fine at some earlier point in time, but now it&#8217;s not. That&#8217;s when you want to turn back time, but only for this specific file and not for the whole project!</p>
<p>The first thing we have to find out is which exact revision we want to restore. With the right set of parameters, you can get the <code>git log</code> command to show you the history of just our single file:</p>
<pre><code class="bash language-bash">$ git log -- index.html
</code></pre>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/08/1628079412git-log-filename@2x.png" alt="Inspecting the commit history of a specific file" /></p>
<p>This shows us only the commits where <code>index.html</code> has been changed, which is pretty helpful to find the &#8220;bad apple&#8221; revision that broke things. </p>
<p>If you need more information and want to look at the <em>contents</em> of those commits, you could have Git show you the actual changes in these commits with the <code>-p</code> flag:</p>
<pre><code class="bash language-bash">$ git log -p -- index.html
</code></pre>
<p>Once we&#8217;ve found the bad commit where we broke our lovely little file, we can go on and fix the mistake. We&#8217;ll do that by restoring the file at the revision <em>before</em> the bad one! This is important: we don&#8217;t want to restore the file at the commit which introduced the error, but at the last good state — one commit before that!</p>
<pre><code class="bash language-bash">$ git checkout &lt;bad-commit-hash&gt;~1 -- index.html
</code></pre>
<p>Appending <code>~1</code> to the bad commit&#8217;s hash will instruct Git to do exactly that: go one revision <em>before</em> the referenced one.</p>
<p>After executing that command, you&#8217;ll find <code>index.html</code> to be modified in your local working copy: Git restored that last good revision of the file for us!</p>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/5-ways-to-undo-mistakes-with-git/?utm_source=rss">5 Ways to Undo Mistakes with Git</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/5-ways-to-undo-mistakes-with-git/?utm_source=rss</link><guid isPermaLink="false">/?p=201901</guid><category><![CDATA[Web]]></category><dc:creator><![CDATA[Tobias Günther]]></dc:creator><pubDate>Sun, 22 Aug 2021 16:00:34 GMT</pubDate><metaDesc>No matter how good you are with Git, it's a question of when, not if, you'll mess up. Learn five powerful ways to undo mistakes with Git.</metaDesc></item><item><title><![CDATA[Truthy and Falsy: When All is Not Equal in JavaScript]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/javascript-truthy-falsy/?utm_source=rss"
              title="Truthy and Falsy: When All is Not Equal in JavaScript"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2017/08/1629186546truthy-falsy-javascript.jpg"
        alt="Truthy and Falsy: When All is Not Equal in JavaScript"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2017/08/1629186546truthy-falsy-javascript-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2017/08/1629186546truthy-falsy-javascript.jpg 600w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong>Comparing two things for equality can often trip up the unwary JavaScript developer, as the language has several quirks we need to be aware of.</strong></p>
<p>In this article, we&#8217;ll look at why that is, exploring both the double and triple equals operators, as well as the concept of truthy and falsy values in JavaScript. By the time you&#8217;ve finished reading, you&#8217;ll understand how JavaScript makes its comparisons, as well as how truthy and falsy values can help you write cleaner code.</p>
<p><img loading="lazy" src="https://editor.sitepoint.com/wp-content/uploads/2017/08/1629185764truth-false1.jpg" alt="Truthy and Falsy: When All is Not Equal in JavaScript" width="1000" height="750" class="alignnone size-full wp-image-201714" srcset="https://uploads.sitepoint.com/wp-content/uploads/2017/08/1629185764truth-false1.jpg 1000w, https://uploads.sitepoint.com/wp-content/uploads/2017/08/1629185764truth-false1-300x225.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2017/08/1629185764truth-false1-768x576.jpg 768w" sizes="(max-width: 1000px) 100vw, 1000px" /></p>
<h2 id="typinginjavascript">Typing in JavaScript</h2>
<p>JavaScript variables are loosely/dynamically typed and the language doesn&#8217;t care how a value is declared or changed:</p>
<pre><code class="javascript language-javascript">let x;
x = 1;   // x is a number
x = '1'; // x is a string
x = [1]; // x is an array
</code></pre>
<p>Seemingly different values equate to <code>true</code> when compared with <code>==</code> (loose or abstract equality) because JavaScript (effectively) converts each to a string representation before comparison:</p>
<pre><code class="javascript language-javascript">// all true
1 == '1';
1 == [1];
'1' == [1];
</code></pre>
<p><img loading="lazy" src="https://editor.sitepoint.com/wp-content/uploads/2017/08/1629185812truth-false2.jpg" alt="Truthy and Falsy: When All is Not Equal in JavaScript" width="1000" height="385" class="alignnone size-full wp-image-201716" srcset="https://uploads.sitepoint.com/wp-content/uploads/2017/08/1629185812truth-false2.jpg 1000w, https://uploads.sitepoint.com/wp-content/uploads/2017/08/1629185812truth-false2-300x116.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2017/08/1629185812truth-false2-768x296.jpg 768w" sizes="(max-width: 1000px) 100vw, 1000px" /></p>
<p>A more obvious <code>false</code> result occurs when comparing with <code>===</code> (strict equality) because the type is considered:</p>
<pre><code class="javascript language-javascript">// all false
1 === '1';
1 === [1];
'1' === [1];
</code></pre>
<p>Internally, JavaScript sets a value to one of seven primitive data types:</p>
<ul>
<li>Undefined (a variable with no defined value)</li>
<li>Null (a single null value)</li>
<li>Boolean (a <code>true</code> or <code>false</code> value)</li>
<li>Number (this includes <code>Infinity</code> and <code>NaN</code> — not a number!)</li>
<li>BigInt (an integer value larger than 2^53 &#8211; 1)</li>
<li>String (textual data)</li>
<li>Symbol (a unique and immutable primitive new to ES6/2015)</li>
</ul>
<p>Everything else is an Object — including arrays.</p>
<p><img loading="lazy" src="https://editor.sitepoint.com/wp-content/uploads/2017/08/1629185892truth-false3.jpg" alt="Truthy and Falsy: When All is Not Equal in JavaScript" width="1000" height="749" class="alignnone size-full wp-image-201718" srcset="https://uploads.sitepoint.com/wp-content/uploads/2017/08/1629185892truth-false3.jpg 1000w, https://uploads.sitepoint.com/wp-content/uploads/2017/08/1629185892truth-false3-300x225.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2017/08/1629185892truth-false3-768x575.jpg 768w" sizes="(max-width: 1000px) 100vw, 1000px" /></p>
<h2 id="truthyandfalsyvaluesinjavascript">Truthy and Falsy Values in JavaScript</h2>
<p>As well as a type, each value also has an inherent Boolean value, generally known as either <em>truthy</em> or <em>falsy</em>. Some of the rules are a little bizarre, so understanding the concepts and effect on comparison helps when debugging JavaScript applications.</p>
<p>The following values are <strong>always falsy</strong>:</p>
<ul>
<li><code>false</code></li>
<li><code>0</code> (zero)</li>
<li><code>-0</code> (minus zero)</li>
<li><code>0n</code> (<code>BigInt</code> zero)</li>
<li><code>''</code>, <code>""</code>, <code>``</code> (empty string)</li>
<li><code>null</code></li>
<li><code>undefined</code></li>
<li><code>NaN</code></li>
</ul>
<p>Everything else is <strong>truthy</strong>. That includes:</p>
<ul>
<li><code>'0'</code> (a string containing a single zero)</li>
<li><code>'false'</code> (a string containing the text &#8220;false&#8221;)</li>
<li><code>[]</code> (an empty array)</li>
<li><code>{}</code> (an empty object)</li>
<li><code>function(){}</code> (an &#8220;empty&#8221; function)</li>
</ul>
<p>A single value can therefore be used within conditions. For example:</p>
<pre><code class="javascript language-javascript">if (value) {
  // value is truthy
}
else {
  // value is falsy
  // it could be false, 0, '', null, undefined or NaN
}
</code></pre>
<h4 id="documentall"><code>document.all</code></h4>
<p>You might also see <code>document.all</code> listed as a falsy value. This returns an <code>HTMLAllCollection</code> which contains a list of all of a document&#8217;s elements. And while this evaluates to <code>false</code> in a Boolean context, it&#8217;s a deprecated feature and MDN advises against its use.</p>
<p><img loading="lazy" src="https://editor.sitepoint.com/wp-content/uploads/2017/08/1629186044truth-false4.jpg" alt="Truthy and Falsy: When All is Not Equal in JavaScript" width="1000" height="750" class="alignnone size-full wp-image-201720" srcset="https://uploads.sitepoint.com/wp-content/uploads/2017/08/1629186044truth-false4.jpg 1000w, https://uploads.sitepoint.com/wp-content/uploads/2017/08/1629186044truth-false4-300x225.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2017/08/1629186044truth-false4-768x576.jpg 768w" sizes="(max-width: 1000px) 100vw, 1000px" /></p>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/javascript-truthy-falsy/?utm_source=rss">Truthy and Falsy: When All is Not Equal in JavaScript</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/javascript-truthy-falsy/?utm_source=rss</link><guid isPermaLink="false">http://www.sitepoint.com/blogs/?p=11126</guid><category><![CDATA[JavaScript]]></category><dc:creator><![CDATA[Craig Buckler]]></dc:creator><pubDate>Wed, 18 Aug 2021 15:00:30 GMT</pubDate><metaDesc>Anything in JavaScript can be considered truthy or falsy. Learn what these values are and the rules that apply when they're compared.</metaDesc></item><item><title><![CDATA[No-code for Enterprise: Opportunities and Challenges]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/no-code-enterprise-opportunities-challenges/?utm_source=rss"
              title="No-code for Enterprise: Opportunities and Challenges"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2021/08/1629178428no-code-platform.png"
        alt="No-code for Enterprise: Opportunities and Challenges"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/08/1629178428no-code-platform-300x170.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/1629178428no-code-platform.png 600w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><a href="https://www.sitepoint.com/the-rise-of-the-no-code-movement/"><strong>No-code</strong></a> <strong>and low-code development platforms allow non-programmers to create apps without writing any or much code. They often consist of graphical user interfaces that write application code automatically behind the scenes.</strong> </p>
<p>Over the past couple of years, no-code development has taken the IT industry by storm. According to <a href="https://www.gartner.com/en/newsroom/press-releases/2021-06-10-gartner-says-the-majority-of-technology-products-and-services-will-be-built-by-professionals-outside-of-it-by-2024">Gartner</a>, 80% of technology products and services will be built outside of IT by 2024. According to a recent <a href="https://venturebeat.com/2021/02/20/what-you-need-to-know-about-the-no-code-low-code-landscape/">Tonkean survey</a>, 96% of 500 US-based IT and operations professionals have reported that they have already adopted or will soon to adopt no-code/low-code tools.</p>
<p>While the concept of empowering business users to build their own applications has been around for a long time, this new wave of products — powered by a <a href="https://techcrunch.com/2021/05/12/dont-hate-on-low-code-and-no-code/">significant infusion of private capital</a> and <a href="https://siliconangle.com/2020/10/06/low-code-no-code-tools-may-finally-usher-era-citizen-developers/">wider adoption of cloud computing</a> — is becoming a viable alternative to traditional application development. Larger enterprises could significantly benefit from this trend.</p>
<p>Business users in large enterprises have been building and maintaining their own applications for decades. To this end, many business users choose <a href="https://www.zdnet.com/article/office-excel-why-its-microsofts-not-so-secret-weapon-in-no-code-app-development/">spreadsheets as their main platform</a> — in particular, <a href="https://www.notboring.co/p/excel-never-dies-audio">Microsoft Excel</a>. Those familiar with VBA (Visual Basic for Applications) are also able to implement more advanced capabilities in Excel and create integrations with other software like Microsoft Access for data persistence. But this type of no-code usage has always suffered from the inherent limitations of a file-based approach.</p>
<p>The new generation of no-code technologies offers a unique opportunity to build applications that are often indistinguishable by the end user from those that are built by professional developers.</p>
<h2 id="hugenocodeopportunitiesforenterprise">Huge No-code Opportunities for Enterprise</h2>
<p>No-code platforms can present huge opportunities for enterprises in the application development space.</p>
<p>Application development is expensive and time consuming. This is especially true in large enterprises — and for good reason: rushing the release of a buggy application can be very costly to an enterprise. Thus, they have tedious internal processes around the development, testing, and release of applications, ensuring that they&#8217;re secure, stable, and scalable. This makes the application development lifecycle a time-consuming and costly process. The development cost of an average enterprise-level web application is typically in <a href="https://www.comentum.com/web-development-cost-rate-comparison.html">$100k to $1m</a> range. <a href="https://www.formotus.com/blog/figuring-the-costs-of-custom-mobile-business-app-development">According to a 2016 survey by Enterprise Mobility Exchange</a>, 29% of respondents budgeted $250-500k and 25% budgeted over $1.5m for an average mobile application development project.</p>
<p>While this is understandable for business-critical, external-facing applications, there are many other application development needs that are less critical and intended for internal usage only. Yet, these are often subjected to the same level of scrutiny. Why should an application that will only be utilized by a handful of internal users take so long and cost so much to develop?</p>
<p>Often, <a href="https://www.itbusinessedge.com/business-intelligence/low-code-apps-based-on-spreadsheets-simplify-digital-business-transformation/">business units have already built their target applications in Excel</a>, but these are not as efficient as web applications. Most enterprise CIOs and IT managers have heard these arguments so many times. Yet, they have had no sanctioned solution aside from building traditional applications. The new generation of no-code platforms can change this. Offering business units an alternative platform, where they can build web applications with minimal dependence on IT departments, can be an invaluable boon to large enterprises.</p>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/no-code-enterprise-opportunities-challenges/?utm_source=rss">No-code for Enterprise: Opportunities and Challenges</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/no-code-enterprise-opportunities-challenges/?utm_source=rss</link><guid isPermaLink="false">/?p=201701</guid><category><![CDATA[Entrepreneur]]></category><category><![CDATA[Web]]></category><dc:creator><![CDATA[Ugur Kadakal]]></dc:creator><pubDate>Tue, 17 Aug 2021 16:00:22 GMT</pubDate><metaDesc>No-code platforms offer an efficient, low-cost way to build business apps. Learn about the opportunities and challenges they present.</metaDesc></item><item><title><![CDATA[What’s New in Bootstrap 5]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/bootstrap-5-new-features-examples/?utm_source=rss"
              title="What’s New in Bootstrap 5"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2021/08/1629162328bootstrap5.png"
        alt="What's New in Bootstrap 5"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/08/1629162328bootstrap5-300x170.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/1629162328bootstrap5.png 600w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong>Bootstrap is one of the most popular CSS libraries. It allows developers to easily use beautiful styles and components and create responsive websites. Using Bootstrap can save developers time, especially with components that are used in almost every project.</strong></p>
<p>Bootstrap 5 (the current major version, released in May 2021) has brought with it tons of changes and improvements, including the addition of new components, new classes, new styling for old components, updated browser support, the removal of some old components, and much more.</p>
<p>In this article, we&#8217;ll cover what has changed in Bootstrap 5, what has been dropped, and, most excitingly, what&#8217;s new.</p>
<h2 id="whentousebootstrapandwhennot">When to Use Bootstrap (and when not)</h2>
<p>Bootstrap bills itself as &#8220;the world’s most popular framework for building responsive, mobile-first sites&#8221;, and with 152k stars on GitHub, I don&#8217;t think that claim is too far-fetched. Especially for beginners, Bootstrap is a great way to start creating modern and clean websites. It makes it easy to realize complicated, mobile-first designs and provides many components that you&#8217;ll likely need across multiple projects.</p>
<p>Bootstrap has a low learning curve and lends itself well to static websites that don&#8217;t require a build step, as you can just reference the library from Bootstrap&#8217;s CDN. This is in contrast to some other popular CSS frameworks that might be optimized for use with a bundler or task runner.</p>
<p>You should also be aware, however, that Bootstrap <em>isn&#8217;t</em> a silver bullet. For the uninitiated, Bootstrap makes it easy to produce messy and convoluted markup. It&#8217;s also a relatively heavy library in terms of kilobytes (although this is improving with each release), so it might not be the best choice if you&#8217;re only using one or two of its features. As with any abstraction, it will help enormously if you have a good grasp of the underlying technology and can make an informed decision on when to use it.</p>
<h2 id="upgradingfrombootstrap4to5">Upgrading from Bootstrap 4 to 5</h2>
<p>Upgrading from Bootstrap 4 to 5 is generally pretty easy. Most of the components, their classes and utility classes that were available in Bootstrap 4 are still available in Bootstrap 5. The main thing you should focus on when migrating is whether or not the classes or components you&#8217;re using <a href="#whats-dropped">have been dropped</a>. If they&#8217;ve been dropped, there are replacements or ways to achieve the same result using utility classes. The second thing you should focus on is switching from <code>data-*</code> attributes to <code>data-bs-*</code> in components that require JavaScript as a part of their functionalities. (We&#8217;ll cover this more in the next section.)</p>
<p>If you use Bootstrap&#8217;s Sass files, there are some variables and mixins that have been renamed. Bootstrap 5 has an extensive and detailed section all about <a href="https://getbootstrap.com/docs/5.0/customize/overview/">customization</a>, as well as details about the Sass variables and mixins for each component in their respective documentation pages.</p>
<h2 id="whatschanged">What&#8217;s Changed</h2>
<p>Bootstrap 5 brings core changes to Bootstrap as a library, with a change in required dependencies, browser support and more. It also brings changes to the components and classes that we&#8217;ve always used in previous versions.</p>
<h3 id="jquerynolongeradependency">jQuery no longer a dependency</h3>
<p>As a major change from the previous versions, jQuery is no longer a dependency of Bootstrap. Now, you can use Bootstrap in its full glory without it, but you still need Popper.js. This change makes it easier to use Bootstrap in projects that don&#8217;t require or use jQuery — such as when using Bootstrap with React.</p>
<p>You can still use jQuery with Bootstrap if it&#8217;s a part of your website. If Bootstrap detects jQuery in the <code>window</code> object, it will automatically add all components to jQuery&#8217;s plugin system. So, if you&#8217;re migrating from v4 to v5, you don&#8217;t need to worry about this change, and you can still use jQuery with Bootstrap as necessary.</p>
<p>But what if you use jQuery in your website, but you don&#8217;t want Bootstrap to use jQuery? You can do that by adding the attribute <code>data-bs-no-jquery</code> to the body element of the document:</p>
<pre><code class="markup language-markup">&lt;body data-bs-no-jquery="true"&gt;
&lt;/body&gt;
</code></pre>
<p>How does Bootstrap work without jQuery? For example, in v4 you would use the following code in JavaScript to create a <a href="https://getbootstrap.com/docs/5.0/components/toasts">Toast</a> element:</p>
<pre><code class="javascript language-javascript">$('.toast').toast()
</code></pre>
<p>In Bootstrap 5, you can use that same code to create a Toast element if your website already uses jQuery. Without jQuery, you&#8217;ll need to use something like the following code to create a Toast element:</p>
<pre><code class="javascript language-javascript">const toastElList = [...document.querySelectorAll('.toast')]
const toastList = toastElList.map((toastEl) =&gt; {
  return new bootstrap.Toast(toastEl)
})
</code></pre>
<p>This just uses Vanilla JavaScript to query the document for elements having a <code>.toast</code> class, then initializes a Toast component on the element using <code>new bootstrap.Toast()</code>.</p>
<h3 id="browsersupportchange">Browser support change</h3>
<p>Up until v4, Bootstrap used to support Internet Explorer (IE) 10 and 11. As of Bootstrap 5, support for IE has been fully dropped. So, if you need to support IE in your website, you probably should be careful when migrating to v5.</p>
<p>Other changes in browser support include:</p>
<ul>
<li>Firefox and Chrome support now starting from version 60</li>
<li>Safari and iOS support now starting from version 12</li>
<li>Android Browser and WebView support now starting from version 6</li>
</ul>
<h3 id="changeindataattributes">Change in data attributes</h3>
<p>Bootstrap 5 has changed the naming of the data attributes that are generally used by its components that use JavaScript as part of their functionality. Previously, most components that relied on some JavaScript functionalities would have data attributes starting with <code>data-</code>. For example, to create a Tooltip component in Bootstrap 4:</p>
<pre><code class="markup language-markup">&lt;button 
  type="button" 
  class="btn btn-secondary" 
  data-toggle="tooltip" 
  data-placement="top" 
  title="Tooltip"
&gt;
  Tooltip
&lt;/button&gt;
</code></pre>
<p>Notice the usage of <code>data-toggle</code> and <code>data-placement</code>. In Bootstrap 5, data attributes for these components now start with <code>data-bs</code> to easily namespace Bootstrap attributes. For example, to create a Tooltip component in Bootstrap 5:</p>
<pre><code class="markup language-markup">&lt;button 
  type="button" 
  class="btn btn-secondary" 
  data-bs-toggle="tooltip" 
  data-bs-placement="top" 
  title="Tooltip"
&gt;
  Tooltip
&lt;/button&gt;
</code></pre>
<p>Instead of using <code>data-toggle</code> and <code>data-placement</code>, we use <code>data-bs-toggle</code> and <code>data-bs-placement</code>. If you use JavaScript to create components in Bootstrap, there&#8217;s probably no need to make any changes. However, if your components rely only on data attributes to function, you need to change all data attributes that start with <code>data</code> to start with <code>data-bs</code>.</p>
<h3 id="bugsfixed">Bugs fixed</h3>
<p>In Bootstrap 4&#8217;s documentation under <a href="https://getbootstrap.com/docs/4.6/getting-started/browsers-devices/">Browsers and devices</a>, there&#8217;s a list of bugs that occur on some browsers. These bugs are no longer listed in <a href="https://getbootstrap.com/docs/5.0/getting-started/browsers-devices/">the same list</a> for Bootstrap 5. The list includes the following:</p>
<ul>
<li>Hover styling was being applied to elements on touch events on iOS, which wasn&#8217;t desirable as it was considered as an unexpected behavior.</li>
<li>Using <code>.container</code> in Safari 8 and above caused a small font size on printing.</li>
<li>Border radius was being overridden by validation feedback (but could be fixed by adding an extra <code>.has-validation</code> class).</li>
</ul>
<p>The list of bugs and issues in Bootstrap 4&#8217;s documentation also details bugs that happened on browser versions that are no longer supported.</p>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/bootstrap-5-new-features-examples/?utm_source=rss">What’s New in Bootstrap 5</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/bootstrap-5-new-features-examples/?utm_source=rss</link><guid isPermaLink="false">/?p=201688</guid><category><![CDATA[Bootstrap]]></category><category><![CDATA[HTML & CSS]]></category><dc:creator><![CDATA[Shahed Nasser]]></dc:creator><pubDate>Mon, 16 Aug 2021 16:00:34 GMT</pubDate><metaDesc>Need to get up to speed with Bootstrap 5? Upgrading from an older version? Learn what's new in Bootstrap 5, how to upgrade, and what's gone.</metaDesc></item><item><title><![CDATA[How to Build a Monorepo with Nx, Next.js and TypeScript]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/monorepo-nx-next-typescript/?utm_source=rss"
              title="How to Build a Monorepo with Nx, Next.js and TypeScript"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2021/08/1629076829monorepo.png"
        alt="How to Build a Monorepo with Nx, Next.js and TypeScript"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/08/1629076829monorepo-300x170.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/1629076829monorepo.png 600w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong>In this article, we&#8217;ll learn what a monorepo is, and how monorepos help in developing applications faster with a better development experience. We&#8217;ll discuss the advantages of using the <a href="https://nx.dev/">Nx</a> development tools for managing a monorepo, and learn how to use those tools to build a <a style="font-weight:bold" style="font-weight:bold" href="https://nextjs.org/">Next.js</a> application.</strong></p>
<p><em>The code for this article is available on <a href="https://github.com/sitepoint-editors/nx-nextjs-monorepo">GitHub</a>. You can find a working demo of the app we&#8217;re building <a href="https://nx-nextjs-monorepo.vercel.app/">here</a>.</em></p>
<h2 id="whatamonorepoisandwhyweshouldconsiderusingone">What a Monorepo Is, and Why We Should Consider Using One</h2>
<p>A <strong>monorepo</strong> is a single repository that contains the apps, tools and configurations of multiple projects or project components. It&#8217;s an alternative to creating separate repositories for each project or part of a project.</p>
<p>Consider a scenario where we&#8217;re building a dashboard application using some front-end library or framework. The code for this front-end application might be stored in the <code>dashboard</code> repository. The UI components that this repository uses might be stored in another repository named <code>components</code>. Now, every time we update the <code>components</code> repository, we&#8217;d have to go into the <code>dashboard</code> repository and update the <code>components</code> dependency.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/07/1626026159separated.png" alt="Two repositories - dashboard and components" /></p>
<p>To alleviate this problem, we could merge the <code>components</code> repo with the <code>dashboard</code> repo.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/07/1626026158mono-repo-single.png" alt="Components repo merged into dashboard repo" /></p>
<p>However, there might be another front-end application for the marketing site that&#8217;s stored in the <code>marketing</code> repository and which depends on <code>components</code> repository. So, we&#8217;ll have to duplicate <code>components</code> and merge it with <code>marketing</code> as well. However, because of this, any change related to <code>components</code> will have to be made in two places, which isn&#8217;t ideal.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/07/1626026155double-mono-repo.png" alt="Dashboard and marketing repos, each with a copy of components" /></p>
<p>The above issue can be resolved by using a monorepo, where the <code>dashboard</code>, <code>components</code> and <code>marketing</code> components reside in one single repository.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/07/1626026156mono-repo-all.png" alt="Monorepo containing dashboard, marketing and components" /></p>
<p>There are various advantages of using a monorepo:</p>
<ul>
<li>Updating of packages is much easier, since all applications and libraries are inside a single repository. Since all applications and packages are under the same repository, adding new code or modifying existing code can be easily tested and shipped.</li>
<li>Refactoring of code is much easier, as we&#8217;ll only have to do it in a single place instead of replicating the same stuff across multiple repositories.</li>
<li>A monorepo allows for onsistent configuration for CI/CD pipelines, which can be reused by all the applications and libraries present in the same repository.</li>
<li>Publishing of packages also becomes much easier, due to tools like Nx.</li>
</ul>
<p>The <a href="https://nx.dev/latest/react/getting-started/nx-cli">Nx CLI</a> will help us in generating new Next.js applications and React component libraries. It will also help us in running a development web server with hot module reload. It can also do a bunch of other important things like <a href="https://nx.dev/latest/react/guides/eslint">linting, formatting</a> and <a href="https://nx.dev/latest/react/generators/using-schematics">generating code</a>. The advantage of using a CLI like this that it will provide a sense of standardization in our codebase. As our codebase grows, it&#8217;s very difficult to manage and understand the underlying complexities. Nx CLI takes away most of those complexities by providing tools to automate the generation of code.</p>
<h2 id="softwarerequired">Software Required</h2>
<p>We’ll need the following installed for the purposes of running our app:</p>
<ul>
<li><a href="https://nodejs.org/en/download/">npm</a></li>
<li><a href="https://classic.yarnpkg.com/en/docs/install/">Yarn</a> (optional)</li>
</ul>
<p>These technologies will be used in the app:</p>
<ul>
<li><a href="https://nextjs.org/">Next.js</a> for building our app</li>
<li><a href="https://styled-components.com/">Styled Components</a> for adding styles to our app</li>
</ul>
<p><em>Note: you can read more about <a href="https://www.sitepoint.com/quick-tip-multiple-versions-node-nvm/">how to install multiple versions of Node.js using nvm</a> if you want to get up to speed with that.</em></p>
<p>We&#8217;ll also need a <a href="https://www.producthunt.com/">Product Hunt</a> account.</p>
<h2 id="installingandbootstrappingannxworkspace">Installing and Bootstrapping an Nx Workspace</h2>
<p>We can install the <a href="https://www.npmjs.com/package/@nrwl/cli">Nx CLI</a> using the following command:</p>
<pre><code class="bash language-bash">npm install nx -g
</code></pre>
<p>The above command will install the Nx CLI globally. This is useful because now we can create a new Next.js application using this CLI from any directory.</p>
<p>Next, we need to run the following command inside the directory where we want to create our monorepo:</p>
<pre><code class="bash language-bash">npx create-nx-workspace@latest nx-nextjs-monorepo
</code></pre>
<p>The above command will create an Nx workspace. All Nx applications can reside inside an Nx workspace.</p>
<p>You might need to replace <code>nx-nextjs-monorepo</code> with the name of your workspace. It can be named anything you like. The name of the workspace is generally the name of an organization, company, etc.</p>
<p>When we run the above command, we&#8217;ll be given a set of steps that will create what type of applications we want to create with Nx.</p>
<ul>
<li>
<p><strong>Step 1:</strong> It will first ask what type of application we want to create. We&#8217;ll select Next.js from the list of options.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/06/16248510831.png" alt="Create a workspace" /></p>
</li>
<li>
<p><strong>Step 2:</strong> It will ask us for the name of the application we want to create. We can call it anything. In this case, we&#8217;ll name it as &#8220;product-hunt&#8221;.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/06/16248510872.png" alt="Enter the application name" /></p>
</li>
<li>
<p><strong>Step 3:</strong> It will ask us what type of stylesheet we want to use. We&#8217;ll choose Styled Components.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/06/16248510913.png" alt="Enter the default stylesheet format" /></p>
</li>
<li>
<p><strong>Step 4:</strong> It will ask us if we want to use <a href="https://nx.app/">Nx Cloud</a>, which is a platform for speeding up the builds of Nx applications. In this case, we&#8217;ll choose No, but please check it out.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/06/16248510954.png" alt="Use Nx Cloud?" /></p>
</li>
</ul>
<p>Nx will now scaffold all the files and directories and generate the following structure for us.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/06/16248510985_1.png" alt="Directory structure" /></p>
<p>The <code>apps</code> directory contains all our applications. In our case, this directory will contain the Next.js application that we&#8217;re building (named <code>product-hunt</code>). This directory also contains the end-to-end test applications (named <code>product-hunt-e2e</code>) scaffolded using <a href="https://www.cypress.io/">Cypress</a>.</p>
<p>The <code>libs</code> directory contains all the libraries like components, utility functions, and so on. These libraries can be used by any of the applications present in the <code>apps</code> directory.</p>
<p>The <code>tools</code> directory contains all the custom scripts, codemods, and so on, which are used to make certain modifications to our codebase.</p>
<p><em>Note: more information regarding the directory structure is available <a href="https://nx.dev/latest/react/getting-started/nx-setup">here</a>.</em></p>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/monorepo-nx-next-typescript/?utm_source=rss">How to Build a Monorepo with Nx, Next.js and TypeScript</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/monorepo-nx-next-typescript/?utm_source=rss</link><guid isPermaLink="false">/?p=201610</guid><category><![CDATA[JavaScript]]></category><dc:creator><![CDATA[Nirmalya Ghosh]]></dc:creator><pubDate>Sun, 15 Aug 2021 16:00:20 GMT</pubDate><metaDesc>Too many repos to update? Try a monorepo! Learn what a monorepo is, and how to use one to build an app with Nx, Next.js and TypeScript.</metaDesc></item><item><title><![CDATA[The Best Markdown Plugins for WordPress]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/the-best-markdown-plugins-for-wordpress/?utm_source=rss"
              title="The Best Markdown Plugins for WordPress"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2015/06/1628748448wordpress-markdown-plugins.png"
        alt="The Best Markdown Plugins for WordPress"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2015/06/1628748448wordpress-markdown-plugins-300x170.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2015/06/1628748448wordpress-markdown-plugins.png 600w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong>Markdown is a fast and efficient way to write content for the Web. It’s easy to write, easy to read, and easily converted to HTML. It empowers writers and bloggers to write without the use of overcomplicated and visually exhausting code.</strong></p>
<p>The syntax was created by <a href="https://daringfireball.net/projects/markdown/">John Gruber</a> in 2004 and became popular in blogs and forums. It’s used on Reddit, Trello, GitHub, Stack Overflow, SourceForge, and Stack Exchange. Chances are, you’re familiar with it already.</p>
<p>Markdown offers <a href="https://www.sitepoint.com/writers-bloggers-can-make-markdown-wordpress/">a number of benefits to writers and bloggers</a>, but by default, WordPress doesn’t support it. You need to either convert your Markdown to HTML before pasting it into WordPress, or use a plugin.</p>
<p>In this article, we’ll cover five of the best Markdown plugins for WordPress. Just to be clear from the beginning: it&#8217;s best to avoid having more than one active at the same time, and to avoid surprises with formatting by using the text editor rather than the visual editor.</p>
<p>Now, let’s dive in.</p>
<h2 id="markdownpluginsforwordpress">Markdown Plugins for WordPress</h2>
<p>Here are five WordPress Markdown plugins that are actively developed and work with recent versions of WordPress.</p>
<h3 id="1wpgithubermd">1. WP Githuber MD</h3>
<p><a href="https://wordpress.org/plugins/wp-githuber-md/">WP Githuber MD</a> is an all-in-one Markdown plugin that uses GitHub Flavored Markdown. It’s under active development and offers syntax highlighting, a live preview pane, spell check, image paste, and can convert HTML to Markdown. Markdown can be individually enabled or disabled for each post.</p>
<p>When enabled, your posts are saved in Markdown for ease of editing. The plugin parses the Markdown to HTML and saves the results into <code>wp-posts.post_content</code>. This ensures that your posts will display correctly even if the plugin is turned off.</p>
<p>A toolbar is offered at the top of the editor. It includes icons for formatting, headers, lists, links, images, and more. When I tested the plugin, I learned that lists are not continued automatically on pressing <kbd>enter</kbd>. A new number, hyphen, or asterisk needs to be typed on each line.</p>
<p>The plugin is highly rated and updated regularly. It&#8217;s the best WordPress Markdown editor I&#8217;m aware of.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/07/1625894645wpmarkdown-wpgithubermd.png" alt="Screenshot of WP Githuber MD" /></p>
<h3 id="2jetpack">2. Jetpack</h3>
<p><a href="https://jetpack.com/features/discussion/markdown/">Jetpack</a> is a well-known plugin by Automattic that gives self-hosted WordPress installations the same feature set as you find on WordPress.com. And that includes Markdown. The plugin currently follows <a href="https://commonmark.org/help/">CommonMark</a> syntax that supports tables, footnotes, and more.</p>
<p>Markdown editing needs to be manually activated from Jetpack’s settings, and LaTeX can be separately enabled for writing mathematical equations and formulas. You can then create and edit posts in Markdown using either the <a href="https://jetpack.com/support/markdown/">Block Editor</a> or <a href="https://jetpack.com/support/markdown-classic-editor/">Classic Editor</a>. Unfortunately, neither syntax highlighting nor a Markdown preview pane are offered.</p>
<p>If you use the block editor, a new Markdown block will become available. If you use the classic editor, you’ll get the best results in the text editor. The visual editor can produce unexpected results.</p>
<p>The Markdown version of your post is retained for future editing, and the published post is saved in HTML automatically, so that your site will still look good even if the plugin is deactivated. Markdown comments are also supported.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/07/1625894637markdownwp-jetpackblockeditor.png" alt="Screenshot of Jetpack" /></p>
<h3 id="3wpeditormd">3. WP Editor.md</h3>
<p><a href="https://wordpress.org/plugins/wp-editormd/">WP Editor.md</a> is a WordPress Markdown editor with syntax highlighting and a preview pane. Unfortunately, very little documentation is available for it. It resembles WP Githuber MD’s interface and uses the Markdown module from Jetpack for parsing and saving content. When I tested the plugin, lists in the preview pane appeared double-spaced but looked fine when published.</p>
<p>However, when it converts your posts to HTML it seems to save in that format. This frustrated one user who had been using Jetpack previously. He was surprised to learn that all of his Markdown posts were no longer in Markdown.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/07/1625894643wpmarkdown-wpeditormd.png" alt="Screenshot of WP Editor.md" /></p>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/the-best-markdown-plugins-for-wordpress/?utm_source=rss">The Best Markdown Plugins for WordPress</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/the-best-markdown-plugins-for-wordpress/?utm_source=rss</link><guid isPermaLink="false">http://www.sitepoint.com/?p=107196</guid><category><![CDATA[Plugins]]></category><category><![CDATA[WordPress]]></category><dc:creator><![CDATA[Adrian Try]]></dc:creator><pubDate>Wed, 11 Aug 2021 20:00:16 GMT</pubDate><metaDesc>WordPress doesn't convert Markdown to HTML by default. Here are five Markdown plugins for WordPress that will make your life much easier.</metaDesc></item><item><title><![CDATA[Build Your Own Subscription Blog with Shopify]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/build-shopify-subscription-blog/?utm_source=rss"
              title="Build Your Own Subscription Blog with Shopify"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2021/08/1628644858blog-monetization.png"
        alt="Build Your Own Subscription Blog with Shopify"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/08/1628644858blog-monetization-300x170.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/1628644858blog-monetization.png 600w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong>In this article, I&#8217;ll show how to build a paywalled blog with Shopify using HTML, CSS, and Liquid (Shopify’s template language). Even though Shopify’s blogging features are somewhat basic, and there are other online services that specifically help bloggers to set up blogs that readers can subscribe to for a fee (such as Ghost), I’ll explain why you might rather use Shopify.</strong></p>
<h2 id="huhshopifyforcontentwhy">Huh? Shopify for content? Why?</h2>
<p>Shopify is arguably leading the ecommerce space. It has the most customers and the highest number of (well-executed) out-of-the-box <a href="https://help.shopify.com/en/manual/intro-to-shopify/pricing-plans/plan-features/">features</a> compared to its rivals.</p>
<p>Shopify can facilitate the sale of almost anything, including subscription-based services, digital downloads, free swag, and even in-store items thanks to its point-of-sale system.</p>
<p>I would say that most believe Shopify to be number one at ecommerce, and while there are specialized services for selling access to content, I still believe Shopify is the better option.</p>
<p>Let’s compare Shopify with <a href="https://ghost.org/">Ghost</a>, for example, since Ghost is the fastest-growing blogging CMS today.</p>
<p>Shopify Basic and Ghost Pro Basic are both $29/month. However, Shopify can sell anything, whereas Ghost can only sell access to <em>subscription</em>-based content. Ghost can’t sell access to content for a one-time fee, or anything else on the side. Shopify wins hands down when it comes to business-model flexibility.</p>
<p>Honestly, the only caveat is that the blogging features are considered to be Shopify’s weak link, but if you enjoy building themes from scratch (which frankly comes with <em>many</em> benefits), then you’d be surprised at how mighty and flexible Shopify’s Liquid template language is. I wouldn’t consider Shopify an ecommerce <em>platform</em>, but rather a CMS with roots in ecommerce.</p>
<p>So, if you’d like to leave a new venture open to additional/alternative business models or you already have a Shopify store with a blog that you’d like to monetize, let’s kick things off.</p>
<h2 id="prerequisites">Prerequisites</h2>
<p>You’ll need to be reasonably skilled in web development, understanding HTML and CSS, at least. Some knowledge of the Liquid template language that Shopify uses would certainly be beneficial, but not required, since Liquid is somewhat easy to learn along the way. (I’d recommend checking out the <a href="https://shopify.dev/api/liquid/">Liquid documentation</a> regardless.)</p>
<p>You’ll also need to <a href="https://shopify.com/">create a Shopify account</a>, which is free for 14 days (no card required). Please note, however, that unless you pick a payment plan, you won&#8217;t be able to remove the password protection on your store.</p>
<h2 id="step1definethethemestructure">Step 1: Define the Theme Structure</h2>
<p>First, let’s define the file structure of the theme using a mixture of required and common files. We won’t use all of them in this tutorial, but you can use this structure to kickstart any barebones Shopify store in the future. The files can be blank for now:</p>
<pre><code class="bash language-bash">.
├── assets
├── config
│   ├── settings_data.json
│   └── settings_schema.json
├── layout
│   └── theme.liquid
├── sections
├── snippets
└── templates
    ├── 404.liquid
    ├── article.liquid
    ├── blog.liquid
    ├── cart.liquid
    ├── collection.liquid
    ├── customers
    │   ├── account.liquid
    │   ├── activate_account.liquid
    │   ├── addresses.liquid
    │   ├── login.liquid
    │   ├── order.liquid
    │   ├── register.liquid
    │   └── reset_password.liquid
    ├── gift_card.liquid
    ├── index.liquid
    ├── list-collections.liquid
    ├── page.liquid
    ├── password.liquid
    ├── product.liquid
    └── search.liquid
</code></pre>
<p>If you&#8217;re following along on macOS or Linux, you can use the following commands to generate the structure:</p>
<pre><code class="bash language-bash">mkdir -p assets snippets sections config layout templates/customers
touch config/settings_data.json config/settings_schema.json
touch layout/theme.liquid
cd templates/customers
touch account.liquid activate_account.liquid addresses.liquid login.liquid order.liquid register.liquid reset_password.liquid
cd ..
touch 404.liquid article.liquid blog.liquid cart.liquid collection.liquid gift_card.liquid index.liquid list-collections.liquid page.liquid password.liquid product.liquid  search.liquid

# back into the project root
cd ..
</code></pre>
<p>Further reading: </p>
<ul>
<li><a href="https://shopify.dev/docs/themes/theme-file-structure/">theme file structure</a></li>
</ul>
<h2 id="step2obtainthethemeid">Step 2: Obtain the Theme ID</h2>
<p>Next, we’ll need to obtain the theme ID of the default theme (“Debut”) that should already be installed. Within the Shopify admin, navigate to <strong>Online Store</strong> &gt; <strong>Themes</strong> &gt; <strong>Actions</strong>  &gt; <strong>Edit code</strong> and then make note of the numeric theme ID in the URL. If you already have a theme set up, use <em>that</em> theme ID instead.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/07/162549785201.jpg" alt="Obtain the Shopify theme ID" /></p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/07/162549785402.jpg" alt="Grab the Shopify theme ID from the URL" /></p>
<p><em>Note: while the default theme — “Debut” — is a fully-functioning coded theme, we’ll be overwriting it with our code.</em></p>
<h2 id="step3setupthemekit">Step 3: Set up Theme Kit</h2>
<p><a href="https://shopify.dev/tools/theme-kit/">Theme Kit</a> is a command-line tool for building and managing Shopify themes. In this tutorial, we’ll use Theme Kit to watch for code changes within our theme directory and deploy those changes to our theme.</p>
<p>Theme Kit works on Windows, macOS, and Linux, and works with workflow tools such as Git and Node.js. To keep things fairly simple, we’ll omit workflow tools and just use Theme Kit.</p>
<h3 id="installthemekit">Install Theme Kit</h3>
<p>First, install Theme Kit using the command line.</p>
<h4 id="windowsandchocolately">Windows and Chocolately</h4>
<pre><code class="bash language-bash">choco install themekit
</code></pre>
<h4 id="macosandhomebrew">macOS and Homebrew</h4>
<pre><code class="bash language-bash">brew tap shopify/shopify
brew install themekit
</code></pre>
<h4 id="linux">Linux</h4>
<pre><code class="bash language-bash">curl -s https://shopify.dev/themekit.py | sudo python
</code></pre>
<h3 id="createashopifyapp">Create a Shopify &#8220;app&#8221;</h3>
<p>Next, create a Shopify &#8220;app&#8221; to acquire the necessary credentials that Theme Kit requires in order to authenticate theme changes.</p>
<p>Within the Shopify admin, navigate to <strong>Apps</strong> &gt; <strong>Manage private apps</strong>, then tick the three checkboxes to accept the terms and conditions. Next select <strong>Enable private app development</strong> &gt; <strong>Create private app</strong> and complete the form. </p>
<p>In this step, you&#8217;ll need to give your private app a name and enter an emergency developer email. You&#8217;ll also need to enable “Read and write” access for “Themes” before clicking on the <strong>Save</strong> button. This final point is hidden behind a <strong>Show inactive Admin API permissions</strong> dropdown.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/07/162549785603.jpg" alt="Create a private Shopify app" /></p>
<p>Finally, click <strong>Create app</strong> and make note of the “Password” on the next screen.</p>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/build-shopify-subscription-blog/?utm_source=rss">Build Your Own Subscription Blog with Shopify</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/build-shopify-subscription-blog/?utm_source=rss</link><guid isPermaLink="false">/?p=201543</guid><category><![CDATA[Web]]></category><dc:creator><![CDATA[Daniel Schwarz]]></dc:creator><pubDate>Tue, 10 Aug 2021 16:00:18 GMT</pubDate><metaDesc>How do you set up a blog that you can easily monetize? Learn how to build a paywalled blog with Shopify and why Shopify is worth considering.</metaDesc></item><item><title><![CDATA[The Complete Guide to HTML Forms and Constraint Validation]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/html-forms-constraint-validation-complete-guide/?utm_source=rss"
              title="The Complete Guide to HTML Forms and Constraint Validation"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2021/08/1628603246fom-constraint-validation.jpg"
        alt="The Complete Guide to HTML Forms and Constraint Validation"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/08/1628603246fom-constraint-validation-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/1628603246fom-constraint-validation.jpg 600w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong>In this article, we look at HTML form fields and the validation options offered by HTML5. We&#8217;ll also look at how these can be enhanced through the use of CSS and JavaScript.</strong></p>
<h2 id="whatisconstraintvalidation">What is Constraint Validation?</h2>
<p>Every form field has a purpose. And this purpose is often governed by <strong>contraints</strong> — or the rules governing what should and shouldn&#8217;t be entered into each form field. For example, an <code>email</code> field will require a valid email address; a <code>password</code> field might require certain types of characters and have a minimum number of required characters; and a text field might have a limit on how many characters can be entered.</p>
<p>Modern browsers have the ability to check that these constraints are being observed by users, and can warn them when those rules have been breached. This is known as <strong>contstraint validation</strong>.</p>
<h2 id="clientsidevsserversidevalidation">Client-side vs Server-side Validation</h2>
<p>The majority of JavaScript code written in the early years of the language handled client-side form validation. Even today, developers spend significant time writing functions to check field values. <em>Is this still necessary in modern browsers? Probably not</em>. In most cases, it really depends on what you&#8217;re trying to do.</p>
<p>But first, here&#8217;s a big warning message:</p>
<blockquote>
<p>Client-side validation is a nicety which can prevent common data-entry errors before an app wastes time and bandwidth sending data to a server. <strong>It&#8217;s not a substitute for server-side validation!</strong></p>
<p style="margin-top: 1em;">Always sanitize data server-side. Not every request will come from a browser. Even when it does, there&#8217;s no guarantee the browser validated the data. Anyone who knows how to open a browser&#8217;s developer tools can also bypass your lovingly crafted HTML and JavaScript.</p>
</blockquote>
<h2 id="html5inputfields">HTML5 Input Fields</h2>
<p>HTML offers:</p>
<ul>
<li><a href="https://developer.mozilla.org/docs/Web/HTML/Element/textarea"><code>&lt;textarea&gt;</code></a> for multiline text boxes</li>
<li><a href="https://developer.mozilla.org/docs/Web/HTML/Element/select"><code>&lt;select&gt;</code></a> for a drop-down list of options</li>
<li><a href="https://developer.mozilla.org/docs/Web/HTML/Element/button"><code>&lt;button&gt;</code></a> for &hellip; buttons</li>
</ul>
<p>But you&#8217;ll use <a href="https://developer.mozilla.org/docs/Web/HTML/Element/input"><code>&lt;input&gt;</code></a> most often:</p>
<pre><code class="markup language-markup">&lt;input type="text" name="username" /&gt;
</code></pre>
<p>The <code>type</code> attribute sets the control type, and there&#8217;s a large choice of options:</p>
<table>
<thead>
<tr>
<th><code>type</code></th>
<th>description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>button</code></td>
<td>a button with no default behavior</td>
</tr>
<tr>
<td><code>checkbox</code></td>
<td>a check/tick box</td>
</tr>
<tr>
<td><code>color</code></td>
<td>a color picker</td>
</tr>
<tr>
<td><code>date</code></td>
<td>a date picker for the year, month, and day</td>
</tr>
<tr>
<td><code>datetime-local</code></td>
<td>a date and time picker</td>
</tr>
<tr>
<td><code>email</code></td>
<td>an email entry field</td>
</tr>
<tr>
<td><code>file</code></td>
<td>a file picker</td>
</tr>
<tr>
<td><code>hidden</code></td>
<td>a hidden field</td>
</tr>
<tr>
<td><code>image</code></td>
<td>a button which displays the image defined by the <code>src</code> attribute</td>
</tr>
<tr>
<td><code>month</code></td>
<td>a month and year picker</td>
</tr>
<tr>
<td><code>number</code></td>
<td>a number entry field</td>
</tr>
<tr>
<td><code>password</code></td>
<td>a password entry field with obscured text</td>
</tr>
<tr>
<td><code>radio</code></td>
<td>a radio button</td>
</tr>
<tr>
<td><code>range</code></td>
<td>a slider control</td>
</tr>
<tr>
<td><code>reset</code></td>
<td>a button that resets all form inputs to their default values (but avoid using this, as it&#8217;s rarely useful)</td>
</tr>
<tr>
<td><code>search</code></td>
<td>a search entry field</td>
</tr>
<tr>
<td><code>submit</code></td>
<td>a form submission button</td>
</tr>
<tr>
<td><code>tel</code></td>
<td>a telephone number entry field</td>
</tr>
<tr>
<td><code>text</code></td>
<td>a text entry field</td>
</tr>
<tr>
<td><code>time</code></td>
<td>a time picker with no time zone</td>
</tr>
<tr>
<td><code>url</code></td>
<td>a URL entry field</td>
</tr>
<tr>
<td><code>week</code></td>
<td>a week number and year picker</td>
</tr>
</tbody>
</table>
<p>The browser falls back to <code>text</code> if you omit the <code>type</code> attribute or it doesn&#8217;t support an option. Modern browsers have good support for all types, but old browsers will still show a text entry field.</p>
<p>Other useful <code>&lt;input&gt;</code> attributes include:</p>
<table>
<thead>
<tr>
<th>attribute</th>
<th>description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>accept</code></td>
<td>file upload type</td>
</tr>
<tr>
<td><code>alt</code></td>
<td>alternative text for the image types</td>
</tr>
<tr>
<td><code>autocomplete</code></td>
<td>hint for field auto-completion</td>
</tr>
<tr>
<td><code>autofocus</code></td>
<td>focus field on page load</td>
</tr>
<tr>
<td><code>capture</code></td>
<td>media capture input method</td>
</tr>
<tr>
<td><code>checked</code></td>
<td>checkbox/radio is checked</td>
</tr>
<tr>
<td><code>disabled</code></td>
<td>disable the control (it won&#8217;t be validated or have its value submitted)</td>
</tr>
<tr>
<td><code>form</code></td>
<td>associate with a form using this ID</td>
</tr>
<tr>
<td><code>formaction</code></td>
<td>URL for submission on submit and image buttons</td>
</tr>
<tr>
<td><code>inputmode</code></td>
<td>data type hint</td>
</tr>
<tr>
<td><code>list</code></td>
<td>ID of <a href="https://www.sitepoint.com/html5-datalist-autocomplete/"><code>&lt;datalist&gt;</code> autocomplete options</a></td>
</tr>
<tr>
<td><code>max</code></td>
<td>maximum value</td>
</tr>
<tr>
<td><code>maxlength</code></td>
<td>maximum string length</td>
</tr>
<tr>
<td><code>min</code></td>
<td>minimum value</td>
</tr>
<tr>
<td><code>minlength</code></td>
<td>minimum string length</td>
</tr>
<tr>
<td><code>name</code></td>
<td>name of control, as submitted to server</td>
</tr>
<tr>
<td><code>pattern</code></td>
<td>a regular expression pattern, such as <code>[A-Z]+</code> for one or more uppercase characters</td>
</tr>
<tr>
<td><code>placeholder</code></td>
<td>placeholder text when the field value is empty</td>
</tr>
<tr>
<td><code>readonly</code></td>
<td>the field is not editable, but it will still be validated and submitted</td>
</tr>
<tr>
<td><code>required</code></td>
<td>the field is required</td>
</tr>
<tr>
<td><code>size</code></td>
<td>the size of the control (often overridden in CSS)</td>
</tr>
<tr>
<td><code>spellcheck</code></td>
<td>set <code>true</code> or <code>false</code> spell-checking</td>
</tr>
<tr>
<td><code>src</code></td>
<td>image URL</td>
</tr>
<tr>
<td><code>step</code></td>
<td>incremental values in numbers and ranges</td>
</tr>
<tr>
<td><code>type</code></td>
<td>field type (see above)</td>
</tr>
<tr>
<td><code>value</code></td>
<td>the initial value</td>
</tr>
</tbody>
</table>
<h3 id="htmloutputfields">HTML Output Fields</h3>
<p>As well as input types, HTML5 provides read-only outputs:</p>
<ul>
<li><a href="https://developer.mozilla.org/docs/Web/HTML/Element/output"><code>output</code></a>: a text result of a calculation or user action</li>
<li><a href="https://developer.mozilla.org/docs/Web/HTML/Element/progress"><code>progress</code></a>: a progress bar with <code>value</code> and <code>max</code> attributes</li>
<li><a href="https://developer.mozilla.org/docs/Web/HTML/Element/meter"><code>meter</code></a>: a scale which can change between green, amber, and red depending on the values set for the <code>value</code>, <code>min</code>, <code>max</code>, <code>low</code>, <code>high</code>, and <code>optimum</code> attributes.</li>
</ul>
<h2 id="inputlabels">Input Labels</h2>
<p>Fields should have an associated <code>&lt;label&gt;</code>, which you can wrap around the element:</p>
<pre><code class="markup language-markup">&lt;label&gt;your name &lt;input type="text" name="name" /&gt;&lt;label&gt;
</code></pre>
<p>Or link the field&#8217;s <code>id</code> to the label using a <code>for</code> attribute:</p>
<pre><code class="markup language-markup">&lt;label for="nameid"&gt;your name&lt;/label&gt;
&lt;input type="text" id="nameid" name="name" /&gt;
</code></pre>
<p>Labels are important for accessibility. You may have encountered forms which use a <code>placeholder</code> to save screen space:</p>
<pre><code class="markup language-markup">&lt;input type="text" name="name" value="" placeholder="your name" /&gt;
</code></pre>
<p>The placeholder text disappears once the user types something &mdash; even a single space. It&#8217;s better to show a label than force the user remember what the field wanted!</p>
<h2 id="inputbehaviors">Input Behaviors</h2>
<p>Field types and constraint attributes change the browser&#8217;s input behavior. For example, a <code>number</code> input shows a numeric keyboard on mobile devices. The field may show a spinner and keyboard up/down cursor presses will increment and decrement values.</p>
<p>Most field types are obvious, but there are exceptions. For example, credit cards are numeric, but the increment/decrement spinner is useless and it&#8217;s too easy to press up or down when entering a 16-digit number. It&#8217;s better to use a standard <code>text</code> type, but set the <a href="https://developer.mozilla.org/docs/Web/HTML/Global_attributes/inputmode"><code>inputmode</code> attribute</a> to <code>numeric</code>, which shows an appropriate keyboard. Setting <a href="https://developer.mozilla.org/docs/Web/HTML/Attributes/autocomplete"><code>autocomplete="cc-number"</code></a> also suggests any pre-configured or previously entered card numbers.</p>
<p>Using the correct field <code>type</code> and <code>autocorrect</code> offers benefits which would be difficult to achieve in JavaScript. For example, some mobile browsers can:</p>
<ul>
<li>import credit card details by scanning a card using the camera</li>
<li>import <a href="https://web.dev/sms-otp-form/#autocomplete%22one-time-code%22">one-time-codes sent by SMS</a></li>
</ul>
<h2 id="automaticvalidation">Automatic Validation</h2>
<p>The browser ensures an input value adheres with the constraints defined by the <code>type</code>, <code>min</code>, <code>max</code>, <code>step</code>, <code>minlength</code>, <code>maxlength</code>, <code>pattern</code>, and <code>required</code> attributes. For example:</p>
<pre><code class="markup language-markup">&lt;input type="number" min="1" max="100" required /&gt;
</code></pre>
<p>Attempting to submit an empty value prevents form submission and shows the following message in Chrome:</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/07/1625835070input-number.png" alt="input required validation message" /></p>
<p>The spinners will not permit values outside the 1 to 100 range. Similar validation messages appear if you type a string which is not a number. <em>All without a single line of JavaScript.</em></p>
<p>You can stop browser validation by:</p>
<ul>
<li>adding a <code>novalidate</code> attribute to the <code>&lt;form&gt;</code> element</li>
<li>adding a <code>formnovalidate</code> attribute to the submission button or image</li>
</ul>
<h2 id="creatingcustomjavascriptinputs">Creating Custom JavaScript Inputs</h2>
<p>If you&#8217;re writing a new JavaScript-based date entry component, please stop and step away from your keyboard!</p>
<p>Writing custom input controls is difficult. You have to consider the mouse, keyboard, touch, speech, accessibility, screen dimensions, and what happens when JavaScript fails. You&#8217;re also creating a different user experience. Perhaps your control is superior to the standard date picker on desktop, iOS, and Android, but the unfamiliar UI will confuse some users.</p>
<p>There are three primary reasons developers choose to create JavaScript-based inputs.</p>
<h3 id="1standardcontrolsaredifficulttostyle">1. Standard controls are difficult to style</h3>
<p>CSS styling is limited and often requires hacks, such as overlaying an input with its label&#8217;s <code>::before</code> and <code>::after</code> pseudo-elements. The situation is improving, but question any design which prioritizes form over function.</p>
<h3 id="2moderninputtypesarenotsupportedinoldbrowsers">2. Modern <code>&lt;input&gt;</code> types are not supported in old browsers</h3>
<p>In essence, you&#8217;re coding for Internet Explorer. IE users won&#8217;t get a date picker but can still enter dates in <code>YYYY-MM-DD</code> format. If your client insists, then load a polyfill in IE only. There&#8217;s no need to burden modern browsers.</p>
<h3 id="3yourequireanewinputtypewhichhasneverbeenimplementedbefore">3. You require a new input type which has never been implemented before</h3>
<p>These situations are rare, but always start with appropriate HTML5 fields. They&#8217;re fast, and they work even before the script has loaded. You can progressively enhance fields as necessary. For example, a sprinkling of JavaScript can ensure a calendar event&#8217;s end date occurs after a starting date.</p>
<p>In summary: <em>avoid re-inventing HTML controls!</em></p>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/html-forms-constraint-validation-complete-guide/?utm_source=rss">The Complete Guide to HTML Forms and Constraint Validation</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/html-forms-constraint-validation-complete-guide/?utm_source=rss</link><guid isPermaLink="false">/?p=201500</guid><category><![CDATA[HTML]]></category><category><![CDATA[HTML & CSS]]></category><category><![CDATA[HTML5]]></category><dc:creator><![CDATA[Craig Buckler]]></dc:creator><pubDate>Mon, 09 Aug 2021 16:00:06 GMT</pubDate><metaDesc>How much do you know about HTML5 form validation? Even if you know a lot, we bet you'll learn things you didn't know in this handy guide.</metaDesc></item><item><title><![CDATA[What is GitHub Copilot? An AI Pair Programmer for Everyone]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/github-copilot-ai-pair-programming/?utm_source=rss"
              title="What is GitHub Copilot? An AI Pair Programmer for Everyone"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2021/08/1628479778github-copilot.png"
        alt="What is GitHub Copilot? An AI Pair Programmer for Everyone"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/08/1628479778github-copilot-300x170.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/1628479778github-copilot-1024x580.png 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/1628479778github-copilot-768x435.png 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/1628479778github-copilot.png 1200w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong>Programmers spend a lot of time writing code. Tools like code editors can help us along with syntax suggestions, snippets, debugging suggestions, and so on. But what if we had a tool that used artificial intelligence (AI) to help us write much more substantial portions of code? That&#8217;s what GitHub Copilot is all about.</strong></p>
<p>I was recently scrolling through Twitter when I saw this tweet from the official GitHub account:</p>
<blockquote class="twitter-tweet">
<p lang="en" dir="ltr">Meet GitHub Copilot &#8211; your AI pair programmer. <a href="https://t.co/eWPueAXTFt">https://t.co/eWPueAXTFt</a> <a href="https://t.co/NPua5K2vFS">pic.twitter.com/NPua5K2vFS</a></p>
<p>&mdash; GitHub (@github) <a href="https://twitter.com/github/status/1409883156333879300?ref_src=twsrc%5Etfw">June 29, 2021</a></p></blockquote>
<p><script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script></p>
<p>I was amazed by the idea of AI helping me to write code (or even do all the heavy work), so I went ahead and visited the <a href="https://copilot.github.com/">GitHub Copilot page</a>.</p>
<p>Skipping all the content, I went to the bottom of the page searching for a way to test this out. I encountered a banner that was a call to action to sign up for GitHub Copilot technical preview.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/07/1626408680copilot-singup.png" alt="GitHub copilot announcement" /></p>
<p>After some days (or weeks) waiting, I got granted access to the technical preview, and now I can let AI code for me … or can I?</p>
<p>Read more to learn what GitHub copilot is, my experience with it, and how it&#8217;ll impact you … or why maybe not.</p>
<h2 id="whatiscopilot">What is Copilot?</h2>
<p>Simply put, GitHub Copilot is an AI tool that provides you code suggestions based on comments and the context of the file you&#8217;re editing.</p>
<p>Copilot is the result of a collaboration between GitHub and <a href="https://openai.com/">OpenAI</a>, which is heavily backed by Microsoft. It&#8217;s powered by a brand new AI system named Codex, which is based on the GPT-3 model.</p>
<p><strong>GPT-3</strong> stands for the third generation of the Generative Pre-trained Transformer — a language model capable of generating sequences of text from simple prompts. Codex is derived from this model, which is capable not only of text, but also code generation in some of the most popular languages.</p>
<p>Copilot has been trained with billions of lines of code from publicly available repositories on GitHub, so your code has probably improved this AI tool in some way (we&#8217;ll get into details later).</p>
<p>Although it supports most programming languages, it currently works the best with Python, JavaScript, TypeScript, Ruby, and Go.</p>
<p>Let&#8217;s see how GitHub Copilot works, and what it&#8217;s currently capable of.</p>
<h2 id="githubcopilotinaction">GitHub Copilot in Action</h2>
<p>Copilot is incredibly easy to install. In case you have access to the technical preview, just download the VS Code extension by searching for it on the <strong>Extension</strong> tab and activating it.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/08/1628049207copilot-extension.png" alt="GitHub Copilot extension" /></p>
<p>It then requires you to log in to your GitHub account, so it can confirm you have access to the technical preview.</p>
<p>For now, the only way to use Copilot is on VS Code, and it may remain the same for some time according to <a href="https://copilot.github.com/#faq-can-i-use-it-in-another-ide-than-visual-studio-code">Copilot&#8217;s page</a>.</p>
<p>Most of the following examples will be using Python, since it&#8217;s one of the languages this AI tool is really good with.</p>
<h3 id="howcodesuggestionswork">How Code Suggestions Work</h3>
<p>GitHub Copilot generates multiple suggestions for you based on the context of the file you&#8217;re editing. Mainly, it gives you suggestions based on the comments you&#8217;ve made in the file, and the code you&#8217;ve written before.</p>
<p>Once Copilot has a code suggestion, it&#8217;ll ask you to use it. Let&#8217;s test out Copilot by creating a function that computes the average of a dataset. The only thing I&#8217;ll provide to Copilot is a comment and the name of the function.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/07/1627262304compute-average.png" alt="Compute average" /></p>
<p>As you can see, the text in gray is suggested by Copilot, and I can accept it by pressing <kbd>Tab</kbd>. But if I don&#8217;t like the first suggestion, I can walk through more suggestions with <kbd>Ctrl</kbd> + <kbd>]</kbd>, or see a bunch of solutions from a side panel with <kbd>Ctrl</kbd> + <kbd>Return</kbd>.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/07/1627263113more-solutions.png" alt="More solutions" /></p>
<p>Impressive, it isn&#8217;t? But let&#8217;s set a different challenge. Now, Copilot has to create a <code>main</code> function that lets the user enter some space-delimited numbers. It should <a href="https://www.w3schools.com/python/ref_string_split.asp">split</a> these numbers and pass the resulting list to the <code>compute_average</code> function, before printing the result.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/07/1627262293implement-average-function.png" alt="Implement compute average function" /></p>
<p>Lastly, I&#8217;m going to ask Copilot to call the main function using the execution entry point <code>__name__ == '__main__'</code>.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/07/1627262519call-main-function.png" alt="Main function" /></p>
<p>And that&#8217;s how GitHub Copilot wrote a functional Python script based only on the commands I gave to it. Of course, the code isn&#8217;t perfect. For instance, the <code>compute_average</code> function could be reduced to <code>sum(dataset) / len(dataset)</code>, but the overall result is pretty good.</p>
<h3 id="testingcopilotwithsimpleproblems">Testing Copilot with Simple Problems</h3>
<p>Let&#8217;s start with the function every developer must know: FizzBuzz. I&#8217;ll write the problem statement, name the function and let Copilot do the work</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/07/1627264363fizzbuzz.png" alt="FizzBuzz" /></p>
<p>What about a leap year function? In this case, I&#8217;ll only provide a simple <a href="https://www.geeksforgeeks.org/python-docstrings/">docstring</a>.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/07/1627266544leap-year.png" alt="Leap year" /></p>
<p>Now, a simple palindrome checker.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/08/1628047570Palindrome.jpeg" alt="Palindrome Checker" /></p>
<p>Another neat thing about Copilot is that it can also provide suggestions in comments and docstrings. In the above example, it completed the definition of a palindrome!</p>
<p>Lastly, a simple password generator. I provided a long description, and the modules I wanted to use. Surprisingly, I got exactly what I wanted.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/07/1627267313password-generator.png" alt="Password Generator" /></p>
<p>To conclude this section, Copilot is extremely good at suggesting simple, bite-sized solutions from our comments. </p>
<p>Now let&#8217;s test how this AI pair programmer performs in more complex environments.</p>
<h3 id="complexcopilotusage">Complex Copilot usage</h3>
<p>First, let&#8217;s use Copilot to solve common algorithms problems. For example, an iterative binary search implementation.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/07/1627270285binary-search.png" alt="Binary Search" /></p>
<p>Don&#8217;t worry if you don&#8217;t understand the code; at first, I didn&#8217;t either. Here comes one of the downsides of using this kind of tool. You may implement code provided by Copilot without actually understanding its meaning.</p>
<p>We&#8217;ll see more downsides later, but you should take this into account in case you have access to the technical preview.</p>
<p>Aside from this, the solution above is excellent (probably extracted from a <abbr title="Data Structures &#038; Algorithms">DSA</abbr>  GitHub repository). It&#8217;s readable code that, with few moments of analysis, I managed to understand.</p>
<p>But you can&#8217;t always rely on Copilot suggestions. Most of the time you&#8217;ll need to review the suggestions a couple of times before integrating them into your codebase.</p>
<p>We&#8217;ve tested Copilot with simple problems and algorithms. It would be a good idea to use it in real-world solutions.</p>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/github-copilot-ai-pair-programming/?utm_source=rss">What is GitHub Copilot? An AI Pair Programmer for Everyone</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/github-copilot-ai-pair-programming/?utm_source=rss</link><guid isPermaLink="false">/?p=201493</guid><category><![CDATA[Programming]]></category><category><![CDATA[Web]]></category><dc:creator><![CDATA[Daniel Diaz]]></dc:creator><pubDate>Sun, 08 Aug 2021 16:00:12 GMT</pubDate><metaDesc>Anyone for pair programming? What about getting help from AI? Learn how GitHub Copilot might be a game changer for web developers.</metaDesc></item><item><title><![CDATA[8 Things You Didn’t Know a VPN Can Do]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/vpn-things-you-didnt-know/?utm_source=rss"
              title="8 Things You Didn’t Know a VPN Can Do"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2021/08/1628089969pc.jpg"
        alt=""
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/08/1628089969pc-300x158.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/1628089969pc-1024x539.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/1628089969pc-768x404.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/1628089969pc-1536x808.jpg 1536w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/1628089969pc.jpg 1900w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong>VPNs are an essential part of protecting your online privacy, and nowadays it&#8217;s common to hear of people using them.</strong></p>
<p>Ten years ago, if you&#8217;d asked the average person about VPNs, they&#8217;d probably have had no idea what you were talking about. With the rising popularity of watching US Netflix in other countries, many less computer-savvy people have found themselves learning about VPNs to view this geo-blocked content.</p>
<p>While that&#8217;s a great use of a VPN, there are still tons of other use cases that people aren&#8217;t even aware of. The ability to change your geolocation so easily can be a total game changer when it comes to your online activities, and some of these things can improve your internet connection or even save you money.</p>
<p><em>Before we get started, if you&#8217;re new to VPNs, check out “<a href="https://www.sitepoint.com/vpns-what-they-are-why-you-need-one/">VPNs: What They Are, and Why You Need One</a>”. And if you&#8217;re wondering which VPN to choose, check out “<a href="https://www.sitepoint.com/best-vpns-for-developers/">The Best VPNs for Developers</a>”.</em></p>
<p>Let&#8217;s take a look at some of the different things you can do with a VPN that you probably didn&#8217;t know about.</p>
<h2 id="1avoidtrafficshaping">1. Avoid Traffic Shaping</h2>
<p>Have you ever felt your internet slow down for no apparent reason? There can be a few reasons for this, but one reason is that ISPs use traffic shaping to throttle down your connection speed.</p>
<p><strong>Traffic shaping</strong> is a technique used by ISPs to sort the different types of traffic on their network in order to prioritize certain types of traffic. This means that, as they sort the type of traffic coming from you, they decide if they want to slow you down.</p>
<p>Application-based shaping is the most common form of traffic shaping, and we typically experience this every day without even knowing it. With application-based shaping, ISPs will determine which types of applications deserve priority over others. </p>
<p>While many people are aware of potential throttling if they exceed data caps, a lot of people don&#8217;t know that some of their traffic is slowed down just simply based on the type of traffic it is.</p>
<p>A known favorite for ISPs to target with throttling is gaming, and most gamers aren&#8217;t even aware that their ISPs are throttling down their connection speeds! With so many people gaming on the Internet, it&#8217;s an easy target for ISPs because it can have a significant boost on the overall performance of the network if they save some bandwidth here.</p>
<p>Many apps use encryption to get around traffic shaping to improve their performance, and this is where the power of a VPN begins to shine! VPNs offer an encrypted connection that reroutes your traffic. The encrypted data circumvents the traffic shaping and makes your data harder to decipher.</p>
<p>This, in turn, prevents connection throttling from your ISP, because they can&#8217;t figure out what type of traffic is being used by your network.</p>
<p>If you care about having the best connection speeds possible when playing games online, make sure you use a high-quality VPN to use your internet connection unthrottled.</p>
<h2 id="2accessstreamingappsoninflightinternet">2. Access Streaming Apps On Inflight Internet</h2>
<p>Have you ever been on a plane and tried to use a streaming app on the inflight internet? You may have noticed that video streaming apps like Netflix and YouTube are blocked. This is because video streaming apps require a fair amount of bandwidth to be able to play the videos you want to watch.</p>
<p>Airlines end up in a dilemma because they want their customers to have access to Wi-Fi while flying, but if everyone wanted to watch Netflix or YouTube, there simply wouldn&#8217;t be enough bandwidth to go around. This is why, most of the time, there are measures put in place to block apps like Netflix and YouTube. This is inconvenient, since most people using the internet connection on a plane probably want to watch some videos to kill time.</p>
<p>Once again, VPNs are your best friend in this situation! By utilizing a VPN when connected to an inflight internet service, you&#8217;re routing your traffic around their network, and you&#8217;ll be able to watch whatever you want on the connection.</p>
<p>Ensuring you have a VPN on your device before flying can allow you to kick back and stream your favorite content while everybody else is stuck watching the inflight movie!</p>
<p>(<em>Editor&#8217;s note: some streaming services allow you to download movies and other content to your device for watching offline later, which is another option to consider!</em>)</p>
<h2 id="3viewliveeventswithdifferentcommentary">3. View Live Events with Different Commentary</h2>
<p>Commentary can really make or break the viewing experience, especially when it comes to sports.</p>
<p>Whether you&#8217;re looking for commentary in another language or feel that commentary from another country is better, a VPN will allow you to view sporting events with commentary of your choosing.</p>
<p>Typically, when you&#8217;re watching a stream of an event that&#8217;s being viewed internationally, the geolocation that you connect with will determine the commentary you receive. It makes sense that someone from Germany who&#8217;s watching a football match will want German commentary, but if you&#8217;re an English speaker who&#8217;s in Germany, you might want English commentary.</p>
<p>By running a VPN before streaming the event, you can select a server from the UK. This changes your geolocation in the eyes of the website or app, and you&#8217;ll be served up commentary from the UK. This trick is especially useful for sports fans who do a lot of traveling abroad.</p>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/vpn-things-you-didnt-know/?utm_source=rss">8 Things You Didn’t Know a VPN Can Do</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/vpn-things-you-didnt-know/?utm_source=rss</link><guid isPermaLink="false">/?p=201360</guid><category><![CDATA[Computing]]></category><category><![CDATA[Essential Tools]]></category><category><![CDATA[Web]]></category><dc:creator><![CDATA[Collin Bouchard]]></dc:creator><pubDate>Tue, 03 Aug 2021 16:00:33 GMT</pubDate><metaDesc>You probably know that a VPN offers added privacy and access to some blocked content. Learn eight other cool benefits of using a VPN.</metaDesc></item><item><title><![CDATA[How to Send Email with Django]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/django-send-email/?utm_source=rss"
              title="How to Send Email with Django"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2021/08/1628000512email.jpg"
        alt=""
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/08/1628000512email-300x158.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/1628000512email-1024x539.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/1628000512email-768x404.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/1628000512email-1536x808.jpg 1536w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/1628000512email.jpg 1900w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong>In this tutorial, we&#8217;ll walk through how to send emails through your own app using Django. We&#8217;ll cover how to configure Django SMTP connections, how to set up an app password to use with a Django project, and how to send emails through the Django shell. We&#8217;ll also look at how to set up a contact form for collecting customer emails.</strong></p>
<p>Most web applications use email to manage crucial operations, such as resetting passwords, account activation, receiving customer feedback, sending newsletters and marketing campaigns. Most of these tasks require a dedicated service like <a href="https://sendgrid.com/">SendGrid</a> or <a href="https://www.mailgun.com/">Mailgun</a>. But if you don&#8217;t expect your site to get a huge quantity of visitors, you can actually get a lot done through your personal email provider.</p>
<p>Sending emails with your personal email is a reasonable option for small or testing projects, so we&#8217;ll take that approach here to keep things simple. However, it&#8217;s not a good idea to use your personal email service for your production website. You can learn more about <a href="https://support.google.com/a/answer/166852">Gmail sending restrictions</a>, or refer to the limitations of your email provider.</p>
<p><em>Note: the full code for this tutorial is available on <a href="https://github.com/sitepoint-editors/Email-Django-app">GitHub</a>.</em></p>
<h2 id="understandingsmtp">Understanding SMTP</h2>
<p><a href="https://en.wikipedia.org/wiki/Simple_Mail_Transfer_Protocol">SMTP</a> (or the Simple Mail Transfer Protocol) is a set of rules for determining how emails are transferred from senders to recipients. SMTP servers use this protocol to send and relay outgoing emails. (Note that other protocols govern how emails are <em>recieved</em>.)</p>
<p>An SMTP server always has a unique address, and a specific port for sending messages, which in most cases is <strong>587</strong>. We&#8217;ll see how the port is relevant while sending emails with Django.</p>
<p>Since we&#8217;ll be using Gmail, the address we&#8217;ll be working with is <code>smtp.gmail.com</code>, and the port will be 587.</p>
<p>Now let&#8217;s see how we can send emails with Django.</p>
<h2 id="creatingadjangoproject">Creating a Django Project</h2>
<p>Every Django project should have a virtual environment, as we don&#8217;t want to mess up the project dependencies. To create one, run the following:</p>
<pre><code class="bash language-bash">python -m venv .venv
</code></pre>
<p><em>Note: if you&#8217;re unfamiliar with virtual environments, make sure to check our <a href="https://www.sitepoint.com/virtual-environments-python-made-easy/">Python virtual environments guide</a>.</em></p>
<p>The command above creates a virtual environment with the name <code>.venv</code>. To activate this virtual environment, you can use the following:</p>
<pre><code class="python language-python">source .venv/bin/activate
</code></pre>
<p>Since Django is a third-party package, you have to install it with pip:</p>
<pre><code class="bash language-bash">pip install django
</code></pre>
<p>This will install the latest version of Django, which you can check with <code>pip freeze</code>.</p>
<p>To create a Django project, you call the command line utility <a href="https://docs.djangoproject.com/en/dev/ref/contrib/admin/">django-admin</a>:</p>
<pre><code class="bash language-bash">django-admin startproject EmailProject
</code></pre>
<p>With the command above, you&#8217;re creating a Django project with the name <code>EmailProject</code>, but you can create the project with whatever name you want.</p>
<p>Now, enter to the project directory and run the server:</p>
<pre><code class="bash language-bash">cd EmailProject
python manage.py runserver
</code></pre>
<p>After running the Django server, visit <a href="http://localhost:8000">http://localhost:8000</a> in your browser. You&#8217;ll see an auto-generated page with the latest Django release notes.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/05/1622419490django-screen.png" alt="Django local server" /></p>
<h2 id="modifyingsettings">Modifying Settings</h2>
<p>You&#8217;ll need to modify the settings file before sending emails, so let&#8217;s locate that file with the command <code>tree</code>:</p>
<p><em>Note: for simplicity&#8217;s sake, we&#8217;ll be using only UNIX (macOS or Linux) system commands.</em></p>
<pre><code class="bash language-bash">tree
</code></pre>
<p>The <code>tree</code> command outputs the file structure of a directory. In this case, since we&#8217;re not giving it a specific directory path, we&#8217;ll get something similar to the following if we&#8217;re in the root folder of the project:</p>
<pre><code class="bash language-bash">├── EmailProject
│   ├── asgi.py
│   ├── __init__.py
│   ├── settings.py
│   ├── urls.py
│   └── wsgi.py
└── manage.py

1 directory, 6 files
</code></pre>
<p>The file we&#8217;ll be constantly modifying through this tutorial is the <a href="https://docs.djangoproject.com/en/dev/topics/settings/">settings.py</a> inside the <code>EmailProject</code> folder.</p>
<p><code>settings.py</code> holds all the project configuration you&#8217;ll need, and allows you to set custom variables. As the Django docs say, &#8220;A settings file is just a Python module with module-level variables&#8221;.</p>
<p>Let&#8217;s look at the settings required for sending an email with Django. Open the <code>EmailProject/settings.py</code> file and paste the following settings at the bottom of the file:</p>
<pre><code class="python language-python"># EmailProject/settings.py

# Bottom of the file
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = ''
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = ''
EMAIL_HOST_PASSWORD = ''
</code></pre>
<p>Let&#8217;s break down the code above by analyzing each one of these settings.</p>
<h3 id="emailbackend">Email Backend</h3>
<p>The <a href="https://docs.djangoproject.com/en/3.2/ref/settings/#email-backend">EMAIL_BACKEND</a> setting declares the backend our Django project will use to connect with the SMTP server.</p>
<p>This variable is pointing to the <code>smtp.EmailBackend</code> class that receives all the parameters needed to send an email. I strongly suggest you take a look at the class constructor directly on the <a href="https://github.com/django/django/blob/8a7ac78b706797a03d26b88eddb9d1067ed35b66/django/core/mail/backends/smtp.py#L12">Django source code</a>. You&#8217;ll be surprised by how readable this code is.</p>
<p><em>Note: although this class is the default <code>EMAIL_BACKEND</code>, it&#8217;s considered a good practice to be explicit in the Django settings.</em></p>
<p>All the other email settings will be based on the constructor of this <a href="https://docs.djangoproject.com/en/3.2/topics/email/#smtp-backend">EmailBackend class</a>.</p>
<h3 id="emailhost">Email host</h3>
<p>The <code>EMAIL_HOST</code> setting refers to the SMTP server domain you&#8217;ll be using. This depends on your email provider. Below is a table with the SMTP server host corresponding to three common providers:</p>
<table>
<thead>
<tr>
<th>Email provider</th>
<th>SMTP server host</th>
</tr>
</thead>
<tbody>
<tr>
<td>Gmail</td>
<td>smtp.gmail.com</td>
</tr>
<tr>
<td>Outlook/Hotmail</td>
<td>smtp-mail.outlook.com</td>
</tr>
<tr>
<td>Yahoo</td>
<td>smtp.mail.yahoo.com</td>
</tr>
</tbody>
</table>
<p>We&#8217;re leaving this setting blank for now since we&#8217;ll use a <code>.env</code> file later to avoid hard-coded sensitive keys or per-site configurations. You should never set credentials directly into code.</p>
<p>We&#8217;ll be using <a href="#usingdjangoenvirontohidesensitivekeys">Django Environ</a> to solve this problem.</p>
<h3 id="emailport">Email Port</h3>
<p>The <code>EMAIL_PORT</code> setting must be set to <code>587</code> because it&#8217;s the default port for most SMTP servers. This remains true for personal email providers.</p>
<p>This port is used along with TLS encryption to ensure the security of email sending.</p>
<h3 id="emailusetls">Email Use TLS</h3>
<p><a href="https://en.wikipedia.org/wiki/Transport_Layer_Security">Transport Layer Security</a> (TLS) is a security protocol used across the Web to encrypt the communication between web apps (Django) and servers (SMTP server).</p>
<p>Originally, we set the <code>EMAIL_USE_TLS</code> variable to <code>True</code>. This means Django will use Transport Layer Security to connect to the SMTP server and send emails. (It&#8217;s mandatory for personal email providers.)</p>
<h3 id="emailhostuser">Email Host User</h3>
<p>The <code>EMAIL_HOST_USER</code> setting is your personal email address. Leave it blank for now, since we&#8217;ll use <code>django-environ</code> to set up all of these credentials.</p>
<h3 id="emailhostpassword">Email Host Password</h3>
<p>The <code>EMAIL_HOST_PASSWORD</code> setting is the app password you&#8217;ll get from your email account — the process we&#8217;ll be doing right after this section.</p>
<p>Same story: leave this setting blank, as we&#8217;ll use environmental variables later.</p>
<h2 id="setupanapppasswordingmail">Set Up an App Password in Gmail</h2>
<p>To use the <code>EMAIL_HOST_PASSWORD</code> setting you&#8217;ll need to activate the <strong>less secure app access</strong> and have an app password from your personal email address.</p>
<p>If you don&#8217;t activate the <strong>less secure app access</strong>, you&#8217;ll probably get a <code>SMTPAuthenticationError</code>, because Django has no way to comply with Google security protocols.</p>
<p>You may opt to use your normal password, but it would be even <em>more risky</em> than using an app password. My advice is to create a new Gmail account or to use a &#8220;testing&#8221; email address.</p>
<p>Taking this into account, you can get a <a href="https://support.google.com/accounts/answer/185833?hl=en">Gmail app password</a> with the steps below. Note that if you&#8217;re using an existing account and have enabled 2-step verification, you can skip steps 2 and 3:</p>
<ol>
<li>Create or Login into a Gmail account</li>
<li>Go to <a href="https://myaccount.google.com/lesssecureapps">myaccount.google.com/lesssecureapps</a> and turn on the less secure apps option.<br />
<img src="https://uploads.sitepoint.com/wp-content/uploads/2021/06/1624766037turning-on-less-secure-app-access.png" alt="Less secure apps" /></li>
<li>Enable <a href="https://myaccount.google.com/signinoptions/two-step-verification/enroll-welcome">two-factor authentication</a>, as it&#8217;s required to get an app password.<br />
<img src="https://uploads.sitepoint.com/wp-content/uploads/2021/06/16247660342-factor-gmail.png" alt="2-factor-verification" /></li>
<li>Now you have two-factor authentication enabled, it&#8217;s time to get an app password. You can do this by going to the <a href="https://myaccount.google.com/security">security section</a> of your google account, scrolling down to the Signing in to Google section, and clicking on <strong>App passwords</strong>.<br />
<img src="https://uploads.sitepoint.com/wp-content/uploads/2021/06/1624766032less-secure-app.png" alt="App password" /></li>
</ol>
<p>You&#8217;ll need to re-prompt your password (account password), before being redirected to the App passwords page. </p>
<p>Once you&#8217;re in, click on <strong>select app</strong>, where you&#8217;ll choose a custom name for that app password — such as &#8220;Django Send Email&#8221; — then click on <strong>GENERATE</strong>.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/06/1624769990app-password-generate.png" alt="App password generation" /></p>
<p>A new window will show up with a sixteen-character password. Copy it, because we&#8217;ll need it to configure our Django project.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/06/1624769988generated-password.png" alt="Generated app password" /></p>
<p>If you&#8217;re using other email providers, make sure to read the following guides:</p>
<ul>
<li><a href="https://help.yahoo.com/kb/generate-separate-password-sln15241.html">Yahoo app password</a></li>
<li><a href="https://docs.microsoft.com/en-us/azure/active-directory/user-help/multi-factor-authentication-end-user-app-passwords">Outlook or Hotmail app password</a></li>
</ul>
<h2 id="usingdjangoenvirontohidesensitivekeys">Using Django Environ to Hide Sensitive Keys</h2>
<p>Even if you&#8217;re just sending emails in development, you shouldn&#8217;t write passwords directly into source code. This becomes even more important when using a <a href="https://www.sitepoint.com/git-for-beginners/">version control system</a> along with GitHub to host your project. <em>You don&#8217;t want people to access your data.</em></p>
<p>Let&#8217;s see how we can prevent this by using <a href="https://pypi.org/project/django-environ/">Django-environ</a>.</p>
<p>Create a <code>.env</code> file inside the <code>EmailProject</code> directory (where the <code>settings.py</code> file is located) with the command below:</p>
<pre><code class="bash language-bash">cd EmailProject/
ls

settings.py # The settings file must be here

touch .env
</code></pre>
<p>Now, open that <code>.env</code> file and enter the following key–value pairs:</p>
<pre><code class="python language-python">EMAIL_HOST=smtp.gmail.com
EMAIL_HOST_USER=YourEmail@address
EMAIL_HOST_PASSWORD=YourAppPassword
RECIPIENT_ADDRESS=TheRecieverOfTheMails
</code></pre>
<p>Breaking down the contents of this file:</p>
<ul>
<li><code>EMAIL_HOST</code>: your email provider SMTP server address. See the email host table above for quick guidance. In this case, I&#8217;m using <code>smtp.gmail.com</code>, the Gmail SMTP address.</li>
<li><code>EMAIL_HOST_USER</code>: your email address.</li>
<li><code>EMAIL_HOST_PASSWORD</code>: the app password you just generated. Have in mind it doesn&#8217;t include any spaces.</li>
<li><code>RECIPIENT_ADDRESS</code>: the email address in which you&#8217;ll receive the messages. This is a custom setting that we&#8217;ll create later to send all the emails to the same recipient.</li>
</ul>
<p>To make use of these environmental variables, we&#8217;ll need to install <code>Django-environ</code>:</p>
<pre><code class="bash language-bash">pip install django-environ
</code></pre>
<p><em>Note: make sure your virtual environment is activated.</em></p>
<p>Now, open the <code>settings.py</code> located at the <code>EmailProject</code> directory and use the code below:</p>
<pre><code class="python language-python"># EmailProject/settings.py
# This should be at the start of the file
import environ

env = environ.Env()
environ.Env.read_env()

# Previous settings ...
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = env('EMAIL_HOST')
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = env('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = env('EMAIL_HOST_PASSWORD')

# Custom setting. To email
RECIPIENT_ADDRESS = env('RECIPIENT_ADDRESS')
</code></pre>
<p>First, we&#8217;re importing the <code>environ</code> package at the top of the settings file. Remember that all imports should be at the start.</p>
<p>Then we create an <code>env</code> variable which will contain all the key–value pairs available on the <code>.env</code>.</p>
<p>The <code>env('KEY')</code> statement means we&#8217;re looking up the value of that key. Make sure you have set up your <code>.env</code> file before proceeding, because you&#8217;ll get a  Django <code>ImproperlyConfigured</code> error in case some environmental variable wasn&#8217;t set.</p>
<p>Note that <code>RECIPIENT_ADDRESS</code> is a custom setting that we&#8217;ll use to send the emails to an address we can access.</p>
<p><strong>Don&#8217;t forget</strong> to include the <code>.env</code> file in your <a href="https://git-scm.com/docs/gitignore">.gitignore</a> in case you&#8217;re using Git and GitHub. You can do this just by opening it and adding the following line:</p>
<pre><code class="git language-git">.env
</code></pre>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/django-send-email/?utm_source=rss">How to Send Email with Django</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/django-send-email/?utm_source=rss</link><guid isPermaLink="false">/?p=201371</guid><category><![CDATA[Django]]></category><category><![CDATA[Web]]></category><dc:creator><![CDATA[Daniel Diaz]]></dc:creator><pubDate>Mon, 02 Aug 2021 16:00:10 GMT</pubDate><metaDesc>Do you need to send emails through your own Django app? Learn how to configure Django SMTP, set up passwords, send emails, and more.</metaDesc></item><item><title><![CDATA[Using Automation to Increase Web Traffic]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/increase-web-traffic-using-automation/?utm_source=rss"
              title="Using Automation to Increase Web Traffic"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2021/08/1627884588automating-web-traffic.png"
        alt="Using Automation to Increase Web Traffic"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/08/1627884588automating-web-traffic-300x170.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/1627884588automating-web-traffic-1024x580.png 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/1627884588automating-web-traffic-768x435.png 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/1627884588automating-web-traffic.png 1200w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong>One of the biggest challenges entrepreneurs face is getting their business in front of potential customers. Marketing attracts leads, leads become customers, and customers provide profit. Unfortunately, outreach, networking, and search engine optimization all play a role in marketing — and it doesn’t take long to realize that you’re looking at a sizable workload on top of everything else you’re doing to grow your business.</strong> </p>
<p>Luckily, thanks to new technology, you can now automate parts of the process to help decrease workload and drive real efficiency. In this article, we’ll go over several ways you can use automation to increase web traffic and improve your workflows.</p>
<h2 id="sharenewcontentonsocialmedia">Share New Content on Social Media</h2>
<p>With <a href="https://www.statista.com/statistics/278414/number-of-worldwide-social-network-users/">3.6 billion users</a> worldwide, social media platforms have experienced incredible growth over the years, and they show no signs of slowing down.</p>
<p>While they were first used for entertainment and socialization, they have now become one of the primary marketing channels. Predictably, <a href="https://www.statista.com/statistics/203513/usage-trands-of-social-media-platforms-in-marketing/">92% of marketers</a> use social media as part of their growth strategy.</p>
<p>A well developed and structured social media marketing plan can help you:</p>
<ul>
<li>generate web traffic from backlinks</li>
<li>build trust with your audience</li>
<li>increase brand awareness</li>
<li>reach a wider audience</li>
<li>grow your online following</li>
</ul>
<p>Each social media platform will have a different demographic, so you should tailor your content for the platforms you want to focus on. For instance, your awesome 20-second video might be a hit on TikTok but a complete fail on Instagram and Facebook.  </p>
<p>Posting manually on each platform is extremely time-consuming, to the point where it might not even be worth the <a href="https://www.sitepoint.com/really-measure-roi-social-efforts/">return on investment</a>. Luckily, there are several tools you can use to automate content publishing.</p>
<h3 id="integratecontentcalwithzapier">Integrate ContentCal with Zapier</h3>
<p><a href="https://www.contentcal.io/">ContentCal</a> is a marketing planning tool that helps you plan and create content. When you pair it with a tool like Zapier — which helps you automate repetitive tasks between two or more apps — you can automatically post content from ContentCal to social platforms.</p>
<p>For example, after you’ve set up ContentCal with your desired social media platforms, once you add a new post to your schedule, this post could generate Instagram posts, Pinterest pins, and Facebook updates automatically. All of these can be unique to each platform without any extra work on your part.</p>
<p>However, an integration with ContentCal isn’t limited to publishing content and pushing it out to different places. You can also bring content from outside into ContentCal. For example, if your team uses Slack internally and has been discussing some new ideas, you can easily pull those into ContentCal. </p>
<p>Connecting ContentCal with Zapier is a fairly simple process. Once you’ve created an account with both of these services, you can check out Zapier’s list of pre-made <a href="https://zapier.com/apps/contentcal/integrations">ContentCal integrations</a> and click “Try it” to begin testing.</p>
<h2 id="senddatatogooglesheets">Send Data to Google Sheets</h2>
<p>Google Sheets is a powerful free tool that allows you to organize and manipulate big data sets, create semi-automated <a href="https://www.sitepoint.com/beginners-guide-to-wordpress-seo/">SEO</a> workflows, and much more. </p>
<p>A great way Google Sheets can improve your SEO workflow is by allowing you to import keyword and search volume data from your SEO tool so you can manipulate it more easily. </p>
<p>Plus, exporting data from SEO tools is also great for startups with small budgets that don’t want another monthly expense. For example, you can sign up for a free trial or pay for only one month of use and export all the data you need. </p>
<p>However, without the right formulas ready, you could spend endless hours sorting, merging, splitting, adding, deleting, and searching for data. One of the most basic, yet useful formulas is the <code>IF</code> function.</p>
<h3 id="usingtheiffunction">Using the IF function</h3>
<p>The <code>IF</code> function in Google Sheets can be used when you want to check if a certain condition is true or false for a list of data in your spreadsheet.</p>
<p>The syntax looks like this: </p>
<pre><code class="bash language-bash">IF(condition, value_if_true, value_if_false)
</code></pre>
<p>The <code>condition</code> is what you’re testing to be true or false. If it’s true, <code>value_if_true</code> is what will be displayed. If it’s false, <code>value_if_false</code> will be displayed instead.</p>
<p>Let’s say you’ve imported a list of keywords and their search volume to Google Sheets but only want to work with keywords that can bring 500+ visitors per month.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/06/1624994391Keyword-Analysis-Google-Sheets-Example.jpg" alt="Example of a list on keywords on Google Sheets" /></p>
<p>You can set the <code>IF</code> function to return <code>YES</code> for keywords that could bring 500+ visitors per month and <code>NO</code> for the rest:</p>
<pre><code class="bash language-bash">=IF(B2&gt;500,"YES","NO")
</code></pre>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/06/1624994396Keyword-Google-Sheets-Automation-IF-Function.jpg" alt="Keyword Google Sheets automation IF function" /></p>
<h3 id="usingarrayformula">Using ARRAYFORMULA</h3>
<p>If you’re working with a large dataset, it will be a hassle to drag formulas down across thousands of cells. This is where ARRAYFORMULA comes in handy.</p>
<p>The syntax looks like this:</p>
<pre><code class="bash language-bash">=ARRAYFORMULA(array_formula)
</code></pre>
<p>This allows you to type in your formula once and then apply it to an entire row or column. Simply replace <code>array_formula</code> with the formula you’d like to replicate. In our case, it would be the <code>IF</code> function formula. Just remember to include your first and last cells in the formula. </p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/06/1624994394Keyword-Google-Sheets-Automation-ARRAYFORMULA.jpg" alt="ARRAYFORMULA example" /></p>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/increase-web-traffic-using-automation/?utm_source=rss">Using Automation to Increase Web Traffic</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/increase-web-traffic-using-automation/?utm_source=rss</link><guid isPermaLink="false">/?p=201339</guid><category><![CDATA[Business]]></category><category><![CDATA[Content Marketing]]></category><category><![CDATA[Entrepreneur]]></category><category><![CDATA[Productivity]]></category><category><![CDATA[Social Media]]></category><category><![CDATA[Web]]></category><dc:creator><![CDATA[Christian Coulson]]></dc:creator><pubDate>Sun, 01 Aug 2021 16:00:27 GMT</pubDate><metaDesc>You need more web traffic, but can't spare the time needed. Learn how to automate parts of your strategy to increase web traffic.</metaDesc></item><item><title><![CDATA[4 Trends for Modernizing An Online Booking System in 2021]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/online-booking-system-trends/?utm_source=rss"
              title="4 Trends for Modernizing An Online Booking System in 2021"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2021/08/1627876639online-booking.png"
        alt="4 Trends for Modernizing An Online Booking System in 2021"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/08/1627876639online-booking-300x170.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/1627876639online-booking-1024x579.png 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/1627876639online-booking-768x435.png 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/1627876639online-booking.png 1200w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><em>This sponsored article was created by our content partner, BAW Media. Thank you for supporting the partners who make SitePoint possible.</em></p>
<p><strong>Consumers expect modern, intuitive, and convenient solutions to everyday problems and situations. Like making appointments, booking reservations, and signing up for events.</strong> </p>
<p>As antiquated solutions like phone-based reservation systems and basic contact forms grow more and more out of favor, what exactly do consumers want in 2021? In other words, what should the online booking systems that you build for your clients’ companies look like? </p>
<p>Today, we’re going to look at four modern booking trends and how you can use <a href="https://trafft.com/?utm_source=sitepoint.com&#038;utm_medium=article&#038;utm_campaign=july21">Trafft</a> to build higher-converting online booking systems that exceed consumers’ — and your clients’ — expectations. </p>
<h2 id="4moderntrendsinonlinebookingsystems">4 Modern Trends in Online Booking Systems</h2>
<p>As of writing this, Millennials are the generation with the greatest spending power. Generation Z isn’t too far behind. </p>
<p>Why does this matter? Well, if a brand can’t keep up in terms of technological preferences and demands, they’re bound to lose favor with these powerful consumers. And considering that the majority of Millennials and Gen Zers are attached to their screens for a good part of the day, online booking systems need to be delivered in a manner that makes the most sense for them. </p>
<p>In order to keep up with modern demand, there are four trends you can use to build better online booking systems that convert well. </p>
<h3 id="trend1smartefficientbookingprocesses">Trend 1: Smart, efficient booking processes</h3>
<p>Booking systems have undergone some much-needed changes over the last decade. That’s because older booking systems were costly to manage and support. Plus, there was just too much friction within the user experience. </p>
<p>Customers got stuck on hold. Or had to wait for someone to help them coordinate their booking. Or their appointment got misplaced due to a clerical error. It was frustrating for customers and time-consuming for businesses. </p>
<p>A <a href="https://trafft.com/?utm_source=sitepoint.com&#038;utm_medium=article&#038;utm_campaign=july21">Trafft</a> booking system removes these complexities from the booking experience. </p>
<p>For starters, customers want to know what all their options are: </p>
<ul>
<li>locations</li>
<li>providers</li>
<li>services or events</li>
<li>days and times</li>
<li>cost</li>
<li>payment type</li>
<li>and more</li>
</ul>
<p>All of this can be programmed into your online booking system with <a href="https://trafft.com/?utm_source=sitepoint.com&#038;utm_medium=article&#038;utm_campaign=july21">Trafft</a> so the customer can work out the logistics of their booking on their own and in a matter of minutes. </p>
<p><a href="https://trafft.com/?utm_source=sitepoint.com&#038;utm_medium=article&#038;utm_campaign=july21"><img src="https://editor.sitepoint.com/wp-content/uploads/2021/08/16278677301.gif" alt="using Trafft" /></a></p>
<p><!-- <img loading="lazy" src="https://editor.sitepoint.com/wp-content/uploads/2021/08/16278677301.gif" alt="using Trafft" width="1280" height="720" class="alignnone size-full wp-image-201312" /> --></p>
<p>What’s more, you can set rules behind the scenes related to things like: </p>
<ul>
<li>business days, hours, holidays, and so on</li>
<li>appointment buffers</li>
<li>event criteria and limits</li>
<li>time zones</li>
<li>employee availability</li>
<li>pre-payments</li>
</ul>
<p>This helps your clients avoid those embarrassing calls where they have to ask customers to reschedule because the booking they made isn’t actually available. </p>
<p>What’s more, once the booking is made online, the appointment guidelines you define take care of the rest. Bookings go on the customer’s and employee’s calendars. Reminder emails and SMSs go out. Location space is scheduled. And so on. </p>
<p>It’s super efficient and less prone to errors and frustration than the systems of the past.</p>
<h3 id="trend2bookingformsdesignedforshorterattentionspans">Trend 2: Booking forms designed for shorter attention spans</h3>
<p><a href="https://www.sciencedaily.com/releases/2019/04/190415081959.htm">A 2019 study out of the Technical University of Denmark</a> found that our collective attention span is shrinking year by year. This is due to the abundance of information available online.</p>
<p>So, while it’s important for online booking forms to give users options, it needs to be presented in a simplified manner. If it looks complicated or time-consuming, you’re bound to see more drop-offs than bookings. </p>
<p>Just keep in mind that minimal is not the same thing as sparse. </p>
<p>Tech-savvy consumers might feel comfortable and confident with a fast-tracked booking process, but others might not be. If the brevity of your form compromises their trust in the process or in the credibility of the company, that can be just as problematic. So, be careful not to cut corners. </p>
<p>That’s why it’s important to build a form that asks for the minimum while still capturing all of the information you need from the user. At the same time, you should educate them or provide additional context when it makes sense to do so. </p>
<p>With <a href="https://trafft.com/?utm_source=sitepoint.com&#038;utm_medium=article&#038;utm_campaign=july21">Trafft</a>, your booking process will get broken up into small, easily digestible steps. </p>
<p><a href="https://trafft.com/?utm_source=sitepoint.com&#038;utm_medium=article&#038;utm_campaign=july21"><img src="https://editor.sitepoint.com/wp-content/uploads/2021/08/16278744742.png" alt="small steps" /></a></p>
<p><!-- <img loading="lazy" src="https://editor.sitepoint.com/wp-content/uploads/2021/08/16278744742.png" alt="small steps" width="1440" height="789" class="alignnone size-full wp-image-201318" srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/08/16278744742.png 1440w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/16278744742-300x164.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/16278744742-1024x561.png 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/16278744742-768x421.png 768w" sizes="(max-width: 1440px) 100vw, 1440px" /> --></p>
<p>This will make it easier for users to complete the form, as they’re asked to only complete one small task at a time. </p>
<p>You can change the order of steps based on what makes the most sense for your customers. A/B testing will help you find the most logical and ideal order of steps if you’re unsure. </p>
<p>Inputting information into the form is simplified as well. Whether the form calls for customer to click on and select a calendar date and time, or to add their contact info, the steps needed to complete an action are quick and easy to execute. </p>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/online-booking-system-trends/?utm_source=rss">4 Trends for Modernizing An Online Booking System in 2021</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/online-booking-system-trends/?utm_source=rss</link><guid isPermaLink="false">/?p=201310</guid><category><![CDATA[Business]]></category><category><![CDATA[Entrepreneur]]></category><category><![CDATA[Productivity]]></category><category><![CDATA[Web]]></category><dc:creator><![CDATA[SitePoint Sponsors]]></dc:creator><pubDate>Sun, 01 Aug 2021 15:00:37 GMT</pubDate><metaDesc>Does your client’s online booking platform need a major refresh? Check out the latest trends in online booking and how Trafft can help you get them up to speed.</metaDesc></item><item><title><![CDATA[The Best Markdown Editors for iOS]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/best-ios-markdown-editors/?utm_source=rss"
              title="The Best Markdown Editors for iOS"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2021/07/1627435258ios-markdown-editors.png"
        alt="The Best Markdown Editors for iOS"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/07/1627435258ios-markdown-editors-300x170.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/07/1627435258ios-markdown-editors.png 600w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong>Markdown is a fast and efficient way to write for the Web. It uses easy-to-read markup and plain text files. It comes with a low learning curve, no lock-in, and fits well with the simplicity of iOS and iPadOS.</strong></p>
<p>The syntax was created by <a href="https://daringfireball.net/projects/markdown/">John Gruber</a> in 2004 and offers <a href="https://www.sitepoint.com/writers-bloggers-can-make-markdown-wordpress/">a number of benefits to writers and bloggers</a>. To use it, you just need a plain-text editor, but an app designed for writing in Markdown offers significant benefits. These may include syntax highlighting, a preview pane, export and publishing features, a document library, and distraction-free writing.</p>
<p>There are plenty of Markdown editors for <a href="https://www.sitepoint.com/the-best-markdown-editors-for-mac/">macOS</a>, <a href="https://www.sitepoint.com/best-markdown-editors-windows/">Windows</a>, and <a href="https://www.sitepoint.com/the-best-markdown-editor-for-linux/">Linux</a>. There’s just as much variety on Apple’s mobile platforms.</p>
<p>Let’s explore your options.</p>
<h2 id="7filebasedmarkdowneditors">7 File-based Markdown Editors</h2>
<p>Here are seven applications that let you work with one Markdown file at a time.</p>
<h3 id="1byword">1. Byword</h3>
<ul>
<li>Cost: $5.99</li>
<li>Other Platforms: macOS</li>
</ul>
<blockquote>
<p>Markdown app for writing in plain text efficiently.</p>
</blockquote>
<p><a href="https://bywordapp.com/">Byword</a> strikes a good balance between functionality and simplicity. It’s a minimalistic app that offers just enough features that they don’t become a distraction. Subtle syntax highlighting is offered, as are keyboard shortcuts and autocomplete.</p>
<p>It’s attractive, inexpensive, and frictionless. It’s popular with those who value simplicity when writing.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/06/1624530653markdownios-byword.jpg" alt="Scrrenshot of Byword" /></p>
<h3 id="2iawriter">2. iA Writer</h3>
<ul>
<li>Cost: $29.99</li>
<li>Other Platforms: macOS, Windows, Android</li>
</ul>
<blockquote>
<p>Get focused. iA Writer offers a unique writing experience that lets you concentrate and clarify your message.</p>
</blockquote>
<p><a href="https://ia.net/writer">iA Writer</a> is a distraction-free Markdown editor that places the focus on your content. It offers more features than Byword, and a little less simplicity.</p>
<p>Focus mode fades surrounding lines of text to emphasize what you&#8217;re typing. A light gray background, monospaced font, and blue cursor are used.</p>
<p>Unlike Byword, iA Writer supports images, tables, and content blocks. A number of popular cloud storage solutions are supported.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/06/1624530658markdownios-iawriter.jpg" alt="Screenshot of iA Writer" /></p>
<h3 id="3drafts5">3. Drafts 5</h3>
<ul>
<li>Cost: free download, subscription from $2.99/month</li>
<li>Other Platforms: macOS</li>
</ul>
<blockquote>
<p>Where text starts.</p>
</blockquote>
<p><a href="https://getdrafts.com/">Drafts 5</a> is the ultimate capture tool: an inbox for text and Markdown content that can be routed to other apps through powerful actions. Each entry can be tagged, flagged, and archived as needed.</p>
<p>Basic Markdown syntax highlighting is offered, as is a preview pane. It’s a highly customizable way to compose in Markdown.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/06/1624530661markdownios-drafts5.jpg" alt="Screenshot of Drafts 5" /></p>
<h3 id="4editorial">4. Editorial</h3>
<ul>
<li>Cost: $4.99</li>
<li>Other Platforms: n/a</li>
</ul>
<blockquote>
<p>Desktop-class plain text productivity on iOS.</p>
</blockquote>
<p><a href="http://omz-software.com/editorial/">Editorial</a> is a powerful text editor for iOS that offers excellent Markdown support. It also supports Fountain, a markup language for screenwriters, and TaskPaper’s format for plain text to-do lists.</p>
<p>Like Drafts, it&#8217;s highly configurable and offers strong automation features. Document templates, workflow automation, smart snippets, and Python scripting let you make the app your own. Basic syntax highlighting is available, and you can preview your document by swiping to the left.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/06/1624530665markdownios-editorial.jpg" alt="Screenshot of Editorial" /></p>
<h3 id="5taio">5. Taio</h3>
<ul>
<li>Cost: free download, Pro from $1.49/month</li>
<li>Other Platforms: n/a</li>
</ul>
<blockquote>
<p>Text all in One.</p>
</blockquote>
<p><a href="https://taio.app/">Taio</a> is another Markdown editor that lets you create powerful workflows. Its Actions let you access both the clipboard and editor to expand what the app is capable of. It also offers full support for the expanded syntax of both CommonMark and GitHub Flavored Markdown.</p>
<p>The app supports multiple tabs, templates, diagrams, app integrations, and iCloud sync. A macOS version is in the works.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/06/1624530668markdownios-taio.jpg" alt="Screenshot of Taio" /></p>
<h3 id="6gtw">6. GTW</h3>
<ul>
<li>Cost: $5.99</li>
<li>Other Platforms: n/a</li>
</ul>
<blockquote>
<p>Markdown and plain text editor for iOS.</p>
</blockquote>
<p><a href="https://gtw.app/">GTW</a>  (Gogo’s Type Writer) is a text and Markdown editor that’s optimized for speed. It supports local files as well as Dropbox, OneDrive, Google Drive, FTP, and SFTP/SSH.</p>
<p>It offers syntax highlighting, a Markdown preview pane, snippets, themes, and the ability to open entire folders from the Files app. Search and replace supports Regex and you can edit files directly on your server.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/06/1624530672markdownios-gtw.jpg" alt="Screenshot of GTW" /></p>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/best-ios-markdown-editors/?utm_source=rss">The Best Markdown Editors for iOS</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/best-ios-markdown-editors/?utm_source=rss</link><guid isPermaLink="false">/?p=200404</guid><category><![CDATA[Web]]></category><dc:creator><![CDATA[Adrian Try]]></dc:creator><pubDate>Tue, 27 Jul 2021 22:00:17 GMT</pubDate><metaDesc>Are you looking for a nice way to write in Markdown on your iPhone or iPad? Check out our rundown of the best Markdown editors for iOS.</metaDesc></item><item><title><![CDATA[A Beginner’s Guide to Lighthouse]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/lighthouse-beginners-guide/?utm_source=rss"
              title="A Beginner’s Guide to Lighthouse"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2021/07/1627366867lighthouse-web-performance.png"
        alt="A Beginner's Guide to Lighthouse"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/07/1627366867lighthouse-web-performance-300x170.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/07/1627366867lighthouse-web-performance.png 600w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong>You&#8217;ve built a website, but how well does it perform for your end users? It&#8217;s crucial to ask this question, but how can you get answers? One excellent option is to use <a href="https://developers.google.com/web/tools/lighthouse">Lighthouse</a>.</strong></p>
<p>Lighthouse allows you to easily and automatically analyze a web page&#8217;s performance and quality. It provides tools that let you understand how to improve your web page&#8217;s performance, accessibility, SEO and more. Using these scores to enhance your website will ultimately lead to attracting more users and increasing your website&#8217;s rank in search engines.</p>
<p>In this article, we&#8217;ll explore the importance of website performance, which is the highlight of Lighthouse&#8217;s scoring. We&#8217;ll also look at why we should use Lighthouse; how to use Lighthouse, both via Chrome and via the Lighthouse CLI; and the various audits Lighthouse can perform to score your web page, and why they&#8217;re important. We&#8217;ll also cover how some common performance and other website issues can be resolved.</p>
<p>We&#8217;ll also look at how to use WebPageTest, another powerful tool for assessing site performance.</p>
<h2 id="whyperformanceisimportant">Why Performance Is Important</h2>
<p>If you look at some of the world&#8217;s best websites, they all have one thing in common: they provide their users with a superior experience. There are many reasons for this, but one of the most important ones is performance. Users love a fast website. The longer they have to wait for a website to load, the more likely they&#8217;ll leave the website in search of a better one that allows them to do what they need to do without the wait.</p>
<p>Improving your website&#8217;s performance can lead to a higher SEO ranking (as we&#8217;ll see in more details later in the article), and a boost in click-through and conversion rates. So, if you want more sales, sign-ups, or traffic, you&#8217;ll first have to ensure that your website&#8217;s performance is up to scratch.</p>
<h2 id="whyuselighthouse">Why Use Lighthouse</h2>
<p><a href="https://developers.google.com/web/tools/lighthouse">Lighthouse</a> is an open-source tool created by Google. As Google is a reputable company that&#8217;s trusted by many, it makes the result more reliable than other tools. Furthermore, as Google&#8217;s search engine is the leading search engine for <a href="https://www.statista.com/statistics/216573/worldwide-market-share-of-search-engines/">the past decade</a>, appearing higher on their search engine will most likely result in more traffic. So, getting a higher score on their performance audit tool can potentially raise the ranking of your website in their search results.</p>
<p>But other than the fact that Lighthouse was created by Google, what makes it a good tool is its detailed results that have the user&#8217;s best interest at heart. Lighthouse provides many results concerning how long it takes the page to load, if the page (and ultimately the website) is secure, if the page&#8217;s accessibility practices and implementations allow for inclusivity of all users, and more.</p>
<h2 id="howtouselighthouse">How to Use Lighthouse</h2>
<p>In this section, we&#8217;ll first go through the easiest way to use Lighthouse to analyze and check the score of a web page, which is done directly through Chrome. Then, we&#8217;ll check other Lighthouse tools that might provide even more detailed results or options.</p>
<h3 id="usingchrome">Using Chrome</h3>
<p>Using Lighthouse through Chrome is the easiest method to measure your website&#8217;s performance. First, open any web page that you&#8217;d like to measure. To demonstrate, I&#8217;ll be using some results from an audit run on <a href="https://blog.shahednasser.com/">my website</a> and on <a href="https://github.com/">GitHub</a> for us to see a variety of sample results. </p>
<p>Next, open the devtools either by clicking <kbd>shift</kbd> + <kbd>control</kbd> + <kbd>J</kbd> or <kbd>F12</kbd> on Windows/Linux, or <kbd>option</kbd> + <kbd>command</kbd> + <kbd>J</kbd> or <kbd>fn</kbd> + <kbd>F12</kbd> on macOS.</p>
<p>After that, click on the <strong>Lighthouse</strong> tab.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/06/1625062803Screen-Shot-2021-06-28-at-5.49.51-PM.png" alt="Click on Lighthouse" /></p>
<p>As you can see, you can choose which categories you want the audit to include. These categories are Performance, Progressive Web App, Best Practices, Accessibility, and SEO. You can also choose whether you want the audit to run on Mobile or Desktop.</p>
<p>In this section, we&#8217;ll perform four audits which are Performance, Best Practices, Accessibility, and SEO, and we&#8217;ll run them on Desktop. However, to achieve optimal results, it&#8217;s important to test your web page under different conditions — such as on Mobile and at different internet speeds.</p>
<p>So, on the web page you want to measure, go ahead and choose the four categories mentioned and Desktop, then click <strong>Generate Report</strong>.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/06/1625062883Screen-Shot-2021-06-28-at-6.26.08-PM.png" alt="Click Generate Report" /></p>
<p>This can take a few minutes, and you&#8217;ll see that your browser&#8217;s window might grow and shrink through the process. This is because the report entails different screen sizes and conditions for your web page. Once it&#8217;s done, the Lighthouse tab will include the result for the audit, which will include the score for each of Performance, Best Practices, Accessibility, and SEO.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/06/1625063048Screen-Shot-2021-06-29-at-4.51.47-PM.png" alt="Lighthouse Score" /></p>
<p>It should be noted that sometimes the results can be different based on your internet connection. Also, sometimes Lighthouse can show a notice that some extensions might have affected the result. If so, it&#8217;s probably best to run the test in an Incognito Window.</p>
<p>When Lighthouse has finished running, you can click on any of the categories to see a more detailed report.</p>
<h4 id="performance">Performance</h4>
<p>Performance focuses on how to make your website load faster. We&#8217;ll go over the six important metrics for Performance, what they each entail and how to achieve a better score in each of them.</p>
<h5 id="firstcontentfulpaintfcp">First Contentful Paint (FCP)</h5>
<p>The <strong>first contentful paint</strong> (FCP) is measured from the moment the user navigates to the web page. It measures how long it takes for the first piece of DOM content to load. The DOM content can include images, non-white canvas elements, and SVG elements.</p>
<p>FCP is measured in seconds. In order for your web page to have a &#8220;Green&#8221; score — which means a fast FCP — the first piece of DOM content should take at most 1.8 seconds to load. Once it goes above that, it can go to either moderate or slow.</p>
<p>The reason FCP is important goes back to understanding the user. As mentioned before, users are impatient and will leave your website if it takes too long to load. A fast FCP keeps users engaged. It can be something as simple as a loading screen that tells the user to hang in tight because the web page is going to load soon.</p>
<p>One factor that can affect your website&#8217;s FCP time is fonts. Fonts can take a long time to load, sometimes making the text invisible until it loads. A good way to solve this is by using the CSS property <code>font-display: swap;</code> when declaring your font using <code>@font-face</code>. For example:</p>
<pre><code class="css language-css">@font-face {
    font-family: 'MyFont';
    font-style: normal;
    font-weight: 400; 
    src: url(MyFont.woff);
    font-display: swap;
}
</code></pre>
<p>If you&#8217;re using Google Fonts, this property is now enabled by default. This property allows the text to appear using the user&#8217;s system default font until the website&#8217;s font is loaded.</p>
<p>Another factor that affects your FCP is render-blocking resources. These are usually JavaScript or CSS files that are loaded synchronously in the <code>&lt;head&gt;</code> and take a long time to load. These resources will force the rest of the page to wait until they&#8217;re loaded before the page can fully load, thus affecting the FCP of DOM content.</p>
<p>Here are some ways you can resolve this:</p>
<ul>
<li>
<p><strong>Add the <code>defer</code> or <code>async</code> attributes</strong> to your <code>&lt;script&gt;</code> tags. For example:</p>
<pre><code class="markup language-markup">&lt;script src="myScript.js" defer&gt;&lt;/script&gt;
</code></pre>
</li>
<li>
<p><strong>Minify the JavaScript and CSS files</strong> being used on the page, reducing its size so that loading these assets doesn&#8217;t take as long. This depends on what framework or programming language you&#8217;re using, but almost all of them have a way of doing that. You can check out <a href="https://web.dev/unminified-javascript/">simple tips on how to minify JavaScript</a> when using various popular frameworks on the web.dev site.</p>
</li>
<li>
<p><strong>Remove unused CSS</strong> in your web page. As the amount of CSS grows in size, reducing your CSS files by removing unnecessary rules and properties that aren&#8217;t being used on a page can make it load faster. Again, there are different ways to do that based on the <a href="https://web.dev/unused-css-rules/">framework</a> you&#8217;re using. However, you can use Chrome&#8217;s developer tools to view unused CSS in the <strong>Coverage</strong> tab. Using frameworks like <a href="http://tailwindcss.com">Tailwind CSS</a> — which use the tree-shaking mechanism to reduce your CSS styles instead of inflating your website with many styles you&#8217;ll probably never use — can help in making your website load faster.</p>
</li>
<li>
<p><strong>Reduce the server&#8217;s response time</strong>. This can be done either by performing the logic required for the page to load using asynchronous requests, caching the data the server is frequently using, or optimizing your server code to get the required result faster.</p>
</li>
</ul>
<p>When you perform the Performance audit, if your web page has an issue with the fonts, the content-blocking resources, unused CSS, or other of the issues mentioned above, Lighthouse will highlight each file causing the issue and give tips on how it can be improved. For example, if a font is blocking the text&#8217;s visibility, Lighthouse will show you the font file that&#8217;s causing the issue and how resolving the issue will make the page&#8217;s FCP time faster.</p>
<p>Here&#8217;s an example from the GitHub audit report that shows a CSS file as a &#8220;render-blocking resource&#8221;.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/06/1625063688Screen-Shot-2021-06-28-at-8.36.33-PM.png" alt="GitHub Audit" /></p>
<p>As you read the rest of the metrics, you&#8217;ll realize that they somehow depend on the result of this one. So, it&#8217;s important to have a good score in FCP.</p>
<h5 id="timetointeractivetti">Time to Interactive (TTI)</h5>
<p><strong>Time to interactive</strong> (TTI) measures how long it takes for your user to be able to fully interact with the web page. The result of TTI depends on FCP, as the faster the FCP, the faster the user can interact with the web page.</p>
<p>Users not only need to see the page loaded, but they also need to be able to interact with it. It even becomes more annoying if the website <em>seems</em> fully loaded but the user can&#8217;t interact with it properly. For example, clicking a button doesn’t do anything, even though it looks ready to use on screen. Improving your website&#8217;s TTI will make it easier for your users to use your website, which can result in a better conversion rate.</p>
<p>In order for a web page to be considered fully active, it first needs to achieve FCP. Then, event handlers should be registered for those elements on the page that are visible. And finally, the page should be able to respond to a user&#8217;s interactions within 50ms.</p>
<p>A web page&#8217;s TTI is measured in seconds. For a web page to have a good TTI, it should take at most 3.8 seconds to become fully interactive. If the page takes longer than that, it will either be considered moderate or slow.</p>
<p>There are several factors that affect a web page&#8217;s TTI score. The most common are &#8220;main thread work&#8221; and &#8220;JavaScript execution time&#8221;.</p>
<p><strong>Main thread work</strong> means the process it takes for the browser to render a page. For the browser to render a page, it first parses the HTML, then builds the DOM, parses the CSS, and executes the JavaScript. If this process takes too long, it means it will also take long for the page to be ready to respond to the user&#8217;s interactions, as processing events is also a part of the main thread work.</p>
<p>JavaScript execution time includes the time it takes to fetch the script, parse it, compile it, execute it, and the memory it might use. If fetching the script takes a long time due to its size, it will take a longer time to be able to parse and execute it. After the script is fetched, parsing and compiling it occurs in the main thread work, so if it takes a long time, it will slow down the main thread work. If the script has a lot of code to be executed on page load, which occurs on the main thread work, it will take a long time for the web page to be ready for the user&#8217;s interaction.</p>
<p>Improving the TTI metric is very similar to FCP, as it relies on it first and foremost. Good practices would be to minify JavaScript and CSS files and remove any unused code in them. An additional thing you can do is to split the JavaScript and CSS files into bundles (typically done with a bundler, such as webpack). This means that the web page can fetch the bundles faster, and if you&#8217;re also using the <code>defer</code> attribute, as detailed in the previous section, it will fetch the bundles even faster asynchronously.</p>
<h5 id="totalblockingtimetbt">Total Blocking Time (TBT)</h5>
<p>This one is pretty similar in concept to TTI. <strong>Total blocking time</strong> (TBT) measures the total time between FCP and TTI, during which various tasks block user interaction. If an individual task takes longer than 50ms, then it&#8217;s considered blocking, and the time after that point is added to the total blocking time. For example, if a particular task takes 90ms, 40ms (that is, 90ms &#8211; 50ms) is added to the TBT overall measurement .</p>
<p>This metric basically emphasizes what TTI measures, with extra focus on which tasks are affecting the load time of your page, and how much are they affecting it.</p>
<p>TBT is measured in milliseconds. To get a good TBT score, the total blocking time of tasks on your web page should not be more than 200ms.</p>
<p>To improve your TBT score, it&#8217;s similar to TTI. You need to minimize main thread work and reduce JavaScript execution. However, as TBT looks more into the details of the code execution, additional enhancements could be optimizing your JavaScript code so that it works faster. For example, when selecting an element from the document, be specific in your selector rather than using a generic selector like <code>div</code>. Take a deeper look into your code, and look for any chance to improve your code, which will in turn optimize the time each task takes.</p>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/lighthouse-beginners-guide/?utm_source=rss">A Beginner’s Guide to Lighthouse</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/lighthouse-beginners-guide/?utm_source=rss</link><guid isPermaLink="false">/?p=200350</guid><category><![CDATA[Web]]></category><dc:creator><![CDATA[Shahed Nasser]]></dc:creator><pubDate>Mon, 26 Jul 2021 16:00:17 GMT</pubDate><metaDesc>You've built a website, but how well does it perform for your end users? Learn how to use Lighthouse to get crucial answers to this question.</metaDesc></item><item><title><![CDATA[5 Easy Strategies to Make WordPress Enterprise-ready in 2021]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/make-wordpress-enterprise-ready/?utm_source=rss"
              title="5 Easy Strategies to Make WordPress Enterprise-ready in 2021"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2021/07/1627263688wordpress-enterprise.png"
        alt="5 Easy Strategies to Make WordPress Enterprise-ready in 2021"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/07/1627263688wordpress-enterprise-300x170.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/07/1627263688wordpress-enterprise.png 600w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong>WordPress is a popular, easy-to-use, PHP-based content management system and blogging platform. Many enterprise organizations believe that WordPress is simply a platform used by smaller companies, entrepreneurs, freelancers and companies who don&#8217;t have a robust or sophisticated infrastructure. But what if this simply isn&#8217;t the case?</strong> </p>
<p>This article will discuss five strategies that can help you take advantage of the easy-to-use functionality of WordPress. We&#8217;ll also leverage the enormous community support to develop an enterprise-ready site. But first we&#8217;ll talk a bit about the reasons enterprises are hesitant to use this platform for their next enterprise project and why those reasons are unfounded.</p>
<h2 id="enterprisehesitancy">Enterprise Hesitancy</h2>
<p>WordPress originally started as a blogging platform but quickly adapted to general website use. Today, it&#8217;s estimated that WordPress may power as much as <a href="https://hostingtribunal.com/blog/wordpress-statistics">35–40% of the websites on the Internet</a>, and nearly 28% of all ecommerce goes through WooCommerce (a WordPress plugin and system). However, many IT professionals and experienced developers still see the platform as only for blogging, and consider that it&#8217;s not suited to handling the larger needs of enterprises, which may need to integrate with their services. Many organizations see their systems as proprietary systems that are &#8220;too unique&#8221; for WordPress, and believe that it just won&#8217;t fit into their infrastructure.</p>
<p>Another fear that IT/development staff have about WordPress is that, to get the site up and running, and working with their system, they have to start from scratch. This is simply not the case. WordPress has done a very nice job of getting the main platform installed in as little as five minutes. In addition, through the use of sophisticated plugins, WordPress can tap into standardized systems, work with cloud services, provide SAML or OAuth2 functionality, and more. Even if you don&#8217;t find a plugin that does everything you need, it&#8217;s easy to build plugins and extend the platform to connect to your own proprietary system. We&#8217;ll look into some of that in this article.</p>
<p>Lastly, there&#8217;s a belief that WordPress is just not secure enough. Why do they think this? Well, perhaps it&#8217;s because they see a lot of security updates. But shouldn&#8217;t that tell you that WordPress is so active on the security front that it&#8217;s finding and fixing problems before your IT department even wakes up in the morning? With such a large footprint in the online world, and with so many companies using it, there are thousands and thousands of developers looking at every inch of core. Then with plugins (which can be written by anyone, that is true) we can apply a bit of basic discipline to only pick the best and vet what plugins we allow. Everything is open source, so all plugins are an open book and you can have your devs crawl through them and look for anything that may impact the organization.</p>
<h2 id="thestrategies">The Strategies</h2>
<p>Now that we&#8217;ve addressed some of the hesitancy and myths lurking about WordPress in the enterprise context, we can talk about some strategies for making WordPress something that could work for a company of any size. While these strategies will cover many topics, there&#8217;s always more that you can do. Be sure to look for more information on <a href="https://www.sitepoint.com/premium/library/">sitepoint.com</a> as you explore these strategies.</p>
<h3 id="strategy1identifywhatyouneedandlockitdown">Strategy 1: Identify what you need and lock it down</h3>
<p>This is your standard security strategy for WordPress. </p>
<ol>
<li>First make sure that you set up the platform using the famous <strong><a href="https://wordpress.org/support/article/how-to-install-wordpress/">five minute install guide</a></strong>. One thing to pay attention to is generating your secure salts. This is super easy to do and will give you that extra layer of protection.</li>
<li><strong>Set up SSL</strong>. Pretty standard really.</li>
<li><strong>Protect your <code>wp-config.php</code> file</strong>. This file is a great place to put your secrets, passwords, API keys and links to the platform and also your enterprise services. I&#8217;d recommend not committing this file to your repositories and instead just keep a backup of it somewhere. Then you can give it to new developers who may need it. You can even move this file to a different location that&#8217;s not accessible by the public and then reference the file. If you do a search about moving <code>wp-config.php</code>, you can find tons of information on the topic. In addition to moving it, you can also add a configuration to your web server configs or <code>.htaccess</code> file to simply deny direct access to the file.</li>
<li><strong>Move the login page</strong> for your admin panel. Typically, this page is found at <code>https://&lt;yoursite.com&gt;/wp-admin</code>. You can also change this URL to be some other location. There are plugins that can assist you with this.</li>
<li><strong>Put the site behind a CDN</strong> or service like CloudFlare or CloudFront for even more security. </li>
<li><strong>Remove any labeling</strong> that mentions the WordPress version. </li>
</ol>
<p>To complete point 6 above, you can use this simple code provided below to do this in two spots, putting them in your <code>functions.php</code> file.</p>
<p>Do the following to remove the version number in the header and RSS:</p>
<pre><code class="php language-php">function remove_wp_head_version() {
  return '';
}
add_filter('the_generator', 'remove_wp_head_version');
</code></pre>
<p>And to remove the version details from scripts and CSS files, do this:</p>
<pre><code class="php language-php">function remove_wp_styles_scripts( $src ) {
  if ( strpos( $src, 'ver=' . get_bloginfo( 'version' ) ) ) {
    $src = remove_query_arg( 'ver', $src );
  }
  return $src;
}

add_filter( 'style_loader_src', 'remove_wp_styles_scripts');
add_filter( 'script_loader_src', 'remove_wp_styles_scripts');
</code></pre>
<p>If you&#8217;d like to take things even further, check out the official <a href="https://wordpress.org/support/article/hardening-wordpress/">WordPress hardening guide</a> for more tips! Again, the WordPress development community has thought a lot about security. So be sure to follow this guide to the extent your organization wishes to go.</p>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/make-wordpress-enterprise-ready/?utm_source=rss">5 Easy Strategies to Make WordPress Enterprise-ready in 2021</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/make-wordpress-enterprise-ready/?utm_source=rss</link><guid isPermaLink="false">/?p=200314</guid><category><![CDATA[Plugins]]></category><category><![CDATA[WordPress]]></category><dc:creator><![CDATA[Tim Hurd]]></dc:creator><pubDate>Sun, 25 Jul 2021 16:00:44 GMT</pubDate><metaDesc>WordPress for enterprise? Learn simple but powerful ways to ensure that WordPress is ready for the heavy lifting of enterprise projects.</metaDesc></item><item><title><![CDATA[How the Muffin Live Builder Will Help You Build Better Sites, Faster]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/how-the-muffin-live-builder-will-help-you-build-better-sites-faster/?utm_source=rss"
              title="How the Muffin Live Builder Will Help You Build Better Sites, Faster"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2021/07/1626978888muffin.jpg"
        alt=""
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/07/1626978888muffin-300x158.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/07/1626978888muffin-1024x539.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/07/1626978888muffin-768x404.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/07/1626978888muffin-1536x808.jpg 1536w, https://uploads.sitepoint.com/wp-content/uploads/2021/07/1626978888muffin.jpg 1900w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p>This sponsored article was created by our content partner, BAW Media. Thank you for supporting the partners who make SitePoint possible. Page builders have revolutionized the way we create websites today. But with so many options available for WordPress, it can take some time to find the best one for your web design projects and [&hellip;]</p>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/how-the-muffin-live-builder-will-help-you-build-better-sites-faster/?utm_source=rss">How the Muffin Live Builder Will Help You Build Better Sites, Faster</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/how-the-muffin-live-builder-will-help-you-build-better-sites-faster/?utm_source=rss</link><guid isPermaLink="false">/?p=199582</guid><category><![CDATA[Plugins]]></category><category><![CDATA[WordPress]]></category><dc:creator><![CDATA[SitePoint Sponsors]]></dc:creator><pubDate>Thu, 22 Jul 2021 02:19:51 GMT</pubDate><metaDesc>One of the fastest page builders is part of Betheme's all-in-one WordPress toolkit. Learn how the Muffin Builder can transform your work.</metaDesc></item><item><title><![CDATA[Virtual Environments in Python Made Easy]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/virtual-environments-python-made-easy/?utm_source=rss"
              title="Virtual Environments in Python Made Easy"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2021/05/1626939112python-environments.png"
        alt="Virtual Environments in Python Made Easy"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/05/1626939112python-environments-300x170.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/05/1626939112python-environments.png 600w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong>Most Python newcomers don’t know how to set up a development environment that follows the latest standards used by professional programmers. This tutorial will teach you how to properly create a fully working Python development environment using industry-accepted best practices.</strong></p>
<h2 id="virtualenvironments">Virtual Environments</h2>
<p>A virtual environment helps us to solve project dependency conflicts by creating isolated environments. These &#8220;isolated environments&#8221; contain all the goodies Python programmers might need to develop their projects.</p>
<p>Virtual environments include a fresh duplicate of Python binaries, and a standalone copy of the entire Python standard library. That&#8217;s why it can work by itself.</p>
<p>Using virtual environments give us the following advantages:</p>
<ul>
<li>we&#8217;re able to maintain our local machine packages intact</li>
<li>we can share dependencies with others with a <code>requirements.txt</code> file</li>
<li>we can deploy a Python app in a dedicated server (PythonAnyWhere, Heroku, and so forth)</li>
</ul>
<h3 id="theneedforvirtualenvironments">The Need for Virtual Environments</h3>
<p>I use many libraries for my projects. Among them are three web application development frameworks, and there are other libraries I&#8217;d like to explore in future. This serves as the main argument that serious projects in Python depend on other packages written by other developers.</p>
<p>If you&#8217;re a Django developer, I&#8217;m confident you use <strong>Django rest framework</strong> to create powerful rest APIs, <strong>Django Debug Toolbar</strong> for gathering various debug information about the current request/response, <strong>Celery</strong> for taking care of real-time operations, and scheduling as well, and so on.</p>
<p>For example, I rely heavily on the <code>requests</code> package for some of my projects, and a Django web application I&#8217;m currently working on depends on version 2.3.0. According to the official documentation, at the time of writing the latest version of this package is version 3.2.</p>
<p>Let&#8217;s suppose I go ahead and install the latest version of the library on my Ubuntu machine because I need it for another project. Everything seems to work fine until I try to make use of my older project, which worked fine with 2.3.0. Suddenly, everything is broken.</p>
<p>What happened? Maybe the API of the latest version of Django has changed since version 2.3.0? The reason doesn&#8217;t matter at this point, as my older project is broken and no longer works.  </p>
<p>A conflict between two projects has been created. They make use of the same library, but they require different versions of it.</p>
<p>Various packages solve this problem. Let&#8217;s see some that stand out.</p>
<h2 id="beforestarting">Before Starting</h2>
<p>In this tutorial, we&#8217;ll be using Python 3, so let&#8217;s start by checking your Python installation.</p>
<p>To do this, open up a terminal — cmd/PowerShell on Windows — and type the following command:</p>
<pre><code class="bash language-bash">python --version

Python 3.9.5 # My result
</code></pre>
<p><em>Note: Most macOS and Linux systems have Python installed. You can check the <a href="https://docs.python.org/3/using/windows.html">Python installation guide</a> if you&#8217;re using Windows.</em></p>
<p>If you didn&#8217;t get a result of the form <code>Python 3.x</code> there are two options:</p>
<ul>
<li>if this command returned a <code>Python 2.x</code> version, you&#8217;ll need to use <code>python3</code> along with this tutorial</li>
<li>if you got an <code>Unknown command</code> error, try to run <code>python3</code>, and if you get another error, follow the Python installation guide</li>
</ul>
<p>You can proof the existence of the <code>python3</code> binary by checking its version:</p>
<pre><code class="bash language-bash">python3 --version

Python 3.9.5
</code></pre>
<p><em>Note: if the command above worked, you&#8217;ll need to run <code>python3</code> instead of <code>python</code>.</em></p>
<p>Now that you know which Python command runs on your machine, let&#8217;s get into virtual environments.</p>
<h2 id="builtinvenvmodule">Built-in <code>venv</code> Module</h2>
<p>Let&#8217;s use the built-in Python <a href="https://docs.python.org/3/library/venv.html">venv module</a> to create your first virtual environment.</p>
<p><em>Note: to use this module you need Python 3.3 or greater installed in your system.</em></p>
<p>To create a Python virtual environment with <code>venv</code>, type the following command:</p>
<pre><code class="bash language-bash">python -m venv virt1
</code></pre>
<p><em>Note: the <code>-m</code> flag means Python is running the built-in <code>venv</code> module as a script.</em></p>
<p>This will create a virtual environment with the name of <code>virt1</code>, but this is just an argument. You can create the virtual environment with any name you want.</p>
<p>Everything installed in the <code>virt1</code> directory won&#8217;t affect the global packages or system-wide installations, thus avoiding dependency conflicts.</p>
<h3 id="activatingvirtualenvironments">Activating Virtual Environments</h3>
<p>It&#8217;s crucial to know that each time we want to use a created virtual environment, we need to activate it with the following command:</p>
<pre><code class="bash language-bash">source virt1/bin/activate
</code></pre>
<p>This won&#8217;t work in every system, so you can check the table below to have a clear idea of which command to use:</p>
<table>
<thead>
<tr>
<th>Platform</th>
<th>Shell</th>
<th>Command to activate virtual environment</th>
</tr>
</thead>
<tbody>
<tr>
<td>POSIX</td>
<td>bash/zsh</td>
<td>$ source (venv-name)/bin/activate</td>
</tr>
<tr>
<td></td>
<td>fish</td>
<td>$ source (venv-name)/bin/activate.fish</td>
</tr>
<tr>
<td></td>
<td>csh/tcsh</td>
<td>$ source (venv-name)/bin/activate.csh</td>
</tr>
<tr>
<td></td>
<td>PowerShell Core</td>
<td>$ (venv-name)/bin/Activate.ps1</td>
</tr>
<tr>
<td>Windows</td>
<td>cmd.exe</td>
<td>C:> (venv-name)\Scripts\activate.bat</td>
</tr>
<tr>
<td></td>
<td>PowerShell</td>
<td>PS C:> (venv-name)\Scripts\Activate.ps1</td>
</tr>
</tbody>
</table>
<p><em>Note: the <code>$</code> sign on POSIX and the <code>C:&gt;</code>, <code>PS C:&gt;</code> signs on Windows aren&#8217;t part of the command.</em></p>
<p>As you may notice, I&#8217;m using a bash shell in a POSIX (macOS and Linux), which is why I&#8217;m running the command above.</p>
<h3 id="aftertheenvironmentiscreated">After the environment is created</h3>
<p>Once the virtual environment gets activated, the terminal prompt changes a bit.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/06/1624422509activated.png" alt="Activated environment" /></p>
<p>The following command lets you deactivate the virtual environment:</p>
<pre><code class="bash language-bash">deactivate
</code></pre>
<p>Note how your terminal prompt has changed again.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/06/1624422510deactivated.png" alt="Deactivated environment" /></p>
<p>Now activate your virtual environment again and use the <code>which</code> command to check the Python binary that&#8217;s being used:</p>
<pre><code class="bash language-bash">source virt1/bin/activate
which python
</code></pre>
<p>If everything worked well, you should get something similar to the following output:</p>
<pre><code class="bash language-bash">/home/daniel/tests/python-tests/venvs/virt1/bin/python
</code></pre>
<p>If you <code>deactivate</code> and <code>which</code> again, you should get a different output:</p>
<pre><code class="bash language-bash">deactivate
/usr/bin/python
</code></pre>
<p>This is because, when working inside a virtual environment, the binary copy placed inside that environment is being used. The same applies to packages.</p>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/virtual-environments-python-made-easy/?utm_source=rss">Virtual Environments in Python Made Easy</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/virtual-environments-python-made-easy/?utm_source=rss</link><guid isPermaLink="false">http://www.sitepoint.com/?p=103242</guid><category><![CDATA[Python]]></category><category><![CDATA[Web]]></category><dc:creator><![CDATA[Oltjano Terpollari, Daniel Diaz]]></dc:creator><pubDate>Wed, 21 Jul 2021 16:00:29 GMT</pubDate><metaDesc>The best and easiest way to set up a virtual environment for Python is with pip, virtualenv, and a simple bash script. Here’s how.</metaDesc></item><item><title><![CDATA[Learn Markdown: Structure, Syntax, and Conventions]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/learn-markdown/?utm_source=rss"
              title="Learn Markdown: Structure, Syntax, and Conventions"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2021/07/1626758450learn-markdown.png"
        alt="Learn Markdown: Structure, Syntax, and Conventions"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/07/1626758450learn-markdown-300x170.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/07/1626758450learn-markdown.png 600w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong>Content on the Web needs to be presented in HTML format. Many web publishing tools (such as blogging software and CMSs) convert your content (text, images and so on) into HTML for you. But there are many situations where you want to write HTML content yourself … and marking up content with HTML tags manually is laborious and not really viable. Enter Markdown.</strong></p>
<p>Markdown is an easy, frictionless way of writing content for the Web and the perfect way for developers to create documentation. It lets you structure and format documents easily using simple, text-based markup, which then gets converted into HTML for you — all from within your favorite text editor.</p>
<p>If you’re not already using Markdown, now might be the time to begin. You can learn the basics in minutes, and with ongoing use, the syntax will become second nature. In this article, we’ll encourage you to start simply and show you how to use Markdown for a range of common tasks when creating content.</p>
<p>Let’s dive in!</p>
<h2 id="whatismarkdown">What Is Markdown?</h2>
<p><a href="https://daringfireball.net/projects/markdown/">Markdown</a> is a lightweight markup language created by John Gruber in 2004. It’s easy to write, easy to read, and can be easily turned into HTML. It was primarily designed for writing for the Web.</p>
<p>It has rapidly grown in popularity and is now used in contexts never envisaged by its creator. But it’s not perfect. It has limits, especially as it leaves out formatting for a lot of HTML elements you might need to use (such as tables). It can also be a little ambiguous.</p>
<p>As a result, a range of variants has been created to deal with these problems:</p>
<ul>
<li><a href="https://commonmark.org/">CommonMark</a> attempts to standardize Markdown and make it less ambiguous, contradicting some of the original syntaxes in the process.</li>
<li><a href="https://github.github.com/gfm/">GitHub Flavored Markdown</a> (GFM) extends CommonMark and is used when creating documentation on GitHub.</li>
<li><a href="https://fletcherpenney.net/multimarkdown/">MultiMarkdown</a> added new syntax for tables, footnotes, citations, and more.</li>
<li><a href="https://pandoc.org/">Pandoc</a> extends Markdown for multiple output formats (not just HTML) and supports document metadata, footnotes, tables, superscript, subscript, and more.</li>
</ul>
<p>Some web services and Markdown editors support the syntax of some of these variants or even use their own version of Markdown. Fortunately, they all support the original Markdown syntax, and that’s what we’ll focus on in this article.</p>
<h2 id="learningmarkdown">Learning Markdown</h2>
<p>The best way to learn Markdown is simply to start. Pick a use case and begin, whether that’s creating a blog post, working on documentation, or just adding some basic formatting to your notes. Pick up the syntax piece by piece as you need it.</p>
<p>You can use your favorite text editor, or choose one of the many apps designed to work with Markdown. Markdown editors can ease the learning process because they allow you to preview your formatting inline or in a separate pane. That means you can see at a glance whether or not you’re using the correct syntax.</p>
<p>Personally, I use <a href="https://marked2app.com">Marked 2</a> to preview Markdown files on my Mac. It&#8217;s a commercial product, but of course you can find lots of free plugins for your editor of choice. You can also edit and preview Markdown files online using <a href="https://markdownlivepreview.com/">Markdown Live Preview</a> and <a href="https://stackedit.io/">StackEdit</a>.</p>
<p>For help choosing the right Markdown editor, refer to these roundup articles:</p>
<ul>
<li><a href="https://www.sitepoint.com/the-best-markdown-editors-for-mac/">The Best Markdown Editors for Mac</a></li>
<li><a href="https://www.sitepoint.com/best-markdown-editors-windows/">The Best Markdown Editor for Windows</a></li>
<li><a href="https://www.sitepoint.com/the-best-markdown-editor-for-linux/">The Best Markdown Editor for Linux</a></li>
</ul>
<h2 id="structuringdocuments">Structuring Documents</h2>
<p>Markdown lets you add structural elements to your document, such as <strong>headings</strong> (<code>h1</code>, <code>h2</code>, <code>h3</code> etc.). There are a few ways to add headings in Markdown . My favorite is to prefix a heading with hashes <code>#</code>, one for each level of heading:</p>
<pre><code class="markup language-markup"># Heading 1

## Heading 2

### Heading 3

etc.

And this is body text.
</code></pre>
<p>The hashes move lower-level headings further to the right, so they appear indented. You can optionally use the same number of hashes at the end of the line to close the headers:</p>
<pre><code class="markup language-markup">### Heading 3 ###
</code></pre>
<p>There’s a second way, though I don’t see it used as often. You can create two levels of headings by underlining the H1 headings with equals <code>=</code> symbols and H2 headings with hyphens <code>-</code>:</p>
<pre><code class="markup language-markup">Heading 1 or Title
==================

Heading 2
---------
</code></pre>
<p>Sections of a document can be separated using <strong>horizontal rules</strong> (<code>&lt;hr /&gt;</code>), or lines. You create these in Markdown using three (or more) hyphens <code>-</code>, asterisks <code>*</code>, underscores <code>_</code> or equals <code>=</code> signs. Place them alone on a line, with blank lines on either side:</p>
<pre><code class="markup language-markup">Brief introduction.

===

# Chapter 1

Lots of text.

---

# Chapter 2

Some more text

---
</code></pre>
<p><strong>Lists</strong> are another important structural element. Unordered lists (<code>&lt;ul&gt;</code>) are created by beginning the line with an asterisk <code>*</code>, plus <code>+</code> symbol, or hyphen <code>-</code>, followed by a space or tab, then the text:</p>
<pre><code class="markup language-markup">* this
* is
* an
* unordered
* list

+ this
+ is
+ too

- and
- so
- is
- this
</code></pre>
<p>Choose whichever symbol suits you. You can switch between these symbols and the end result will be the same. I tend to use asterisks or hyphens.</p>
<p>Ordered lists (<code>&lt;ol&gt;</code>) are numbers followed by periods. The numbers don’t necessarily have to be in order. Either of these will work:</p>
<pre><code class="markup language-markup">1. this
2. is
3. an
4. ordered
5. list

1. and
1. so
1. is
1. this
</code></pre>
<p>The Markdown editors I use automatically continue a list when pressing <kbd>return</kbd>.</p>
<p>If you want to start a line with a number and a period without starting a list, you need to escape the period with a backslash <code>\</code>:</p>
<pre><code class="markup language-markup">2020\. A year we'll never forget.
</code></pre>
<p>Finally, paragraphs of normal text are separated by one or more blank lines:</p>
<pre><code class="markup language-markup">This will be formatted as an HTML paragraph.

And so will this.
</code></pre>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/learn-markdown/?utm_source=rss">Learn Markdown: Structure, Syntax, and Conventions</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/learn-markdown/?utm_source=rss</link><guid isPermaLink="false">/?p=198566</guid><category><![CDATA[Computing]]></category><category><![CDATA[Productivity Tools]]></category><category><![CDATA[Web]]></category><dc:creator><![CDATA[Adrian Try]]></dc:creator><pubDate>Tue, 20 Jul 2021 16:00:41 GMT</pubDate><metaDesc>If you write docs or blog posts, there's a good chance they'll be written in Markdown. Learn the syntax and conventions of this popular markup language.</metaDesc></item><item><title><![CDATA[How to Idiomatically Use Global Variables in Rust]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/rust-global-variables/?utm_source=rss"
              title="How to Idiomatically Use Global Variables in Rust"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2021/07/1626739970rust-global-variables.png"
        alt="How to Idiomatically Use Global Variables in Rust"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/07/1626739970rust-global-variables-300x170.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/07/1626739970rust-global-variables.png 600w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong>Declaring and using global variables in Rust can be tricky. Typically for this language, Rust ensures robustness by forcing us to be very explicit.</strong></p>
<p>In this article, I&#8217;ll discuss the pitfalls the Rust compiler wants to save us from. Then I&#8217;ll show you the best solutions available for different scenarios.</p>
<h2 id="overview">Overview</h2>
<p>There are many options for implementing global state in Rust. If you&#8217;re in a hurry, here&#8217;s a quick overview of my recommendations.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/06/1624192569flowchart.png" alt="A Flowchart for finding the best solution for global variables" /></p>
<p>You can jump to specific sections of this article via the following links:</p>
<ul>
<li>No globals: <a href="#refactortheexample">Refactor to Arc<t> / Rc</t><t></t></a></li>
<li>Compile-time initialized globals: <a href="#whenthevalueisknownatcompiletime">const T / static T</a></li>
<li>Use an external library for easy runtime initialized globals: <a href="#externallibraries">lazy_static / once_cell</a></li>
<li>Implement your own runtime initialization: <a href="#multithreadedglobalswithruntimeinitialization">std::sync::Once + static mut T</a></li>
<li>Specialized case for single-threaded runtime initialization: <a href="#singlethreadedglobalswithruntimeinitialization">thread_local</a></li>
</ul>
<h2 id="anaivefirstattempt">A Naive First Attempt</h2>
<p>Let&#8217;s start with an example of how not to use global variables. Assume I want to store the starting time of the program in a global string. Later, I want to access the value from multiple threads.</p>
<p>A Rust beginner might be tempted to declare a global variable exactly like any other variable in Rust, using <code>let</code>. The full program could then look like this:</p>
<pre><code class="rust language-rust">use chrono::Utc;

let START_TIME = Utc::now().to_string();

pub fn main() {
    let thread_1 = std::thread::spawn(||{
        println!("Started {}, called thread 1 {}", START_TIME.as_ref().unwrap(), Utc::now());
    });
    let thread_2 = std::thread::spawn(||{
        println!("Started {}, called thread 2 {}", START_TIME.as_ref().unwrap(), Utc::now());
    });

    // Join threads and panic on error to show what went wrong
    thread_1.join().unwrap();
    thread_2.join().unwrap();
}
</code></pre>
<p>Try it for yourself on the <a href="https://play.rust-lang.org/?version=stable&#038;mode=debug&#038;edition=2018&#038;gist=51f73323b3d86ebbb1a89376d9235850">playground</a>!</p>
<p><iframe width="100%" height="550px" src="https://play.rust-lang.org/?version=stable&#038;mode=debug&#038;edition=2018&#038;code=use%20chrono%3A%3AUtc%3B%0A%0Alet%20START_TIME%20%3D%20Utc%3A%3Anow().to_string()%3B%0A%0Apub%20fn%20main()%20%7B%0A%20%20%20%20let%20thread_1%20%3D%20std%3A%3Athread%3A%3Aspawn(%7C%7C%7B%0A%20%20%20%20%20%20%20%20println!(%22Started%20%7B%7D%2C%20called%20thread%201%20%7B%7D%22%2C%20START_TIME.as_ref().unwrap()%2C%20Utc%3A%3Anow())%3B%0A%20%20%20%20%7D)%3B%0A%20%20%20%20let%20thread_2%20%3D%20std%3A%3Athread%3A%3Aspawn(%7C%7C%7B%0A%20%20%20%20%20%20%20%20println!(%22Started%20%7B%7D%2C%20called%20thread%202%20%7B%7D%22%2C%20START_TIME.as_ref().unwrap()%2C%20Utc%3A%3Anow())%3B%0A%20%20%20%20%7D)%3B%0A%20%20%20%20%0A%20%20%20%20%2F%2F%20Join%20threads%20and%20panic%20on%20error%20to%20show%20what%20went%20wrong%0A%20%20%20%20thread_1.join().unwrap()%3B%0A%20%20%20%20thread_2.join().unwrap()%3B%0A%7D"></iframe></p>
<p>This is invalid syntax for Rust. The <code>let</code> keyword can&#8217;t be used in the global scope. We can only use <code>static</code> or <code>const</code>. The latter declares a true constant, not a variable. Only <code>static</code> gives us a global variable.</p>
<p>The reasoning behind this is that <code>let</code> allocates a variable on the stack, at runtime. Note that this remains true when allocating on the heap, as in <code>let t = Box::new();</code>. In the generated machine code, there is still a pointer into the heap which gets stored on the stack.</p>
<p>Global variables are stored in the <a href="https://en.wikipedia.org/wiki/Data_segment">data segment</a> of the program. They have a fixed address that doesn&#8217;t change during execution. Therefore, the <a href="https://en.wikipedia.org/wiki/Data_segment#Text">code segment</a> can include constant addresses and requires no space on the stack at all.</p>
<p>Okay, so we can understand why we need a different syntax. Rust, as a modern systems programming language, wants to be very explicit about memory management.</p>
<p>Let&#8217;s try again with <code>static</code>:</p>
<pre><code class="rust language-rust">use chrono::Utc;

static START_TIME: String = Utc::now().to_string();

pub fn main() {
    // ...
}
</code></pre>
<p>The compiler isn&#8217;t happy, yet:</p>
<pre><code class="rust language-rust">error[E0015]: calls in statics are limited to constant functions, tuple structs and tuple variants
 --&gt; src/main.rs:3:24
  |
3 | static start: String = Utc::now().to_string();
  |                        ^^^^^^^^^^^^^^^^^^^^^^
</code></pre>
<p>Hm, so the initialization value of a static variable can&#8217;t be computed at runtime. Then maybe just let it be uninitialized?</p>
<pre><code class="rust language-rust">use chrono::Utc;

static START_TIME;

pub fn main() {
    // ...
}
</code></pre>
<p>This yields a new error:</p>
<pre><code class="rust language-rust">Compiling playground v0.0.1 (/playground)
error: free static item without body
 --&gt; src/main.rs:21:1
  |
3 | static START_TIME;
  | ^^^^^^^^^^^^^^^^^-
  |                  |
  |                  help: provide a definition for the static: `= &lt;expr&gt;;`
</code></pre>
<p>So that doesn&#8217;t work either! All static values must be fully initialized and valid before any user code runs.</p>
<p>If you&#8217;re coming over to Rust from another language, such as JavaScript or Python, this might seem unnecessarily restrictive. But any C++ guru can tell you stories about the <a href="https://en.cppreference.com/w/cpp/language/siof">static initialization order fiasco</a>, which can lead to an undefined initialization order if we&#8217;re not careful.</p>
<p>For example, imagine something like this:</p>
<pre><code class="rust language-rust">static A: u32 = foo();
static B: u32 = foo();
static C: u32 = A + B;

fn foo() -&gt; u32 {
    C + 1
}

fn main() {
    println!("A: {} B: {} C: {}", A, B, C);
}
</code></pre>
<p>In this code snippet, there&#8217;s no safe initialization order, due to circular dependencies.</p>
<p>If it were C++, which doesn&#8217;t care about safety, the result would be <code>A: 1 B: 1 C: 2</code>. It zero-initializes before any code runs and then the order is defined from top-to-bottom within each compilation unit.</p>
<p>At least it&#8217;s defined what the result is. However, the &#8220;fiasco&#8221; starts when the static variables are from different <code>.cpp</code> files, and therefore different compilation units. Then the order is undefined and usually depends on the order of the files in the compilation command line.</p>
<p>In Rust, zero-initializing is not a thing. After all, zero is an invalid value for many types, such as <code>Box</code>. Furthermore, in Rust, we don&#8217;t accept weird ordering issues. As long as we stay away from <code>unsafe</code>, the compiler should only allow us to write sane code. And that&#8217;s why the compiler prevents us from using straightforward runtime initialization.</p>
<p>But can I circumvent initialization by using <code>None</code>, the equivalent of a null-pointer? At least this is all in accordance with the Rust type system. Surely I can just move the initialization to the top of the main function, right?</p>
<pre><code class="rust language-rust">static mut START_TIME: Option&lt;String&gt; = None;

pub fn main() {
    START_TIME = Some(Utc::now().to_string());
    // ...
}
</code></pre>
<p>Ah, well, the error we get is…</p>
<pre><code class="rust language-rust">error[E0133]: use of mutable static is unsafe and requires unsafe function or block
  --&gt; src/main.rs:24:5
  |
6 |     START_TIME = Some(Utc::now().to_string());
  |     ^^^^^^^^^^ use of mutable static
  |
  = note: mutable statics can be mutated by multiple threads: aliasing violations or data races will cause undefined behavior
</code></pre>
<p>At this point, I could wrap it in an <code>unsafe{...}</code> block and it would work. Sometimes, this is a valid strategy. Maybe to test if the remainder of the code works as expected. But it&#8217;s not the idiomatic solution I want to show you. So let&#8217;s explore solutions that are guaranteed to be safe by the compiler.</p>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/rust-global-variables/?utm_source=rss">How to Idiomatically Use Global Variables in Rust</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/rust-global-variables/?utm_source=rss</link><guid isPermaLink="false">/?p=198553</guid><category><![CDATA[Programming]]></category><category><![CDATA[Web]]></category><dc:creator><![CDATA[Jakob Meier]]></dc:creator><pubDate>Mon, 19 Jul 2021 16:00:46 GMT</pubDate><metaDesc>You've heard that you should avoid using global variables in Rust. But they can be useful for configuration or managing state in your app.</metaDesc></item><item><title><![CDATA[An Introduction to Frameworkless Web Components]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/frameworkless-web-components-introduction/?utm_source=rss"
              title="An Introduction to Frameworkless Web Components"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2021/07/1626661677frameworkless-web-components.png"
        alt="An Introduction to Frameworkless Web Components"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/07/1626661677frameworkless-web-components-300x170.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/07/1626661677frameworkless-web-components.png 600w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong>This tutorial provides an introduction to standard web components written without using a JavaScript framework. You’ll learn what they are and how to adopt them for your own web projects. A reasonable knowledge of HTML5, CSS, and JavaScript is necessary.</strong></p>
<h2 id="whatarewebcomponents">What are Web Components?</h2>
<p>Ideally, your development project should use simple, independent modules. Each should have a clear single responsibility. The code is encapsulated: it&#8217;s only necessary to know what will be output given a set of input parameters. Other developers shouldn&#8217;t need to examine the implementation <em>(unless there&#8217;s a bug, of course).</em></p>
<p>Most languages encourage use of modules and reusable code, but browser development requires a mix of HTML, CSS, and JavaScript to render content, styles, and functionality. Related code can be split across multiple files and may conflict in unexpected ways.</p>
<p>JavaScript frameworks and libraries such as React, Vue, Svelte, and Angular have alleviated some of the headaches by introducing their own componentized methods. Related HTML, CSS, and JavaScript can be combined into one file. Unfortunately:</p>
<ul>
<li>it&#8217;s another thing to learn</li>
<li>frameworks evolve and updates often incur code refactoring or even rewriting</li>
<li>a component written in one framework won&#8217;t usually work in another, and</li>
<li>frameworks can be heavy and limited by what is achievable in JavaScript</li>
</ul>
<p>A decade ago, many of the concepts introduced by jQuery were added to browsers (such as <a href="https://developer.mozilla.org/docs/Web/API/Document/querySelector">querySelector</a>, <a href="https://developer.mozilla.org/docs/Web/API/Element/closest">closest</a>, <a href="https://developer.mozilla.org/docs/Web/API/Element/classList">classList</a>, and so on). Today, vendors are implementing web components that work natively in the browser without a framework.</p>
<p>It&#8217;s taken some time. <a href="https://fronteers.nl/congres/2011/sessions/web-components-and-model-driven-views-alex-russell">Alex Russell made the initial proposal</a> in 2011. Google&#8217;s (polyfill) <a href="https://github.com/Polymer/polymer">Polymer framework</a> arrived in 2013, but three years passed before native implementations appeared in Chrome and Safari. There were some fraught negotiations, but Firefox added support in 2018, followed by Edge (Chromium version) in 2020.</p>
<h2 id="howdowebcomponentswork">How do Web Components Work?</h2>
<p>Consider the HTML5 <code>&lt;video&gt;</code> and <code>&lt;audio&gt;</code> elements, which allow users to play, pause, rewind, and fast-forward media using a series of internal buttons and controls. By default, the browser handles the layout, styling, and functionality.</p>
<p>Web components allow you to add your own HTML <strong>custom elements</strong> — such as a <code>&lt;word-count&gt;</code> tag to count the number of words in the page. The element name must contain a hyphen (<code>-</code>) to guarantee it will never clash with an official HTML element.</p>
<p>An ES2015 JavaScript class is then registered for your custom element. It can append DOM elements such as buttons, headings, paragraphs, etc. To ensure these can&#8217;t conflict with the rest of the page, you can attach them to an internal <strong>Shadow DOM</strong> that has it&#8217;s own scoped styles. You can think of it like a mini <code>&lt;iframe&gt;</code>, although CSS properties such as fonts and colors are inherited through the cascade.</p>
<p>Finally, you can append content to your Shadow DOM with reusable <strong>HTML templates</strong>, which offer some configuration via <code>&lt;slot&gt;</code> tags.</p>
<p>Standard web components are rudimentary when compared with frameworks. They don&#8217;t include functionality such as data-binding and state management, but web components have some compelling advantages:</p>
<ul>
<li>they&#8217;re lightweight and fast</li>
<li>they can implement functionality that&#8217;s impossible in JavaScript alone (such as the Shadow DOM)</li>
<li>they work inside <em>any</em> JavaScript framework</li>
<li>they&#8217;ll be supported for years — <em>if not decades</em></li>
</ul>
<h2 id="yourfirstwebcomponent">Your First Web Component</h2>
<p>To get started, add a <code>&lt;hello-world&gt;&lt;/hello-world&gt;</code> element to any web page. (The closing tag is essential: you can&#8217;t define a self-closing <code>&lt;hello-world /&gt;</code> tag.)</p>
<p>Create a script file named <code>hello-world.js</code> and load it from the same HTML page (ES modules are automatically deferred, so it can be placed anywhere — but the earlier in the page, the better):</p>
<pre><code class="markup language-markup">&lt;script type="module" src="./hello-world.js"&gt;&lt;/script&gt;

&lt;hello-world&gt;&lt;/hello-world&gt;
</code></pre>
<p>Create a <code>HelloWorld</code> class in your script file:</p>
<pre><code class="javascript language-javascript">// &lt;hello-world&gt; Web Component
class HelloWorld extends HTMLElement {

  connectedCallback() {
    this.textContent = 'Hello, World!';
  }

}
</code></pre>
<p>Web components must extend the <a href="https://developer.mozilla.org/docs/Web/API/HTMLElement">HTMLElement interface</a>, which implements the default properties and methods of every HTML element.</p>
<p><em>Note: Firefox can extend specific elements such as <code>HTMLImageElement</code> and <code>HTMLButtonElement</code>. However, these don&#8217;t support the Shadow DOM, and this practice isn&#8217;t supported in other browsers.</em></p>
<p>The browser runs the <code>connectedCallback()</code> method whenever the custom element is added to a document. In this case, it changes the inner text. <em>(A Shadow DOM isn&#8217;t used.)</em></p>
<p>The class must be registered with your custom element in the <a href="https://developer.mozilla.org/docs/Web/API/CustomElementRegistry">CustomElementRegistry</a>:</p>
<pre><code class="javascript language-javascript">// register &lt;hello-world&gt; with the HelloWorld class
customElements.define( 'hello-world', HelloWorld );
</code></pre>
<p>Load the page and &#8220;Hello World&#8221; appears. The new element can be styled in CSS using a <code>hello-world { ... }</code> selector:</p>
<p><!-- CODEPEN: https://codepen.io/craigbuckler/pen/WNpaxPN --></p>
<p class="codepen" data-height="300" data-default-tab="html,result" data-slug-hash="ZEKyeoY" data-user="SitePoint" style="height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;">
<span>See the Pen <a href="https://codepen.io/SitePoint/pen/ZEKyeoY"><br />
&lt;hello-world&gt; component</a> by SitePoint (<a href="https://codepen.io/SitePoint">@SitePoint</a>)<br />
on <a href="https://codepen.io">CodePen</a>.</span>
</p>
<p><script async src="https://cpwebassets.codepen.io/assets/embed/ei.js"></script></p>
<h2 id="createawordcountcomponent">Create a <code>&lt;word-count&gt;</code> Component</h2>
<p>A <code>&lt;word-count&gt;</code> component is more sophisticated. This example can generate the number of words or the number of minutes to read the article. The <a href="https://www.sitepoint.com/javascript-internationalization-api-i18n/">Internationalization API</a> can be used to output numbers in the correct format.</p>
<p>The following element attributes can be added:</p>
<ul>
<li><code>round="N"</code>: rounds the number of words to the nearest N (default <code>10</code>)</li>
<li><code>minutes</code>: shows reading minutes rather than a word count (default <code>false</code>)</li>
<li><code>wpm="M"</code>: the number of words a person can read per minute (default <code>200</code>)</li>
<li><code>locale="L"</code>: the locale, such as <code>en-US</code> or <code>fr-FR</code> (default from <code>&lt;html&gt;</code> <code>lang</code> attribute, or <code>en-US</code> when not available)</li>
</ul>
<p>Any number of <code>&lt;word-count&gt;</code> elements can be added to a page. For example:</p>
<pre><code class="markup language-markup">&lt;p&gt;
  This article has
  &lt;word-count round="100"&gt;&lt;/word-count&gt; words,
  and takes
  &lt;word-count minutes&gt;&lt;/word-count&gt; minutes to read.
&lt;/p&gt;
</code></pre>
<h3 id="wordcountconstructor">WordCount Constructor</h3>
<p>A new <code>WordCount</code> class is created in a JavaScript module named <code>word-count.js</code>:</p>
<pre><code class="javascript language-javascript">class WordCount extends HTMLElement {

  // cached word count
  static words = 0;

  constructor() {

    super();

    // defaults
    this.locale = document.documentElement.getAttribute('lang') || 'en-US';
    this.round = 10;
    this.wpm = 200;
    this.minutes = false;

    // attach shadow DOM
    this.shadow = this.attachShadow({ mode: 'open' });

  }
</code></pre>
<p>The static <code>words</code> property stores a count of the number of words in the page. This is calculated once and reused so other <code>&lt;word-count&gt;</code> elements don&#8217;t need to repeat the work.</p>
<p>The <code>constructor()</code> function is run when each object is created. It must call the <code>super()</code> method to initialize the parent <code>HTMLElement</code> and can then set other defaults as necessary.</p>
<h3 id="attachashadowdom">Attach a Shadow DOM</h3>
<p>The constructor also defines a Shadow DOM with <a href="https://developer.mozilla.org/docs/Web/API/Element/attachShadow"><code>attachShadow()</code></a> and stores a reference in the <code>shadow</code> property so it can be used at any time.</p>
<p>The <code>mode</code> can be set to:</p>
<ul>
<li><code>"open"</code>: JavaScript in the outer page can access the Shadow DOM using <a href="https://developer.mozilla.org/docs/Web/API/Element/shadowRoot">Element.shadowRoot</a>, or</li>
<li><code>"closed"</code>: the Shadow DOM is inaccessible to the outer page</li>
</ul>
<p>This component appends plain text, and outside modifications aren&#8217;t critical. Using <code>open</code> is adequate so other JavaScript on the page can query the content. For example:</p>
<pre><code class="javascript language-javascript">const wordCount = document.querySelector('word-count').shadowRoot.textContent;
</code></pre>
<h3 id="observingwordcountattributes">Observing WordCount Attributes</h3>
<p>Any number of attributes can be added to this Web Component, but it&#8217;s only concerned with the four listed above. A static <code>observedAttributes()</code> property returns an array of properties to observe:</p>
<pre><code class="javascript language-javascript">  // component attributes
  static get observedAttributes() {
    return ['locale', 'round', 'minutes', 'wpm'];
  }
</code></pre>
<p>An <code>attributeChangedCallback()</code> method is invoked when any of these attributes is set in HTML or JavaScript&#8217;s <a href="https://developer.mozilla.org/docs/Web/API/Element/setAttribute"><code>.setAttribute()</code> method</a>. It&#8217;s passed the property name, the previous value, and new value:</p>
<pre><code class="javascript language-javascript">  // attribute change
  attributeChangedCallback(property, oldValue, newValue) {

    // update property
    if (oldValue === newValue) return;
    this[property] = newValue || 1;

    // update existing
    if (WordCount.words) this.updateCount();

  }
</code></pre>
<p>The <code>this.updateCount();</code> call renders the component so it can be re-run if an attribute is changed after it&#8217;s displayed for the first time.</p>
<h3 id="wordcountrendering">WordCount Rendering</h3>
<p>The <code>connectedCallback()</code> method is invoked when the Web Component is appended to a Document Object Model. It should run any required rendering:</p>
<pre><code class="javascript language-javascript">  // connect component
  connectedCallback() {
    this.updateCount();
  }
</code></pre>
<p>Two other functions are available during the lifecycle of the Web Component, although they&#8217;re not necessary here:</p>
<ul>
<li><code>disconnectedCallback()</code>: called when the Web Component is removed from a Document Object Model. It could clean up state, aborting Ajax requests, etc.</li>
<li><code>adoptedCallback()</code>: called when a Web Component is moved from one document to another. <em>I&#8217;ve never found a use for it!</em></li>
</ul>
<p>The <code>updateCount()</code> method calculates the word count if that&#8217;s not been done before. It uses the content of the first <code>&lt;main&gt;</code> tag or the page <code>&lt;body&gt;</code> when that&#8217;s not available:</p>
<pre><code class="javascript language-javascript">  // update count message
  updateCount() {

    if (!WordCount.words) {

      // get root &lt;main&gt; or &lt;/body&gt;
      let element = document.getElementsByTagName('main');
      element = element.length ? element[0] : document.body;

      // do word count
      WordCount.words = element.textContent.trim().replace(/\s+/g, ' ').split(' ').length;

    }
</code></pre>
<p>It then updates the Shadow DOM with the word count or minute count (if the <code>minutes</code> attribute is set):</p>
<pre><code class="javascript language-javascript">    // locale
    const localeNum = new Intl.NumberFormat( this.locale );

    // output word or minute count
    this.shadow.textContent = localeNum.format(
      this.minutes ?
        Math.ceil( WordCount.words / this.wpm ) :
        Math.ceil( WordCount.words / this.round ) * this.round
    );

  }

} // end of class
</code></pre>
<p>The Web Component class is then registered:</p>
<pre><code class="javascript language-javascript">// register component
window.customElements.define( 'word-count', WordCount );
</code></pre>
<p><!-- CODEPEN: https://codepen.io/craigbuckler/pen/XWMEQwd --></p>
<p class="codepen" data-height="300" data-default-tab="html,result" data-slug-hash="rNmwyKx" data-user="SitePoint" style="height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;">
<span>See the Pen <a href="https://codepen.io/SitePoint/pen/rNmwyKx"><br />
&lt;word-count&gt; component</a> by SitePoint (<a href="https://codepen.io/SitePoint">@SitePoint</a>)<br />
on <a href="https://codepen.io">CodePen</a>.</span>
</p>
<p><script async src="https://cpwebassets.codepen.io/assets/embed/ei.js"></script></p>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/frameworkless-web-components-introduction/?utm_source=rss">An Introduction to Frameworkless Web Components</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/frameworkless-web-components-introduction/?utm_source=rss</link><guid isPermaLink="false">/?p=198546</guid><category><![CDATA[JavaScript]]></category><dc:creator><![CDATA[Craig Buckler]]></dc:creator><pubDate>Sun, 18 Jul 2021 16:00:25 GMT</pubDate><metaDesc>Learn what web components are and how to use them without a JS framework. This article shows you an approach that relies on custom elements.</metaDesc></item><item><title><![CDATA[How to Hire the Best Freelance Developers in the Gig Economy]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/hire-best-freelance-developers/?utm_source=rss"
              title="How to Hire the Best Freelance Developers in the Gig Economy"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2021/07/1626233487freelancer-hire.png"
        alt="How To Hire the Best Freelance Developers in the Gig Economy"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/07/1626233487freelancer-hire-300x170.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/07/1626233487freelancer-hire.png 600w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong>Over the last two decades in my career in the technology industry, I&#8217;ve experienced both sides of the gig economy — as a freelancer, and as a technology leader hiring freelance developers. Back in my developer days, I worked as a freelance developer to expand my skillset and knowledge, and since becoming an engineering manager, I&#8217;ve hired freelance developers for the companies I worked for.</strong> </p>
<p>In this article, I want to share my insights around hiring freelance developers, and best practices to finding and hiring the best freelance developers in the gig economy. As engineering leaders, it&#8217;s important to understand and take advantage of the gig economy, as it has emerged as one of the most significant developments in the way we work. The outsourced workforce is going to be part of the future of work, whether you like it or not. </p>
<h2 id="hiringafreelancedeveloper">Hiring a Freelance Developer</h2>
<p>When should you hire a freelance developer? If you haven&#8217;t hired freelance developers before, you might be asking why you need them. These are some common reasons companies hire freelancers: </p>
<ul>
<li><strong>Access to a variety of skills</strong>, across different tech stacks and niche — such as iOS mobile development, ecommerce website development, and so on.</li>
<li>Freelance developers are more readily available. Developers who are freelancers are usually available within weeks. </li>
<li><strong>Freelance developers are more affordable</strong>. Even if their hourly rate may be higher in some cases, compared to having a permanent developer, it&#8217;s going to end up more affordable, as there won&#8217;t be extra spending like insurance, 401k or superannuation. </li>
<li><strong>You may not need a long-term, permanent developer</strong>. A company may decide that there&#8217;s a project that can be done once and won&#8217;t require continuous maintenance or work. Or there might be a project that requires a specific skill for a specific milestone — such as setting up DevOps infrastructure, refactoring an old tech stack to a new one, redesigning a UI for a web application, small bug fixes, and so on. </li>
<li><strong>You have a distributed team</strong>. This has grown in relevance over the past year, with a large rise in remote work.</li>
</ul>
<p>Importantly, evidence suggests that affordability is at the top of the list for smaller companies, even if they&#8217;re not a fully distributed team. </p>
<h2 id="whennottohireafreelancedeveloper">When Not to Hire a Freelance Developer</h2>
<p>Hiring freelance developers may not be the right move, for the following reasons:</p>
<ul>
<li>You may prefer to work with people in the same office/timezone. Data shows that there&#8217;s a large population of freelance developers in Eastern Europe and North America, followed by Asia and Middle East.</li>
<li>You may not have confidence in the skills and/or quality of freelancers.</li>
<li>There may be intellectual property and security issues.</li>
<li>Using freelancers may have a negative impact on the potential value of the company for startups trying to get funding.</li>
<li>For startups trying to get funding, using freelancers may have a negative impact on the perceived value of the company.</li>
</ul>
<h2 id="importantfactorstotakeintoconsiderationwhenhiringfreelancedevelopers">Important Factors to Take into Consideration when Hiring Freelance Developers</h2>
<p>There are multiple important factors to take into consideration when hiring freelance developers. Understanding and applying these best practices is crucial to producing successful outcomes for a company employing a freelance workforce. Therefore, to be successful, engineering leaders need to think holistically to bring the organization and technology together as closely as possible in decision making. </p>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/hire-best-freelance-developers/?utm_source=rss">How to Hire the Best Freelance Developers in the Gig Economy</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/hire-best-freelance-developers/?utm_source=rss</link><guid isPermaLink="false">/?p=198428</guid><category><![CDATA[Business]]></category><category><![CDATA[Entrepreneur]]></category><category><![CDATA[Freelancing]]></category><dc:creator><![CDATA[Isabel Nyo]]></dc:creator><pubDate>Wed, 14 Jul 2021 16:00:43 GMT</pubDate><metaDesc>Hiring freelance developers can be a great way to save money — or lose it. Learn how to navigate Upwork and Fiverr and get great results.</metaDesc></item><item><title><![CDATA[Using Python to Parse Spreadsheet Data]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/using-python-parse-spreadsheet-data/?utm_source=rss"
              title="Using Python to Parse Spreadsheet Data"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2015/01/1626227477spreadsheet-parse-python.png"
        alt="Using Python to Parse Spreadsheet Data"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2015/01/1626227477spreadsheet-parse-python-300x170.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2015/01/1626227477spreadsheet-parse-python.png 600w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong>Large organizations and enterprises often store data in spreadsheets and require an interface for entering this data into their web apps. The general idea is to upload the file, read its contents, and store it either in files or databases that the web application uses. Organizations may also need to export data from a web app. For example, they might need to export the grades of all students in a class. Again, spreadsheets are the preferred medium.</strong></p>
<p>In this post, we&#8217;ll discuss different ways to handle these files and parse them to get the required information using Python.</p>
<h2 id="aquickspreadsheetprimer">A Quick Spreadsheet Primer</h2>
<p>Before parsing spreadsheets, you must understand how they&#8217;re structured. A spreadsheet file is a collection of sheets, and each sheet is a collection of data cells placed in a grid, similar to a table. In a sheet, a data cell is identified by two values: its row and column numbers.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/06/1623754877spreadsheet-scaled.jpg" alt="A spreadsheet" /></p>
<p>For instance, in the screenshot above, the spreadsheet contains only one sheet, “Sheet1”. The cell “2A” corresponds to the second row and first column. The value of cell 2A is 1.</p>
<p>Although programs with a <abbr title='graphical user interface'>GUI</abbr> assign letters to the names of columns, when we parse the data, we will start row and column numbers from 0. That means, cell 2A will correspond to (1, 0), 4B to (1,3), 3C to (2, 2), and so on.</p>
<h2 id="settingupthepythonenvironment">Setting up the Python Environment</h2>
<p>We&#8217;ll use <a href="https://www.python.org/download/releases/3.0/">Python 3</a> to read and write spreadsheets. To read and write XLSX files, you need to install the Pandas module. You can do so through one of the Python installers: <code>pip</code> or <code>easy_install</code>. Pandas uses the <a href="https://pypi.org/project/openpyxl/"><code>openpyxl</code></a> module to read new spreadsheet (.xlsx) files, and <a href="https://pypi.org/project/xlrd/"><code>xlrd</code></a> modules to read legacy spreadsheets (.xls files). Both these <code>openpyxl</code> and <code>xlrd</code> are installed as dependencies when you install Pandas:</p>
<pre><code class="bash language-bash">pip3 install pandas
</code></pre>
<p>To read and write CSV files, you need the <code>csv</code> module, which comes pre-installed with Python. You can also read CSV files through Pandas.</p>
<h2 id="readingspreadsheets">Reading Spreadsheets</h2>
<p>If you have a file and you want to parse the data in it, you need to perform the following in this order:</p>
<ol>
<li>import the <code>pandas</code> module</li>
<li>open the spreadsheet file (or workbook)</li>
<li>select a sheet</li>
<li>extract the values of particular data cells</li>
</ol>
<h3 id="openaspreadsheetfile">Open a spreadsheet file</h3>
<p>Let’s first open a file in Python. To follow along you can use the following <a href="https://uploads.sitepoint.com/wp-content/uploads/2021/06/1623754996sample-xlsx-file-for-testing.xlsx">sample spreadsheet</a>, courtesy of <a href="https://www.learningcontainer.com/">Learning Container</a>:</p>
<pre><code class="python language-python">import pandas as pd
workbook = pd.read_excel('sample-xlsx-file-for-testing.xlsx')
workbook.head()
</code></pre>
<div style="overflow-x: auto;white-space: nowrap;">
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }</p>
<p>    .dataframe tbody tr th {
        vertical-align: top;
    }</p>
<p>    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
<thead>
<tr style="text-align: right;">
<th></th>
<th>Segment</th>
<th>Country</th>
<th>Product</th>
<th>Discount Band</th>
<th>Units Sold</th>
<th>Manufacturing Price</th>
<th>Sale Price</th>
<th>Gross Sales</th>
<th>Discounts</th>
<th>Sales</th>
<th>COGS</th>
<th>Profit</th>
<th>Date</th>
<th>Month Number</th>
<th>Month Name</th>
<th>Year</th>
</tr>
</thead>
<tbody>
<tr>
<th>0</th>
<td>Government</td>
<td>Canada</td>
<td>Carretera</td>
<td>None</td>
<td>1618.5</td>
<td>3</td>
<td>20</td>
<td>32370.0</td>
<td>0.0</td>
<td>32370.0</td>
<td>16185.0</td>
<td>16185.0</td>
<td>2014-01-01</td>
<td>1</td>
<td>January</td>
<td>2014</td>
</tr>
<tr>
<th>1</th>
<td>Government</td>
<td>Germany</td>
<td>Carretera</td>
<td>None</td>
<td>1321.0</td>
<td>3</td>
<td>20</td>
<td>26420.0</td>
<td>0.0</td>
<td>26420.0</td>
<td>13210.0</td>
<td>13210.0</td>
<td>2014-01-01</td>
<td>1</td>
<td>January</td>
<td>2014</td>
</tr>
<tr>
<th>2</th>
<td>Midmarket</td>
<td>France</td>
<td>Carretera</td>
<td>None</td>
<td>2178.0</td>
<td>3</td>
<td>15</td>
<td>32670.0</td>
<td>0.0</td>
<td>32670.0</td>
<td>21780.0</td>
<td>10890.0</td>
<td>2014-06-01</td>
<td>6</td>
<td>June</td>
<td>2014</td>
</tr>
<tr>
<th>3</th>
<td>Midmarket</td>
<td>Germany</td>
<td>Carretera</td>
<td>None</td>
<td>888.0</td>
<td>3</td>
<td>15</td>
<td>13320.0</td>
<td>0.0</td>
<td>13320.0</td>
<td>8880.0</td>
<td>4440.0</td>
<td>2014-06-01</td>
<td>6</td>
<td>June</td>
<td>2014</td>
</tr>
<tr>
<th>4</th>
<td>Midmarket</td>
<td>Mexico</td>
<td>Carretera</td>
<td>None</td>
<td>2470.0</td>
<td>3</td>
<td>15</td>
<td>37050.0</td>
<td>0.0</td>
<td>37050.0</td>
<td>24700.0</td>
<td>12350.0</td>
<td>2014-06-01</td>
<td>6</td>
<td>June</td>
<td>2014</td>
</tr>
</tbody>
</table>
</div>
<p>Pandas reads the spreadsheet as a table and stores it as a <a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.html">Pandas dataframe</a>.</p>
<p>If your file has non-ASCII characters, you should open it in the unicode format as follows:</p>
<pre><code class="python language-python">import sys
workbook = pd.read_excel('sample-xlsx-file-for-testing.xlsx', encoding=sys.getfilesystemencoding())
</code></pre>
<p>If your spreadsheet is very large, you can add an argument <code>use_cols</code>, which loads only certain columns to the dataframe. For instance, the following argument would read only the first five columns:</p>
<pre><code class="python language-python">workbook = pd.read_excel('~/Desktop/import-export-data.xlsx', usecols = 'A:E')
workbook.head()
</code></pre>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }</p>
<p>    .dataframe tbody tr th {
        vertical-align: top;
    }</p>
<p>    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
<thead>
<tr style="text-align: right;">
<th></th>
<th>Segment</th>
<th>Country</th>
<th>Product</th>
<th>Discount Band</th>
<th>Units Sold</th>
</tr>
</thead>
<tbody>
<tr>
<th>0</th>
<td>Government</td>
<td>Canada</td>
<td>Carretera</td>
<td>None</td>
<td>1618.5</td>
</tr>
<tr>
<th>1</th>
<td>Government</td>
<td>Germany</td>
<td>Carretera</td>
<td>None</td>
<td>1321.0</td>
</tr>
<tr>
<th>2</th>
<td>Midmarket</td>
<td>France</td>
<td>Carretera</td>
<td>None</td>
<td>2178.0</td>
</tr>
<tr>
<th>3</th>
<td>Midmarket</td>
<td>Germany</td>
<td>Carretera</td>
<td>None</td>
<td>888.0</td>
</tr>
<tr>
<th>4</th>
<td>Midmarket</td>
<td>Mexico</td>
<td>Carretera</td>
<td>None</td>
<td>2470.0</td>
</tr>
</tbody>
</table>
</div>
<p>Additionally, you can use the <code>nrows</code> and <code>skiprows</code> arguments to read only a certain number of rows, or ignore a certain number of rows at the beginning, respectively.</p>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/using-python-parse-spreadsheet-data/?utm_source=rss">Using Python to Parse Spreadsheet Data</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/using-python-parse-spreadsheet-data/?utm_source=rss</link><guid isPermaLink="false">http://www.sitepoint.com/?p=97142</guid><category><![CDATA[Programming]]></category><category><![CDATA[Python]]></category><dc:creator><![CDATA[Shaumik Daityari]]></dc:creator><pubDate>Tue, 13 Jul 2021 15:00:13 GMT</pubDate><metaDesc>Working with large web apps often involves creating and parsing spreadsheets. Learn how to handle and parse these files using Python.</metaDesc></item><item><title><![CDATA[Using Redis with Node.js]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/using-redis-node-js/?utm_source=rss"
              title="Using Redis with Node.js"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2015/01/1626145324reddis-with-node.png"
        alt="Using Redis with Node.js"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2015/01/1626145324reddis-with-node-300x170.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2015/01/1626145324reddis-with-node.png 600w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p>Redis is a fast and efficient in-memory key-value store. It is also known as a data structure server, as the keys can contain strings, lists, sets, hashes and other data structures. If you are using Node.js, you can use the <code>node_redis</code> module to interact with Redis. This tutorial explains various ways of interacting with Redis from a Node.js app using the <code>node_redis</code> library. </p>
<h2 id="installing-node_redis">Installing <code>node_redis</code></h2>
<p><code>node_redis</code>, as you may have guessed, is the Redis client for Node.js. You can install it via npm using the following command.</p>
<p>[code]<br />
npm install redis<br />
[/code]</p>
<h2 id="getting-started">Getting Started</h2>
<p>Once you have installed <code>node_redis</code> module you are good to go. Let&#8217;s create a simple file, <code>app.js</code>, and see how to connect with Redis from Node.js.</p>
<p><strong>app.js</strong></p>
<p>[js]<br />
var redis = require(&#8216;redis&#8217;);<br />
var client = redis.createClient(); //creates a new client<br />
[/js]</p>
<p>By default, <code>redis.createClient()</code> will use <code>127.0.0.1</code> and <code>6379</code> as the hostname and port respectively. If you have a different host/port you can supply them as following:</p>
<p>[js]<br />
var client = redis.createClient(port, host);<br />
[/js]</p>
<p>Now, you can perform some action once a connection has been established. Basically, you just need to listen for <code>connect</code> events as shown below.</p>
<p>[js]<br />
client.on(&#8216;connect&#8217;, function() {<br />
    console.log(&#8216;connected&#8217;);<br />
});<br />
[/js]</p>
<p>So, the following snippet goes into <code>app.js</code>:</p>
<p>[js]<br />
var redis = require(&#8216;redis&#8217;);<br />
var client = redis.createClient();</p>
<p>client.on(&#8216;connect&#8217;, function() {<br />
    console.log(&#8216;connected&#8217;);<br />
});<br />
[/js]</p>
<p>Now, type <code>node app</code> in the terminal to run the app. Make sure your Redis server is up and running before running this snippet.</p>
<h2 id="storing-key-value-pairs">Storing Key-Value Pairs</h2>
<p>Now that you know how to connect with Redis from Node.js, let&#8217;s see how to store key-value pairs in Redis storage. </p>
<h3 id="storing-strings">Storing Strings</h3>
<p>All the Redis <a href="http://redis.io/commands">commands</a> are exposed as different functions on the <code>client</code> object. To store a simple string use the following syntax:</p>
<p>[js]<br />
client.set(&#8216;framework&#8217;, &#8216;AngularJS&#8217;);<br />
[/js]</p>
<p>Or</p>
<p>[js]<br />
client.set([&#8216;framework&#8217;, &#8216;AngularJS&#8217;]);<br />
[/js]</p>
<p>The above snippets store a simple string <code>AngularJS</code> against the key <code>framework</code>. You should note that both the snippets do the same thing. The only difference is that the first one passes a variable number of arguments while the later passes an <code>args</code> array to <code>client.set()</code> function. You can also pass an optional callback to get a notification when the operation is complete:</p>
<p>[js]<br />
client.set(&#8216;framework&#8217;, &#8216;AngularJS&#8217;, function(err, reply) {<br />
  console.log(reply);<br />
});<br />
[/js]</p>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/using-redis-node-js/?utm_source=rss">Using Redis with Node.js</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/using-redis-node-js/?utm_source=rss</link><guid isPermaLink="false">http://www.sitepoint.com/?p=97737</guid><category><![CDATA[Databases]]></category><category><![CDATA[JavaScript]]></category><category><![CDATA[Node.js]]></category><dc:creator><![CDATA[Ivaylo Gerchev]]></dc:creator><pubDate>Mon, 12 Jul 2021 15:00:03 GMT</pubDate><metaDesc>Need fast data interactions in your Node app? Learn how Redis speeds caching, message brokering, sessions, analytics, streaming and more.</metaDesc></item><item><title><![CDATA[Getting Started with the Notion API and Its JavaScript SDK]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/notion-api-javascript-sdk/?utm_source=rss"
              title="Getting Started with the Notion API and Its JavaScript SDK"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2021/07/1625989477notion-api.png"
        alt="Expanding Notion with the Notion API and its JavaScript SDK"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/07/1625989477notion-api-300x170.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/07/1625989477notion-api.png 600w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong><a href="https://www.notion.so/personal">Notion</a> is a multi-featured app for organizing all sorts of content, from notes to calendars and reminders. Notion recently launched its own <abbr title="application programming interface">API</abbr>, and in this article we&#8217;ll use this API to create a small interface that will connect Notion to our own database.</strong></p>
<p>Notion has released its API to the world in <a href="https://developers.notion.com/changelog/hello-world-notion-api-is-now-in-public-beta">open beta</a>. It has excellent documentation, it&#8217;s really easy to access and, more importantly for us JavaScript devs, it also offers as <a href="https://github.com/makenotion/notion-sdk-js">SDK for JavaScript</a>. 🎉</p>
<p><em>While no previous knowledge is needed to follow along with this article (I&#8217;ll provide all the required steps) we will be dealing with front-end and back-end code, as there&#8217;s a bit of Node.js and Express setup involved.</em></p>
<h2 id="setup">Setup</h2>
<p>Our setup will be split into two sections. The first will cover the steps that we need to follow on the Notion software and API. In the second, we&#8217;ll get our hands on the code by initializing a folder, adding the Notion dependency and creating the initial <code>index.js</code> and editing the <code>package.json</code> to make everything work.</p>
<p>To follow along, you&#8217;ll need a Notion account (more on that below), as well as a recent copy of <a href="https://www.sitepoint.com/quick-tip-multiple-versions-node-nvm/">Node installed on your machine</a>. As ever, the <a href="https://github.com/sitepoint-editors/notion-api">code for the tutorial can be found on GitHub</a>.</p>
<h3 id="thenotionsetup">The Notion Setup</h3>
<p>If you don&#8217;t already have a Notion account, please create one by following <a href="https://www.notion.so/login">this link</a>. It has a very generous free tier and you don&#8217;t have to add any payment information!</p>
<p>After creating your account and logging in, create a new page by choosing <strong>Add a page</strong> and give it a name. For this tutorial, we&#8217;ll choose the <code>Table</code> database. This will give us an empty table, which is exactly what we want!</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/07/1625765246notion-empty-table.jpeg" alt="The empty table that we've just created" /></p>
<p>The next step is to create some columns on our <code>database</code> and fill them with some mock data. For this tutorial, we&#8217;ll work just with <code>Name</code> and <code>Role</code> fields, as if we&#8217;re working with a database of employees in a company.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/07/1625765286notion-filled-table.jpeg" alt="The table with the new fields and mock data" /></p>
<p>Now we&#8217;ll go to the <a href="https://developers.notion.com/">Notion API</a> website. You&#8217;ll see a <strong>My integrations</strong> link in the top corner. If you click it, you&#8217;ll be directed to a screen showing “My integrations”, and yours will be empty, of course.</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/07/1625765333notion-api-my-integrations-page.jpeg" alt="Notion API My Integrations page" /></p>
<p>Press <strong>Create new integration</strong>, fill in your title and be sure to choose your <code>Associated workspace</code> (it will be chosen by default but make sure of this). Press <strong>Submit</strong> and you&#8217;ll be directed to a new page with an <code>Internal Integration Token</code> (we&#8217;ll use this on our code) and with two option boxes for where you want to use your integration. You don&#8217;t need to do anything on this page other than copying your <code>token</code> and press <strong>Save changes</strong>.</p>
<p><em>Note: at the time of writing, <a href="https://www.reddit.com/r/Notion/comments/ofcrmc/integration_delete/">there doesn&#8217;t seem to be a way to delete integrations</a>, so name them wisely.</em></p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/07/1625765367notion-api-create-a-new-integration-page.jpeg" alt="Notion API Create a new integration page" /></p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/07/1625765434notion-api-integration-created-with-secret-token.jpeg" alt="Notion API integration page with token" /></p>
<p>Now go back to your Notion workspace. On our newly created database, we want to press <strong>Share</strong>, then <strong>Invite</strong>. You&#8217;ll then be able to choose your newly created integration. Choose it and press <strong>Invite</strong>, and your Notion setup is done. Well done! 🙌</p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/07/1625765506notion-page-with-modal-to-share-with-integration.jpeg" alt="Notion workspace with modal for integration" /></p>
<h3 id="thecodesetup">The code setup</h3>
<p>Now let&#8217;s do some code. Open your terminal and do <code>mkdir notion-api-test</code> (this will create a folder called <code>notion-api-test</code>) on your chosen location, and after that, step into your folder with <code>cd notion-api-test</code> and do <code>npm init -y</code> (this command will create a <code>package.json</code> with some basic setup and the <code>-y</code> flag answers to some prompts automatically so you don&#8217;t have to bother yourself with them).</p>
<p>As I mentioned before, we&#8217;re going to use <a href="https://github.com/makenotion/notion-sdk-js">notion-sdk-js</a>, and for that we need to install it as a dependency, so we&#8217;re going to do <code>npm install @notionhq/client</code>.<br />
Now, open your <code>notion-api-test</code> on your code editor and create an initial <code>index.js</code> on the <code>root</code> and edit the <code>package.json scripts</code> by replacing what&#8217;s there with the following:</p>
<pre><code class="javascript language-javascript">"scripts": {
    "start": "node index"
},
</code></pre>
<p>Let&#8217;s also create a <code>.gitignore</code> file and another one called <code>.env</code>. The <code>.gitignore</code> allows you to put different file/folder names inside, and that means that these files/folders won&#8217;t be added to your repo when you push you code. This is very important, because our <code>integration token</code>(remember that?) will be inside the<code>.env</code> file, like this:</p>
<pre><code class="bash language-bash">NOTION_API_KEY = YOUR_TOKEN_HERE
</code></pre>
<p>That means that inside your <code>.gitignore</code> you should add this on the first line:</p>
<pre><code class="bash language-bash">.env
</code></pre>
<p>Now that we have an <code>.env</code> file, we should also add a new dependency, <a href="https://github.com/motdotla/dotenv">dotenv</a>, so you can load your <code>NOTION_API_KEY</code> variable. You can do that by doing <code>npm install dotenv</code>.</p>
<p>The code setup is now done 🎉. <!-- and your folder should look like the following image --></p>
<h2 id="pullingdatafromthenotionapi">Pulling Data From the Notion API</h2>
<p>Now that the boring part is over, let&#8217;s get to the good stuff! Our <code>index.js</code> file will be a Node.js file, and the following code block shows our starting code and what each line exactly does!</p>
<pre><code class="javascript language-javascript">// this will allow us to import our variable
require("dotenv").config();
// the following lines are required to initialize a Notion client
const { Client } = require("@notionhq/client");
// this line initializes the Notion Client using our key
const notion = new Client({ auth: process.env.NOTION_API_KEY });
</code></pre>
<p>We also need an extra thing here, which is the ID of the database that we created on our Notion workspace. This can be obtained from the browser&#8217;s URL bar. It comes after your workspace name (if you have one) and the slash (<code>myworkspace/</code>) and before the question mark (<code>?</code>). The ID is 32 characters long, containing numbers and letters.</p>
<pre><code class="bash language-bash">https://www.notion.so/myworkspace/a8aec43384f447ed84390e8e42c2e089?v=...
                                  |--------- Database ID --------|
</code></pre>
<p>For security purposes, you should also paste this ID into your <code>.env</code> file, so that it looks something like this:</p>
<pre><code class="bash language-bash">NOTION_API_KEY = YOUR_TOKEN_HERE
NOTION_API_DATABASE = YOUR_DATABASE_ID_HERE
</code></pre>
<p>We&#8217;ll then import it into our <code>index.js</code> with this:</p>
<pre><code class="javascript language-javascript">const databaseId = process.env.NOTION_API_DATABASE;
</code></pre>
<p>Now, to make sure that our API is working, let&#8217;s create a function that makes a call to our database. To do it, we&#8217;ll create an <code>async function</code>:</p>
<pre><code class="javascript language-javascript">const getDatabase = async () =&gt; {
  const response = await notion.databases.query({ database_id: databaseId });

  console.log(response);
};

getDatabase();
</code></pre>
<p>If you now run <code>npm start</code> in your terminal, you should see a log of an <code>object</code> with a <code>results</code> property that has an array. That array contains the entries in your database. To look into them, we can do the following:</p>
<pre><code class="javascript language-javascript">const getDatabase = async () =&gt; {
  const response = await notion.databases.query({ database_id: databaseId });

  const responseResults = response.results.map((page) =&gt; {
    return {
      id: page.id,
      name: page.properties.Name.title[0]?.plain_text,
      role: page.properties.Role.rich_text[0]?.plain_text,
    };
  });

  // this console.log is just so you can see what we're getting here
  console.log(responseResults);
  return responseResults;
};
</code></pre>
<p>The code above is mapping through our <code>results</code> (matching the entries in our database) and we&#8217;re mapping the paths for different properties to names that we&#8217;re choosing (in this case, <code>id</code>, <code>name</code> and <code>role</code>). Notice how specific the object path is. I&#8217;ve used <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Optional_chaining">optional chaining</a> to account for blank rows in the database, or rows where one or the other of these fields isn&#8217;t filled out.</p>
<p>Either way, feel free to play with the different properties, and be aware that this is a matter of trial and error, and that every API behaves and organizes the information differently. The important thing here is to go through each property until we get to the info we&#8217;re looking for.</p>
<p>If looking into each property and using <code>console.log()</code> is not your thing, you could always use Postman to inspect the response. Unfortunately, that&#8217;s not within the scope of this tutorial, but you could check the “<a href="https://www.sitepoint.com/master-api-workflow-postman/">How to Master Your API Workflow with Postman</a>” post to give it a go!</p>
<p>Another important note here: notice the <code>notion.databases.query</code> that we&#8217;ve used. If you look at the <a href="https://developers.notion.com/reference/post-database-query">Notion API documentation</a>, you&#8217;ll see that we&#8217;re using <code>POST | Query a database</code>. We could use just <code>GET | Retrieve a database</code>, but here I would like to challenge you to read the documentation and try to sort the list differently!</p>
<p>Before we wrap this part, let&#8217;s change our <code>getDatabase</code> function so we can properly import it into another file that we&#8217;ll create. It should look like the following:</p>
<pre><code class="javascript language-javascript">exports.getDatabase = async function () {
  const response = await notion.databases.query({ database_id: databaseId });

  const responseResults = response.results.map((page) =&gt; {
    return {
      id: page.id,
      name: page.properties.Name.title[0]?.plain_text,
      role: page.properties.Role.rich_text[0]?.plain_text,
    };
  });

  return responseResults;
};
</code></pre>
<h2 id="settingupanexpressserver">Setting up an Express Server</h2>
<p>With the previous step done, we now can successfully retrieve our results. But to be able to actually use them properly, we&#8217;ll need to create a server, and the easiest way of doing so — since we&#8217;re using Node.js — is to use <a href="https://expressjs.com/">Express</a>. So, we&#8217;ll get started by running <code>npm install express</code> and creating a new file at the root called <code>server.js</code>.</p>
<p>If <code>express</code> confuses you, don&#8217;t worry. We&#8217;ll be using it to facilitate our work and create a quick back end and server to our application. Without it, we wouldn&#8217;t be able to properly retrieve our data, since we&#8217;re initializing our Notion client within our code.</p>
<p>On our <code>server.js</code> file, we&#8217;ll start by importing <code>express</code>, the module where we have our code (<code>index.js</code>), our <code>getDatabase</code> function, a port number, and a variable to initialize our <code>express</code> function:</p>
<pre><code class="javascript language-javascript">const express = require("express");
// our module
const moduleToFetch = require("./index");
// our function
const getDatabase = moduleToFetch.getDatabase;

const port = 8000;
const app = express();

// this last command will log a message on your terminal when you do `npm start`
app.listen(port, console.log(`Server started on ${port}`));
</code></pre>
<p>Since we&#8217;re now importing our code into a new file, <code>server.js</code>, we should change our <code>start</code> command on <code>package.json</code> to look for <code>server</code>, so it should look like this:</p>
<pre><code class="javascript language-javascript">"scripts": {
    "start": "node server"
},
</code></pre>
<p>If you now run <code>npm start</code>, you&#8217;ll see the <code>Server started on 8000</code> message, which means that our setup is working as expected! Well done!</p>
<p>Now that our <code>express</code> app is working, we need to get our database to work with it, and we can do that with <code>app.get()</code>. This method needs a path (it won&#8217;t matter in our case) and a callback function (which will invoke our <code>getDatabase</code> function):</p>
<pre><code class="javascript language-javascript">app.get("/users", async (req, res) =&gt; {
  const users = await getDatabase();
  res.json(users);
});
</code></pre>
<p>The above code uses the <code>app.get</code> method, as referred, and inside our callback function we&#8217;re getting the results from our function and we&#8217;re using the <code>.json()</code> Express middleware function that parses the request into readable and workable data. (You can learn a bit more about it in the <a href="https://expressjs.com/en/api.html#express.json">official documentation</a>.)</p>
<p>This means that we&#8217;re now successfully accessing our data, and that we&#8217;ve created a route to “fetch” it. As a final step, we should add <code>app.use(express.static("public"));</code> to our <code>server.js</code> file, so that the end result looks something like this:</p>
<pre><code class="javascript language-javascript">const express = require("express");
// our module
const moduleToFetch = require("./index");
// our function
const getDatabase = moduleToFetch.getDatabase;

const port = 8000;
const app = express();

// the code line we just added
app.use(express.static("public"));

app.get("/users", async (req, res) =&gt; {
  const users = await getDatabase();
  res.json(users);
});

app.listen(port, console.log(`Server started on ${port}`));
</code></pre>
<p>This last bit of code tells our back end to <code>use</code> a specific folder where we&#8217;ll create our front-end code, which will be the <code>public</code> folder. Here we&#8217;ll work with our HTML, CSS and JavaScript to access this <code>/users</code> route that we created on our back end. Let&#8217;s get to it!</p>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/notion-api-javascript-sdk/?utm_source=rss">Getting Started with the Notion API and Its JavaScript SDK</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/notion-api-javascript-sdk/?utm_source=rss</link><guid isPermaLink="false">/?p=196986</guid><category><![CDATA[Computing]]></category><category><![CDATA[JavaScript]]></category><category><![CDATA[Productivity Tools]]></category><dc:creator><![CDATA[Rui Sousa]]></dc:creator><pubDate>Sun, 11 Jul 2021 16:00:50 GMT</pubDate><metaDesc>You can now extend the Notion app with the new Notion API. Learn how to create an interface that connects Notion to an external database.</metaDesc></item><item><title><![CDATA[10 Best WordPress eCommerce Themes for 2021]]></title><description><![CDATA[
            <a
              href="https://www.sitepoint.com/top-wordpress-ecommerce-themes/?utm_source=rss"
              title="10 Best WordPress eCommerce Themes for 2021"
              rel="nofollow"
            >
              <img
        class="webfeedsFeaturedVisual"
        style="display: block; margin: auto; margin-bottom: 5px;max-width: 100%;"
        link_thumbnail="1"
        src="https://uploads.sitepoint.com/wp-content/uploads/2021/07/1625709035wordpress-ecommerce-themes.png"
        alt="Ten Top WordPress Ecommerce Themes for 2021"
        srcset="https://uploads.sitepoint.com/wp-content/uploads/2021/07/1625709035wordpress-ecommerce-themes-300x170.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/07/1625709035wordpress-ecommerce-themes.png 600w"
        sizes="(max-width: 300px) 100vw, 300px"
      />
            </a>
            <p><strong>As more people shift to online shopping, small businesses and retailers have been pressured to build their own ecommerce stores to keep up.</strong> </p>
<p>The good news is that creating an ecommerce store is fast and easy with WordPress. With the <a href="https://wordpress.org/plugins/woocommerce/">WooCommerce plugin</a> and a WordPress theme installed, you can easily launch a functional ecommerce store. </p>
<p>That said, WordPress has <a href="https://www.codeinwp.com/blog/wordpress-statistics/">11,000 themes</a> from Theme Forest alone. So, how do you choose which one is best for your business?</p>
<p>In this article, we’ve compiled a list of ecommerce WordPress themes to make your search easier. </p>
<h2 id="howtochoosetheidealwordpresstheme">How to Choose the Ideal WordPress Theme</h2>
<p>Before anything else, you need to know the factors to consider when choosing a WordPress theme. Below are a few to keep in mind.</p>
<h3 id="compatibilitywithwoocommerce">Compatibility with WooCommerce</h3>
<p>The first step is to check whether the theme is compatible with WooCommerce. While most WordPress themes can fit the bill, a theme made specifically for ecommerce stores lets you create seamless home or product pages in an instant. </p>
<h3 id="responsiveness">Responsiveness</h3>
<p>Mobile-friendliness is a crucial factor when choosing from hundreds of themes. It ensures visitors have a smooth user experience whether browsing through multiple devices like smartphones, tablets or PCs. </p>
<h3 id="aesthetic">Aesthetic</h3>
<p>Consider a theme that aesthetically matches the look and feel of your brand. Some themes appear elegant, while others have a modern style. There are also themes built primarily for groceries, fashion retailers, or artisans — so choose the option that&#8217;s the best fit for your business. </p>
<h3 id="seooptimization">SEO optimization</h3>
<p>People won’t flock to your website if you’re not viewed favorably by Google. </p>
<p>Fortunately, many themes offer built-in SEO features such as fast-loading times, easy navigation, headings and subheadings, and meta descriptions. Keep in mind the factors that affect the <a href="https://www.sitepoint.com/beginners-guide-to-wordpress-seo/">SEO friendliness</a> of your website. Otherwise, you’ll have trouble attracting more customers to your store. </p>
<h3 id="browsingbehavior">Browsing behavior</h3>
<p>Think about your browsing and buying behavior of your customers. </p>
<p>Will it be beneficial to showcase high-quality product photos? Select a theme that could display large product photos or integrate features like zoom and carousel for easy inspection. Do you want to focus on getting more conversions? Choose a theme with a distraction-free checkout option and strategic call-to-action buttons. </p>
<p>Put yourself in your customers’ shoes to understand the key features that will make or break their online shopping experience. </p>
<h2 id="freewordpressecommercethemes">Free WordPress Ecommerce Themes</h2>
<p>Which theme to pick? Here’s a list of our favorite ecommerce themes for small businesses, decorative stores, online brick and mortar stores, and retailers. We bet you’ll find a theme that will fit for your businesses’ needs. </p>
<p>Small businesses on a tight budget may want to begin with a free WordPress theme. </p>
<p>To help you get started, we’ve compiled the best free intuitive WordPress themes with a tight integration with WooCommerce. </p>
<h3 id="1storefronthttpswoocommercecomstorefrontbywoocommercedemohttpsthemeswoocommercecomstorefront">1. <a href="https://woocommerce.com/storefront/">Storefront</a> by WooCommerce (<a href="https://themes.woocommerce.com/storefront/">Demo</a>)</h3>
<p>We’ll start off with the primary WordPress theme for WooCommerce users. Storefront is made and managed by WooCommerce developers. That means it can integrate with WooCommerce extensions, display an ecommerce-focused home page, and adjust to major WooCommerce updates. </p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/06/1623764968storefront.jpg" alt="WooCommerce Storefront theme" /></p>
<p>Here are some of its notable features:</p>
<ul>
<li>WooCommerce storefront can display product categories (such as bestsellers, latest, featured and on-sale) on your home page. </li>
<li>It&#8217;s made for WooCommerce, so it&#8217;s always compatible with major Woocommerce updates. </li>
<li>It has responsive layouts with a clean design and enhanced SEO performance. </li>
<li>Users can get <a href="https://woocommerce.com/product-category/storefront-extensions/">Storefront extensions</a> to add reviews, mega menus, pricing tables, product sharing, parallax hero, and blog customizer to your store. </li>
<li>25+ pre-built templates for all types of ecommerce businesses</li>
</ul>
<h3 id="2ashehttpswproyalcomthemesitemashefreedemohttpswproyalcomthemesashefreedemo">2. <a href="https://wp-royal.com/themes/item-ashe-free/">Ashe</a> (<a href="https://wp-royal.com/themes/ashe-free/demo/">Demo</a>)</h3>
<p>Ashe relies on highly visual elements to motivate visitors to keep browsing your website. Users can customize the promo boxes, banner ads, featured slider, and header background. This makes it the perfect option for food, travel and fashion businesses that want to highlight their offerings. </p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/06/1623764947ashe.jpg" alt="Ashe theme" /></p>
<p>Here are some of its notable features:</p>
<ul>
<li>It has a Pro version for $29 with lifetime theme updates, security updates, new features, and premium support. </li>
<li>It has an elegant and fully responsive layout with WooCommerce shop (storefront) support. </li>
<li>It utilizes the WordPress Live Theme Customizer to modify colors, page layouts, fonts and backgrounds in real time. </li>
<li>It displays promo boxes with eye-catching images with custom links, and banner ads at the header. </li>
</ul>
<h3 id="3envomarketplacehttpswordpressorgthemesenvomarketplacedemohttpsenvothemescomenvomarketplace">3. <a href="https://wordpress.org/themes/envo-marketplace/">Envo Marketplace</a> (<a href="https://envothemes.com/envo-marketplace/">Demo</a>)</h3>
<p>Envo Marketplace is a fast and modern WordPress WooCommerce theme. With slight customization, users can build a variety of ecommerce stores suitable for the fashion, tech, sports, home decor, jewelry or furniture industry. </p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/06/1623764957envo-marketplace.jpg" alt="Envo Marketplace theme" /></p>
<p>Here are some of its notable features:</p>
<ul>
<li>It has one-click demo import.</li>
<li>It has a super-fast 537ms load time to improve SEO results.</li>
<li>It supports popular page builders like Elementor, KingComposer, Beaver Builder, and SiteOrigin.</li>
<li>It&#8217;s compatible with YITH WooCommerce Wishlist and YITH WooCommerce Compare.</li>
<li>It&#8217;s an SEO-friendly and translation-ready theme with responsive design.</li>
</ul>
<h3 id="4bigstorehttpsthemehunkcomproductbigstoredemohttpsthemehunkcomwpthemesbigstoreelectro">4. <a href="https://themehunk.com/product/big-store/">Big Store</a> (<a href="https://themehunk.com/wp-themes/big-store-electro/">Demo</a>)</h3>
<p>Big Store is an ecommerce website theme recommended for stores selling clothes, electronics, gadgets, decorative gifts and furniture. It has an easy-to-use customization panel that&#8217;s fully responsive to a variety of mobile devices. On top of this, you can add multiple sections, as well as header and footer layout combinations. </p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/06/1623764953big-store.png" alt="Big Store theme" /></p>
<p>Here are some of its notable features:</p>
<ul>
<li>It boasts a 1-minute setup.</li>
<li>It has a live customizer.</li>
<li>It has deep integration with WooCommerce.</li>
<li>It has SEO-friendly code and is translation ready.</li>
<li>It has multisite support, which enables you to use multiple WordPress themes on a single website.</li>
<li>It has a commercial, premium version with access to lifetime updates, unlimited domain license, lifetime one-to-one premium support, and premium starter demos.</li>
<li>It comes with pre-made templates for gym stores, groceries, shoe stores, online marketplaces, medical shops, bakeries, and more.</li>
</ul>
<h3 id="5astrahttpswpastracomdemohttpswebsitedemosnethomedecor04">5.  <a href="https://wpastra.com/">Astra</a> (<a href="https://websitedemos.net/home-decor-04/">Demo</a>)</h3>
<p>Astra is a popular ecommerce theme for WordPress stores. </p>
<p>In addition to its 150+ starter templates, users can take advantage of its drag-and-drop builder and advanced styling options to create their ideal ecommerce site. </p>
<p>To guarantee unparalleled performance, it uses Vanilla Javascript, less than 50KB of resources, and fast loading times from just 0.5 seconds. </p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/06/1623764950astra.jpg" alt="Astra theme" /></p>
<p>Here are some of its notable features:</p>
<ul>
<li>It&#8217;s compatible with Gutenberg.</li>
<li>It has an intuitive drag-and-drop Header and Footer builder.</li>
<li>It comes with an SEO-friendly theme that includes Schema.org code integration.</li>
<li>It&#8217;s commercial features include all Astra Pro features (such as more customization capabilities and better UX), one-to-one support, extensive training, and unlimited website usage.</li>
<li>It offers the most extensive library of pre-built websites, with over 150+ ready-to-import templates. </li>
<li>It has a visual theme customizer for modifying layout settings.</li>
</ul>
<h3 id="6nevehttpsthemeislecomthemesnevedemohttpsthemeislecomdemothemecraft20beer">6. <a href="https://themeisle.com/themes/neve/">Neve</a> (<a href="https://themeisle.com/demo/?theme=Craft%20Beer">Demo</a>)</h3>
<p>Neve is a free WordPress theme that&#8217;s fast and lightweight. </p>
<p>You can create a professional-looking website through its seamless integration with Gutenberg and popular page builders (such as Elementor, Brizy, Beaver Builder and Visual Composer). Not only is it a fully responsive theme, but it&#8217;s also <abbr title="Accelerated Mobile Pages">AMP</abbr> compatible, so you&#8217;re bound to get on Google’s good side. </p>
<p><img src="https://uploads.sitepoint.com/wp-content/uploads/2021/06/1623764964neve.jpg" alt="Neve theme " /></p>
<p>Here are some of its notable features:</p>
<ul>
<li>It comes with 80+ ready-to-import starter websites. New designs are added to the collection every month.</li>
<li>With default WordPress data, Neve takes less than 1 second to load. It also has a 100 speed grade rating on Google PageSpeed Insights.</li>
<li>It allows you to customize the header and footer and control the website layout options</li>
<li>You can choose from several website layout options and customize or redesign the header and footer. </li>
<li>It renders websites as native AMP pages to satisfy search engines.</li>
</ul>

            <p>
              Continue reading
              <a rel="nofollow" href="https://www.sitepoint.com/top-wordpress-ecommerce-themes/?utm_source=rss">10 Best WordPress eCommerce Themes for 2021</a>
              on <a rel="nofollow" href="https://www.sitepoint.com">SitePoint</a>.
            </p>
          ]]></description><link>https://www.sitepoint.com/top-wordpress-ecommerce-themes/?utm_source=rss</link><guid isPermaLink="false">/?p=195646</guid><category><![CDATA[Themes]]></category><category><![CDATA[Web]]></category><category><![CDATA[WordPress]]></category><dc:creator><![CDATA[Monique Danao]]></dc:creator><pubDate>Wed, 07 Jul 2021 16:00:16 GMT</pubDate><metaDesc>With WordPress themes, you can build a great ecommerce site without being a designer or coder. Here are ten top WordPress ecommerce themes.</metaDesc></item></channel></rss>
